var __v="\u003cpre class=\"prettyprint linenums\"\u003epackage main\n\nimport (\n\t\"archive/zip\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n)\n\nfunc main() {\n\t//打開zip\n\treader, e := zip.OpenReader(\"test.zip\")\n\tif e != nil {\n\t\tfmt.Println(e)\n\t}\n\tdefer reader.Close()\n\n\t//遍歷文件\n\tfor _, zipFile := range reader.Reader.File {\n\t\tname := zipFile.Name\n\t\tmode := zipFile.Mode()\n\t\t//如果是文件夾\n\t\tif mode.IsDir() {\n\t\t\tif e = os.MkdirAll(name, 0755); e != nil {\n\t\t\t\treturn\n\t\t\t}\n\t\t} else {\n\t\t\t//文件\n\t\t\tif e = unzip(name, zipFile); e != nil {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t}\n\t}\n}\nfunc unzip(name string, zipFile *zip.File) error {\n\t//創建解壓文件\n\tw, e := os.Create(name)\n\tif e != nil {\n\t\treturn e\n\t}\n\tdefer w.Close()\n\n\t//獲取壓縮數據\n\treader, e := zipFile.Open()\n\tif e != nil {\n\t\treturn e\n\t}\n\tdefer reader.Close()\n\n\t//解壓\n\tif _, e = io.Copy(w, reader); e != nil {\n\t\treturn e\n\t}\n\tfmt.Println(name)\n\treturn nil\n}\u003c/pre\u003e"