var __v="\u003cpre class=\"prettyprint linenums\"\u003e#include \u0026lt;boost/progress.hpp\u0026gt;\n#include \u0026lt;boost/foreach.hpp\u0026gt;\n\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;cmath\u0026gt;\n\ntypedef std::vector\u0026lt;int\u0026gt; arrays_t;\n\n\nvoid create_rand(arrays_t\u0026amp; arrs,unsigned int seed,int mod);\nvoid show_arrays(const arrays_t\u0026amp; arrs);\n//將兩個有序節點 合併\nvoid merge_sort_arry(arrays_t\u0026amp; arrs,int p, int q,int n);\n//遞歸 歸併排序\nvoid merge_sort(arrays_t\u0026amp; arrs,int p, int n);\nint main(int argc, char* argv[])\n{\n\tstd::size_t n = 10;\n\tunsigned int seed = 1;\n\tint mod = 10;\n\n\tarrays_t arrs(n);\n\tcreate_rand(arrs,seed,mod);\n\n\t{\n\t\tboost::progress_timer t;\n\t\tshow_arrays(arrs);\n\t\tmerge_sort(arrs,0,arrs.size());\n\t\tshow_arrays(arrs);\n\t}\n\n\tstd::system(\"pause\");\n    return 0;\n}\n\nvoid create_rand(arrays_t\u0026amp; arrs,unsigned int seed,int mod)\n{\n\tstd::srand(seed);\n\t\n\tBOOST_FOREACH(int\u0026amp; v,arrs)\n\t{\n\t\tv = std::rand() % mod;\n\t}\n}\nvoid show_arrays(const arrays_t\u0026amp; arrs)\n{\n\tBOOST_FOREACH(const int\u0026amp; v,arrs)\n\t{\n\t\tprintf(\"%d \",v);\n\t}\n\tputs(\"\");\n}\n\nvoid merge_sort(arrays_t\u0026amp; arrs,int p, int n)\n{\n\tif(p+1 \u0026lt; n)\n\t{\n\t\tint q = p + (n-p) / 2;\n\n\t\tmerge_sort(arrs,p,q);\n\t\tmerge_sort(arrs,q,n);\n\n\t\tmerge_sort_arry(arrs,p,q,n);\n\t}\n}\nvoid merge_sort_arry(arrays_t\u0026amp; arrs,int p, int q,int n)\n{\n\tint n1 = q - p;\n\tint n2 = n - q;\n\n\tarrays_t l(n1);\n\tarrays_t r(n2);\n\n\tstd::copy(arrs.begin() + p,arrs.begin()+p+n1,l.begin());\n\tstd::copy(arrs.begin() + q,arrs.begin()+q+n2,r.begin());\n\n\tint i = 0;\n\tint j = 0;\n\n\tn = n1 + n2;\n\tfor(int k=p;k\u0026lt;p+n;++k)\n\t{\n\t\tif(i\u0026gt;=n1)\n\t\t{\n\t\t\tarrs[k] = r[j];\n\t\t\t++j;\n\t\t}\n\t\telse if(j \u0026gt;= n2)\n\t\t{\n\t\t\tarrs[k] = l[i];\n\t\t\t++i;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(l[i] \u0026gt; r[j])\n\t\t\t{\n\t\t\t\tarrs[k] = r[j];\n\t\t\t\tj++;\n\t\t\t} \n\t\t\telse \n\t\t\t{\n\t\t\t\tarrs[k] = l[i];\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n}\u003c/pre\u003e"