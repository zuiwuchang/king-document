var __v="\n\u003cpre class='prettyprint linenums'\u003eEnumWindows(EnumWindowsProc,0);  //注册回调函数枚举當前所有窗口的hwnd 当回调函数返回FALSE 停止枚举 \n                                 //参数2用以传递一个自定义参数\n\nBOOL CALLBACK EnumWindowsProc(HWND hwnd,LPARAM lParam)\n{\n\n\tDWORD current_pid,hwnd_pid;\n\t/*DWORD thread_id=*/GetWindowThreadProcessId(hwnd,\u0026amp;hwnd_pid);\n\t\n\tcurrent_pid=GetCurrentProcessId();\n\t\n\tif(current_pid==hwnd_pid)\n\t{\n\t\t/*\n\t\t//格局風格篩選\n\t\tLONG mystyle=GetWindowLong(hwnd,GWL_STYLE);\n\t\tif(mystyle!=(WS_CAPTION | WS_VISIBLE | WS_CLIPSIBLINGS | WS_SYSMENU | WS_OVERLAPPED | WS_MINIMIZEBOX))\n\t\t{\n\t\t\treturn TRUE;\n\t\t}\n        \n\t\t//根據類名篩選\t\t\n       \t wchar_t window_class_name[CLASS_NAME_LEN]={0};\n\t\tGetClassName(hwnd,window_class_name,CLASS_NAME_LEN);\n\t\tstd::wstring tmp_str(window_class_name);\n\t\tboost::trim(tmp_str);\n\t\tif(tmp_str != L\"MainWnd class of ArkEngine\")\n\t\t{\n\t\t\treturn TRUE;\n\t\t}\n        */\n        \n\t\tLONG hInstance=GetWindowLong(hwnd,GWL_HINSTANCE);   //获取创建窗口的模块 实例地址\n\t\tif(FunctionAddr::instance().baseAddr!=hInstance)    //和要查找模块实例地址比较\n\t\t{\n\t\t\treturn TRUE;\n\t\t}\n\n\t\tstd::cout\u0026lt;\u0026lt;\"pid=\"\u0026lt;\u0026lt;current_pid\u0026lt;\u0026lt;std::endl;\n\t\tif(SetTimer(hwnd,1,50,mainActionTimer))\n\t\t{\n\t\t\tFunctionAddr::instance().hwnd=hwnd;\n\t\t\tstd::cout\u0026lt;\u0026lt;\"设置timer成功  hwnd=\"\u0026lt;\u0026lt;(int)(\u0026amp;hwnd)\u0026lt;\u0026lt;std::endl\u0026lt;\u0026lt;\"$\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstd::cout\u0026lt;\u0026lt;\"error code \"\u0026lt;\u0026lt; GetLastError()\u0026lt;\u0026lt;std::endl\u0026lt;\u0026lt;\"$\";\n\t\t}\n\t\treturn FALSE;\n\t}\n\t\n\treturn TRUE;\n}\u003c/pre\u003e"