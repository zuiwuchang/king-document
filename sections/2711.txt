var __v="\n\u003cpre class='prettyprint linenums'\u003evoid WINAPI GetSystemInfo(\n__out LPSYSTEM_INFO lpSystemInfo\n);\ntemplate\u0026lt;class charT\u0026gt; \ninline std::basic_ostream\u0026lt;charT\u0026gt;\u0026amp; operator\u0026lt;\u0026lt;( std::basic_ostream\u0026lt;charT\u0026gt;\u0026amp; ostream,const SYSTEM_INFO \u0026amp;info)  \n{        \n\tstd::bitset\u0026lt;32\u0026gt; mask((int)info.dwActiveProcessorMask);\n\n\tostream\u0026lt;\u0026lt;std::left\u0026lt;\u0026lt;std::setw(40)\u0026lt;\u0026lt;\"CPU数\"\u0026lt;\u0026lt;info.dwNumberOfProcessors\u0026lt;\u0026lt;ostream.widen('\\n')\n\t\t\u0026lt;\u0026lt;std::left\u0026lt;\u0026lt;std::setw(40)\u0026lt;\u0026lt;\"CPU页面大小\"\u0026lt;\u0026lt;\"0x\"\u0026lt;\u0026lt;std::hex\u0026lt;\u0026lt;info.dwPageSize\u0026lt;\u0026lt;\"kb\"\u0026lt;\u0026lt;ostream.widen('\\n')\n\t\t\u0026lt;\u0026lt;std::left\u0026lt;\u0026lt;std::setw(40)\u0026lt;\u0026lt;\"dwActiveProcessorMask \"\u0026lt;\u0026lt;mask\u0026lt;\u0026lt;ostream.widen('\\n')\u0026lt;\u0026lt;ostream.widen('\\n')\n\n\t\t\u0026lt;\u0026lt;std::left\u0026lt;\u0026lt;std::setw(40)\u0026lt;\u0026lt;\"wProcessorArchitecture \"\u0026lt;\u0026lt;std::hex\u0026lt;\u0026lt;std::setw(3)\u0026lt;\u0026lt;info.wProcessorArchitecture;\n\t\t\n\tswitch(info.wProcessorArchitecture)\n\t{\n\tcase PROCESSOR_ARCHITECTURE_AMD64:\n\t\tostream\u0026lt;\u0026lt;\"AMD64\"\u0026lt;\u0026lt;ostream.widen('\\n');\n\t\tbreak;\n\tcase PROCESSOR_ARCHITECTURE_IA64:\n\t\tostream\u0026lt;\u0026lt;\"IA-64\"\u0026lt;\u0026lt;ostream.widen('\\n');\n\t\tbreak;\n\tcase PROCESSOR_ARCHITECTURE_INTEL:\n\t\tostream\u0026lt;\u0026lt;\"Intel x86\"\u0026lt;\u0026lt;ostream.widen('\\n');\n\t\tbreak;\n\tcase PROCESSOR_ARCHITECTURE_UNKNOWN:\n\t\tostream\u0026lt;\u0026lt;\"UNKNOW\"\u0026lt;\u0026lt;ostream.widen('\\n');\n\t\tbreak;\n\n\t}\n\n\tostream\u0026lt;\u0026lt;std::left\u0026lt;\u0026lt;std::setw(40)\u0026lt;\u0026lt;\"wProcessorLevel \"\u0026lt;\u0026lt;std::hex\u0026lt;\u0026lt;info.wProcessorLevel\u0026lt;\u0026lt;ostream.widen('\\n')\n\t\t\u0026lt;\u0026lt;std::left\u0026lt;\u0026lt;std::setw(40)\u0026lt;\u0026lt;\"wProcessorRevision \"\u0026lt;\u0026lt;std::hex\u0026lt;\u0026lt;info.wProcessorRevision\u0026lt;\u0026lt;ostream.widen('\\n')\u0026lt;\u0026lt;ostream.widen('\\n')\n\t\t\n\t\t\n\t\t\u0026lt;\u0026lt;std::left\u0026lt;\u0026lt;std::setw(40)\u0026lt;\u0026lt;\"进程可用最小地址\"\u0026lt;\u0026lt;\"0x\"\u0026lt;\u0026lt;std::hex\u0026lt;\u0026lt;info.lpMinimumApplicationAddress\u0026lt;\u0026lt;ostream.widen('\\n')\n\t\t\u0026lt;\u0026lt;std::left\u0026lt;\u0026lt;std::setw(40)\u0026lt;\u0026lt;\"进程可用最大地址\"\u0026lt;\u0026lt;\"0x\"\u0026lt;\u0026lt;std::hex\u0026lt;\u0026lt;info.lpMaximumApplicationAddress\u0026lt;\u0026lt;ostream.widen('\\n')\u0026lt;\u0026lt;ostream.widen('\\n')\n\t\t\n\n\t\t\u0026lt;\u0026lt;std::left\u0026lt;\u0026lt;std::setw(40)\u0026lt;\u0026lt;\"wReserved 保留\"\u0026lt;\u0026lt;std::hex\u0026lt;\u0026lt;\"0x\"\u0026lt;\u0026lt;info.wReserved\u0026lt;\u0026lt;ostream.widen('\\n')\n\t\t\u0026lt;\u0026lt;std::left\u0026lt;\u0026lt;std::setw(40)\u0026lt;\u0026lt;\"dwProcessorType 已作废\"\u0026lt;\u0026lt;std::hex\u0026lt;\u0026lt;\"0x\"\u0026lt;\u0026lt;info.dwProcessorType\u0026lt;\u0026lt;ostream.widen('\\n')\n\n\t\t;\n\treturn ostream;        \n}\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n\tSYSTEM_INFO system_info;\n\n\tGetSystemInfo(\u0026amp;system_info);\n\tstd::cout\u0026lt;\u0026lt;system_info\u0026lt;\u0026lt;std::endl;\n\t\n\tstd::system(\"pause\");\n\treturn 0;\n\n}\u003c/pre\u003e"