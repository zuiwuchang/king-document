var __v="\n\u003cpre class='prettyprint linenums'\u003e#include\u0026lt;rsa.h\u0026gt;\n#include\u0026lt;randpool.h\u0026gt;\n\n#pragma comment( lib, \"cryptlib.lib\")\n//CryptoPP\n//(N,e)是公钥，(N,d)是私钥\nint _tmain(int argc, _TCHAR* argv[])\n{\n\t//设置N\n\tchar seed[]=\"fuck\";\n\t//随机密匙产生器定义\n\tCryptoPP::RandomPool randPool;\n\trandPool.Put((byte *)seed, strlen(seed));\n\n\t//產生公鑰 私鑰\n\tCryptoPP::RSAES_OAEP_SHA_Decryptor priv(randPool,1024);\n\tCryptoPP::RSAES_OAEP_SHA_Encryptor pub(priv);\n\t\n\t\t/*\n        //返回密鑰 hex 值\n\t\t/*std::string pub_hex;\n\t\tCryptoPP::HexEncoder hex(new CryptoPP::StringSink(pub_hex));\n\t\tpub.DEREncode(hex);\n\t\thex.MessageEnd();*/\n        \n\t\t//密匙写入文件\n\t\tCryptoPP::HexEncoder  priFile(new CryptoPP::FileSink(\"private.key\"));\n\t\tpriv.DEREncode(priFile);\n\t\tpriFile.MessageEnd();\n\t\tCryptoPP::HexEncoder  pubFile(new CryptoPP::FileSink(\"public.key\"));\n\t\tpub.DEREncode(pubFile);\n\t\tpubFile.MessageEnd();\n\t\t*/\n\n\tchar data[1024] = \"this is a fucking RSA 草泥马的测试\";\n\tprintf(\"原文:%s\\r\\n\",data);\n\t\t/*\n        //直接由hex 返回公鑰\n\t\t/*std::string pub_hex=\"30819D300D06092A864886F70D010101050003818B0030818702818100B3BA154A2CA0D55C071D110917B47E8E02BAB60BA882251D40BAB201CF449DDADC6ADEBC8D33112FBD52A441B114223B7999391C68B2212C9A8361D052B7C821839947DF065347DBE6DFF5994B7E2379A22F65C08619666411D7E7AA6C4B39363E7B8A62AE24B8913D29890DD49A6CEE8AFC036A9E5983900899C24525D1933D020111\";\n\t\tstd::string pub_data;\n\t\tCryptoPP::StringSource(pub_hex,true,new CryptoPP::HexDecoder(new CryptoPP::StringSink(pub_data)));\n\t\tCryptoPP::StringSource source(pub_data,true);\n\t\tCryptoPP::RSAES_OAEP_SHA_Encryptor pub(source);*/\n        \n\t\t//\t由文件读取密匙\n\t\tCryptoPP::FileSource pubFile(\"public.key\", true, new CryptoPP::HexDecoder);\n\t\tCryptoPP::RSAES_OAEP_SHA_Encryptor pub(pubFile);\n\t\tCryptoPP::FileSource privFile(\"private.key\", true, new CryptoPP::HexDecoder);\n\t\tCryptoPP::RSAES_OAEP_SHA_Decryptor priv(privFile);\n\t\t*/\n\t\t//加密\n\tstd::string encrypt;\n\tCryptoPP::StringSource(data, true, new CryptoPP::PK_EncryptorFilter(randPool, pub, new CryptoPP::HexEncoder(new CryptoPP::StringSink(encrypt))));\n\tprintf(\"密文:%s\\r\\n\",encrypt.c_str());\n\t//解密\n\tstd::string decrypt; \n\tCryptoPP::StringSource(encrypt, true, new CryptoPP::HexDecoder(new CryptoPP::PK_DecryptorFilter(randPool, priv, new CryptoPP::StringSink(decrypt))));\n\tprintf(\"解码:%s\\r\\n\",decrypt.c_str()); \n\n\tsystem(\"pause\");\n\treturn 0;\n}\u003c/pre\u003e"