var __v="\n\u003cpre class='prettyprint linenums'\u003epackage controllers\n\nimport (\n\t\"fmt\"\n\t\"github.com/revel/revel\"\n\t\"golang.org/x/net/websocket\"\n)\n\ntype App struct {\n\t*revel.Controller\n}\n\nfunc (c App) Index() revel.Result {\n\tc.Session[\"key\"] = \"123\"\n\treturn c.Render()\n}\nfunc (c App) Echo(ws *websocket.Conn) revel.Result {\n\tfmt.Println(\"websocket in\", ws.LocalAddr(), ws.RemoteAddr(), c.Session[\"key\"])\n\tvar err error\n\n\tfor {\n\n\t\tvar reply string\n\n\t\tif err = websocket.Message.Receive(ws, \u0026amp;reply); err != nil {\n\t\t\tfmt.Println(\"Can't receive\")\n\t\t\tbreak\n\t\t}\n\n\t\tfmt.Println(\"Received back from client: \" + reply)\n\n\t\tmsg := \"Received:  \" + reply\n\t\tfmt.Println(\"Sending to client: \" + msg)\n\t\tif err = websocket.Message.Send(ws, msg); err != nil {\n\t\t\tfmt.Println(\"Can't send\")\n\t\t\tbreak\n\t\t}\n\t}\n\n\tfmt.Println(\"websocket out\", ws.LocalAddr())\n\treturn nil\n}\n\u003c/pre\u003e"