var __v="\n\u003cpre class='prettyprint linenums'\u003e#include\u0026lt;boost\\signals2.hpp\u0026gt;\n\ntemplate\u0026lt;int N\u0026gt;\nclass display_n\n{\npublic:\n\tint operator()()\n\t{\n\t\tstd::cout\u0026lt;\u0026lt;N\u0026lt;\u0026lt;std::endl;\n\t\treturn N;\n\t}\n};\n//自定義合併器\ntemplate\u0026lt;typename T\u0026gt;\nclass combiner\n{\npublic:\n\n\ttypedef T result_type;\n\n\ttemplate\u0026lt;typename InputIterator\u0026gt;\n\tresult_type operator()(InputIterator begin,InputIterator end)const\n\t{\n\t\tT\tsum\t=\tT();\n\t\tBOOST_AUTO(tmp,begin);\n\t\twhile(tmp\t!=\tend)\n\t\t{\n\t\t\tsum\t+=\t*tmp;\n\t\t\t++tmp;\n\t\t}\n\t\treturn sum;\n\t}\n\n};\nint _tmain(int argc, _TCHAR* argv[])\n{\n\t\n\ttypedef\tboost::signals2::signal\u0026lt;int()\t//插槽標籤\n\t\t\t\t,combiner\u0026lt;int\u0026gt;\t\t\t\t//合併器\n\t\t\t\u0026gt; signal_t;\n\n\tsignal_t signal;\n\n\t//關聯三個 插槽\n\tsignal.connect(display_n\u0026lt;0\u0026gt;());\n\tsignal.connect(display_n\u0026lt;1\u0026gt;());\n\tsignal.connect(display_n\u0026lt;2\u0026gt;());\n\n\t//使用組號\n\tsignal.connect(2,display_n\u0026lt;11\u0026gt;());\n\tauto\tconnection\t=\tsignal.connect(2,display_n\u0026lt;12\u0026gt;());\n\tsignal.connect(2,display_n\u0026lt;10\u0026gt;(),boost::signals2::at_front);\n\tsignal.connect(2,display_n\u0026lt;13\u0026gt;(),boost::signals2::at_back);\n\n\tsignal.connect(display_n\u0026lt;-\u0026gt;\u0026gt;(),boost::signals2::at_front);\n\n\t//斷開插槽\n\tsignal.connect(3,display_n\u0026lt;100\u0026gt;());\n\tsignal.disconnect(3);\t//斷開所有編組為3的插槽\n\n\t//阻塞\n\tboost::signals2::shared_connection_block block(connection);\n\t\n\t//自動管理\n\tboost::shared_ptr\u0026lt;display_n\u0026lt;1000\u0026gt;\u0026gt; p(new display_n\u0026lt;1000\u0026gt;);\n\tsignal.connect(signal_t::slot_type(boost::ref(*p)).track(p)\n\t\t);\n\tp.reset();\n\n\t//產生信號\n\tsignal();\n\n\tstd::system(\"pause\");\n\treturn 0;\n}\u003c/pre\u003e"