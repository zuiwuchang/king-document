var __v="\u003cpre class=\"k-pre\"\u003e//創建工作項\nPTP_TIMER WINAPI CreateThreadpoolTimer(\n  __in         PTP_TIMER_CALLBACK pfnti,\n  __inout_opt  PVOID pv,\n  __in_opt     PTP_CALLBACK_ENVIRON pcbe\n);\n\n//線程池執行 函數聲明\nVOID CALLBACK TimerCallback(\n  __inout      PTP_CALLBACK_INSTANCE Instance,\n  __inout_opt  PVOID Context,\n  __inout      PTP_TIMER Timer\n);\n\n//向線程池 註冊 定時器\nVOID WINAPI SetThreadpoolTimer(\n  __inout   PTP_TIMER pti,\n  __in_opt  PFILETIME pftDueTime,\t//指向 FILETIME 結構 第一次執行回調時間 (-1立刻執行) (\u0026lt;0 以微秒為單位相對現在時間) (\u0026gt; 以100納秒為單位 相對1600年1月1日時間)\n  __in      DWORD msPeriod,\t\t//0只執行一次 否則為 定時器時間間隔微妙\n  __in_opt  DWORD msWindowLength\t//增加定時器隨機性 定時器 將增加 [0,msWindowLength] 之間隨機的時間間隔誤差\n);\n\n//返回一個 定時器 工作項 是否註冊\nBOOL WINAPI IsThreadpoolTimerSet(\n  __inout  PTP_TIMER pti\n);\n\n\n//在不需時 應該關閉工作項\nVOID WINAPI CloseThreadpoolTimer(\n  __inout  PTP_TIMER pti\n);\n\n//同WaitForThreadpoolWorkCallbacks\nVOID WINAPI WaitForThreadpoolTimerCallbacks(\n  __inout  PTP_TIMER pti,\n  __in     BOOL fCancelPendingCallbacks\n);\n\u003c/pre\u003e"