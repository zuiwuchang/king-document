var __v="\u003cpre class=\"prettyprint linenums\"\u003e\u0026lt;?xml version=\"1.0\" encoding=\"utf-8\"?\u0026gt;\n\u0026lt;root version='1'\u0026gt;\n\t\u0026lt;item\u0026gt;\n\t\t\u0026lt;url\u0026gt;https://www.google.com\u0026lt;/url\u0026gt;\n\t\t\u0026lt;note\u0026gt;google search\u0026lt;/note\u0026gt;\n\t\u0026lt;/item\u0026gt;\n\t\u0026lt;item\u0026gt;\n\t\t\u0026lt;url\u0026gt;https://mail.google.com/\u0026lt;/url\u0026gt;\n\t\t\u0026lt;note\u0026gt;google email\u0026lt;/note\u0026gt;\n\t\u0026lt;/item\u0026gt;\n\n\u0026lt;/root\u0026gt;\u003c/pre\u003e\n\u003cpre class=\"prettyprint linenums\"\u003epackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n)\n\ntype XML struct {\n\tXMLName xml.Name `xml:\"root\"`\n\tVersion string   `xml:\"version,attr\"`\n\tNote    []Note   `xml:\"item\"`\n}\ntype Note struct {\n\tNote string `xml:\"note\"`\n\tUrl  string `xml:\"url\"`\n}\n\nfunc main() {\n\t//讀\n\tfile, err := os.Open(\"my.xml\")\n\tif err != nil {\n\t\tfmt.Printf(\"error: %v\", err)\n\t\treturn\n\t}\n\tdefer file.Close()\n\tdata, err := ioutil.ReadAll(file)\n\tif err != nil {\n\t\tfmt.Printf(\"error: %v\", err)\n\t\treturn\n\t}\n\tv := XML{}\n\terr = xml.Unmarshal(data, \u0026amp;v)\n\tif err != nil {\n\t\tfmt.Printf(\"error: %v\", err)\n\t\treturn\n\t}\n\tfmt.Println(v)\n\n\t//寫\n\tb, e := xml.Marshal(v)\n\tif e != nil {\n\t\tfmt.Println(e)\n\t\treturn\n\t}\n\tos.Stdout.Write([]byte(xml.Header))\n\tos.Stdout.Write(b)\n\tos.Stdout.Write([]byte(\"\\n\\n\"))\n\n\tb, e = xml.MarshalIndent(v, \"\", \"\t\")\n\tif e != nil {\n\t\tfmt.Println(e)\n\t\treturn\n\t}\n\tos.Stdout.Write([]byte(xml.Header))\n\tos.Stdout.Write(b)\n}\u003c/pre\u003e"