var __v="\n\u003cpre class='prettyprint linenums'\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;iconv.h\u0026gt;\n#include \u0026lt;string\u0026gt;\n\n\nint main()\n{\n\n    //創建一個 轉換 句柄\n    iconv_t cd = iconv_open(\"GBK\",\"UTF-8\");\n    if(cd == (iconv_t)-1)\n    {\n        std::cout\u0026lt;\u0026lt;\"iconv_open error\\n\";\n        return 0;\n    }\n\n    std::string utf8 = u8\"草泥馬b\";\n    std::size_t utf8_size = utf8.size();\n    const char* p_u = utf8.data();\n\n    std::size_t gbk_size = 100;\n    char gbk[100] = {0};\n    char* p_g = gbk;\n    std::size_t n = iconv(cd,\u0026amp;p_u,\u0026amp;utf8_size,\u0026amp;p_g,\u0026amp;gbk_size);\n    if(n == (std::size_t)-1)\n    {\n        std::cout\u0026lt;\u0026lt;\"iconv error\\n\";\n    }\n    else\n    {\n        std::cout\u0026lt;\u0026lt;(100 - gbk_size)\u0026lt;\u0026lt;\" \"\u0026lt;\u0026lt;gbk\u0026lt;\u0026lt;\"\\n\";\n    }\n\n    //銷毀 iconv 句柄\n    iconv_close(cd);\n    return 0;\n}\n\u003c/pre\u003e"