var __v="\u003col\u003e\n\t\u003cli\u003e初始化socket庫\u003c/li\u003e\n\t\u003cli\u003e創建socket\u003c/li\u003e\n\t\u003cli\u003e綁定服務器到指定端口\u003c/li\u003e\n\t\u003cli\u003e接收 發送數據\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre class='prettyprint linenums'\u003ebool Start() \n{\n\tWORD wVersionRequested;\n\tWSADATA wsaData;\n\tint err;\n\n\twVersionRequested = MAKEWORD( 2, 2 );\n \n\terr = WSAStartup( wVersionRequested, \u0026amp;wsaData );\n\tif ( err != 0 )\n\t{\n                    \n\t\treturn false;\n\t}\n \n \n\tif ( LOBYTE( wsaData.wVersion ) != 2 || HIBYTE( wsaData.wVersion ) != 2 ) \n\t{                     \n\t\tWSACleanup( );\n\t\treturn false; \n\t}\n\n\treturn true;\n}\nint _tmain(int argc, _TCHAR* argv[])\n{\n\tif(Start())\n\t{\n\t\t//创建数据报 socket\n\t\tSOCKET sock\t=\tsocket(AF_INET,SOCK_DGRAM,0);\n\t\tif(INVALID_SOCKET == sock)\n\t\t{\n\t\t\tputs(\"create socket error\");\n\t\t\tWSACleanup();\n\t\t\treturn 0;\n\t\t}\n\n\t\t//绑定套接字\n\t\tSOCKADDR_IN addr;\n\t\taddr.sin_family\t=\tAF_INET;\n\t\taddr.sin_port\t=\thtons(1102);\n\t\taddr.sin_addr.S_un.S_addr\t=\thtonl(INADDR_ANY);\n\t\tint len\t=\tsizeof(SOCKADDR);\n\t\tif(SOCKET_ERROR\t==\tbind(sock,(SOCKADDR*)\u0026amp;addr,len))\n\t\t{\n\t\t\tputs(\"bind socket error\");\n\t\t\tWSACleanup();\n\t\t\treturn 0;\n\t\t}\n\n\t\tchar buffer[1024]\t=\t{0};\n\t\tchar send_buffer[]\t=\t\"i know\";\n\t\tSOCKADDR_IN client_addr;\n\t\twhile(true)\n\t\t{\n\t\t\t//接受数据\n\t\t\tint size\t=\trecvfrom(sock\n\t\t\t\t,buffer\n\t\t\t\t,sizeof(buffer)\n\t\t\t\t,0\n\t\t\t\t,(SOCKADDR*)\u0026amp;client_addr\n\t\t\t\t,\u0026amp;len\n\t\t\t\t);\n\t\t\tprintf(\"%s\t:\t(%d)%s\\n\",inet_ntoa(client_addr.sin_addr),size,buffer);\n\n\t\t\t//发送数据\n\t\t\tsendto(sock\n\t\t\t\t,send_buffer\n\t\t\t\t,sizeof(send_buffer)\n\t\t\t\t,0\n\t\t\t\t,(sockaddr*)\u0026amp;client_addr\n\t\t\t\t,len);  \n\t\t}\n\n\t\tWSACleanup();\n\t}\n\n\treturn 0;\n}\u003c/pre\u003e"