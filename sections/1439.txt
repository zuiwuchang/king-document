var __v="\u003cpre class=\"k-pre\"\u003e所谓返璞归真 余还是觉得 用c操作文件最方便 故记录c函数如下\n\n\n\u003cstrong\u003e打开文件\u003c/strong\u003e\nFILE *fopen( \n\tconst char *filename,\n\tconst char *mode \n);\nFILE *_wfopen( \n\tconst wchar_t *filename,\n\tconst wchar_t *mode \n);\n\u003cstrong\u003e读写文件\u003c/strong\u003e\nsize_t fwrite(\t\t\n\tconst void *buffer,\n\tsize_t size,\n\tsize_t count,\n\tFILE *stream \n);\nsize_t fread(\t\u003cstrong\u003e//返回实际读取count 若最后 一次读取不足size count不会记录 但会读取 实际size大小的数据\u003c/strong\u003e\n\tvoid *buffer,\n\tsize_t size,\n\tsize_t count,\n\tFILE *stream \n);\n\nint getc( \n\tFILE *stream \n);\nwint_t getwc( \n\tFILE *stream \n);\n\n\u003cstrong\u003e读写位置\u003c/strong\u003e\nlong ftell( \n\tFILE *stream \n);\nint fseek( \n\tFILE *stream,\n\tlong offset,\n\tint origin \n);\n\u003cstrong\u003eorigin取值\u003c/strong\u003e\nSEEK_SET 从文件的开始处开始搜索 \nSEEK_CUR 从当前位置开始搜索 \nSEEK_END 从文件的结束处开始搜索 \n\n\u003cstrong\u003e刷新文件缓冲区\u003c/strong\u003e\nint fflush( \n\tFILE *stream \n);\n\u003c/pre\u003e"