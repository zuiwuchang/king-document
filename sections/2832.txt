var __v="\n\u003cpre class='prettyprint linenums'\u003e//保存hook句柄\nHHOOK hHook=NULL;\n//保存dll实例句柄\nHINSTANCE hinstance;\n\n//dll main\nBOOL WINAPI DllMain( HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved)\n{\n\tswitch(fdwReason)\n\t{\n\tcase DLL_PROCESS_ATTACH:\n\t\thinstance=hinstDLL;\n\t\tbreak;\n\tcase DLL_PROCESS_DETACH:\n\tcase DLL_THREAD_ATTACH:\n\tcase DLL_THREAD_DETACH:\n\t\tbreak;\n\t}\n\treturn TRUE;\n }\n\n//安装钩子\nbool SetHook()\n{\n\thHook=SetWindowsHookEx(WH_KEYBOARD_LL,//hook类型用于指定 拦截的消息\n\t\tLowLevelKeyboardProc,//hook回调函数\n\t\thinstance,//dll实例句柄 为0 hook本进程\n\t\t0);// 被hook的线程id(本線程或 由此線程派生線程 對於其他進程的線程無效) 为0代表hook整个系统\n\treturn hHook!=NULL;\n}\n\n//移除钩子\nbool UnSetHook()\n{\n\tif(hHook!=NULL)\n\t{\n\t\treturn UnhookWindowsHookEx(hHook)!=0;\n\t}\n\treturn true;\n}\n\n//回調\nLRESULT CALLBACK LowLevelKeyboardProc(int nCode,WPARAM wParam,  LPARAM lParam )\n{\n\t/*WH_KEYBOARD\n\tif (wParam==VK_F2)\n\t{\t\n\t\tUnSetHook();\n\t\treturn TRUE;\n\t}\n\n\t//中断消息传递\n\treturn TRUE;\n\t//传递消息继续\n\treturn CallNextHookEx(hHook,nCode,wParam,lParam);*/\n\n\tif(WM_SYSKEYUP==wParam ||  WM_KEYUP==wParam)\n\t{\n\t\tPKBDLLHOOKSTRUCT lp=(PKBDLLHOOKSTRUCT)lParam;\n\t\tif (lp-\u0026gt;vkCode==VK_F2 )\n\t\t{\t\n\t\t\tstatue=false;\n\t\t}\n\t\tif (lp-\u0026gt;vkCode==VK_F1)\n\t\t{\t\n\t\t\tstatue=true;\n\t\t}\n\t}\n\t//传递消息继续\n\treturn CallNextHookEx(hHook,nCode,wParam,lParam);\n}\n\u003c/pre\u003e"