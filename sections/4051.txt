var __v="\n\u003cpre class='prettyprint linenums'\u003ecc.Class({\n    extends: cc.Component,\n\n    properties: {\n        Role:cc.SpriteFrame,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        //創建 對象池\n       var pool = new cc.NodePool();\n       this.pool = pool;\n\n\n        //在 對象池 中 創建2個 對象用於 重複使用\n        for (var i = 0; i \u0026lt; 2; i++) {\n            var node = this.newNode();\n            \n            //將對象 加入到 對象池\n            pool.put(node);\n        }\n        \n        //創建 三個定時器 分別 創建一個 角色\n        this.scheduleOnce(function() {\n            this.postRole(10);\n        }, 0);\n\n        this.scheduleOnce(function() {\n            this.postRole(210);\n        }, 1);\n\n        this.scheduleOnce(function() {\n            this.postRole(410);\n        }, 2);\n        \n    },\n\n    //輔助函數 創建一個 節點\n    newNode:function(){\n        var node = new cc.Node();\n        var component = node.addComponent(cc.Sprite);\n        component.spriteFrame = this.Role;\n        node.scale = 0.7;\n        return node;\n    },\n    //輔助函數 返回一個 新節點\n    getNode:function(){\n        //簡潔的寫法\n        //return this.pool.get() || this.newNode();\n\n        var pool = this.pool;\n        //對象池中 存在 節點 直接返回\n        if(pool.size() \u0026gt; 0){\n            return pool.get();\n        }\n\n        //對象池爲空 創建 新節點\n        console.log(\"new role\");\n        return this.newNode();\n    },\n    //輔助函數 創建一個角色 左入右出\n    postRole:function(y){\n        //創建 角色 並加入到 當前節點\n        var node = this.getNode();\n        node.parent = this.node;\n\n        //調整 位置\n        var h0 = this.node.height / 2;\n        var h1 = node.height / 2;\n        node.y = y - h0 + h1;\n\n        var w0 = this.node.width / 2;\n        var w1 = node.width / 2;\n        node.x = -w0 - w1;\n\n        //執行 動作 左入右出\n        node.runAction(\n            cc.sequence(\n                cc.moveBy(4, w0 * 2 + w1 * 2 , 0),\n                cc.callFunc(function(){\n                    //將對象 還給 對象池\n                    //會自動 從 父節點中移出\n                    this.pool.put(node);\n\n                    //繼續 左入右出\n                    this.postRole(y);\n                },this)\n            )\n        );\n    },\n\n});\n\u003c/pre\u003e\n"