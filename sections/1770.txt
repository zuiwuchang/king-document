var __v="\u003cpre class=\"k-pre\"\u003e//將 另外一個dc 複製到本dc\n\u003cstrong\u003ebool Blit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height //複製到本dc的 位置 大小\n\t, wxDC* source, wxCoord xsrc, wxCoord ysrc\t//源dc 及複製位置\n\t, int logicalFunc = wxCOPY\t//複製模式\n\t, bool useMask = false, wxCoord xsrcMask = -1, wxCoord ysrcMask = -1)\n\n\tlogicalFunc 取值    \n\twxAND                 src AND dst\n\twxAND_INVERT          (NOT src) AND dst\n\twxAND_REVERSE         src AND (NOT dst)\n\twxCLEAR               0\n\twxCOPY                src\n\twxEQUIV               (NOT src) XOR dst\n\twxINVERT              NOT dst\n\twxNAND                (NOT src) OR (NOT dst)\n\twxNOR                 (NOT src) AND (NOT dst)\n\twxNO_OP               dst\n\twxOR                  src OR dst\n\twxOR_INVERT           (NOT src) OR dst\n\twxOR_REVERSE          src OR (NOT dst)\n\twxSET                 1\n\twxSRC_INVERT          NOT src\n\twxXOR                 src XOR dst\n\u003c/strong\u003e\n\n//使用當前背景畫刷 刷新背景\nvoid Clear()\n\n\u003cstrong\u003e//設置 繪圖區域 (區域外的繪製將被忽略)\u003c/strong\u003e\nvoid SetClippingRegion(wxCoord x, wxCoord y, wxCoord width, wxCoord height)\nvoid SetClippingRegion(const wxPoint\u0026amp; pt, const wxSize\u0026amp; sz)\nvoid SetClippingRegion(const wxRect\u0026amp; rect)\nvoid SetClippingRegion(const wxRegion\u0026amp; region)\n\u003cstrong\u003e//取消 繪圖區域 限制\u003c/strong\u003e\nvoid DestroyClippingRegion()\n//返回 繪圖區域 所在矩形\nvoid GetClippingBox(wxCoord *x, wxCoord *y, wxCoord *width, wxCoord *height)\n\n//繪製圓弧 傳入 起點 終點 圓心\nvoid DrawArc(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2, wxCoord xc, wxCoord yc)\n\u003cstrong\u003e//繪製橢圓 或 扇形 傳入 所在矩形 位置 大小 \n//start end 使用[-360,360] 的角度 表示要繪製的 橢圓包含的角度 (用於 繪製圓弧)\u003c/strong\u003e\nvoid DrawEllipticArc(wxCoord x, wxCoord y, wxCoord width, wxCoord height, double start, double end)\n//繪製圓 傳入 圓心 變長\nvoid DrawCircle(wxCoord x, wxCoord y, wxCoord radius)\nvoid DrawCircle(const wxPoint\u0026amp; pt, wxCoord radius)\n//繪製橢圓 傳入所在 矩形\nvoid DrawEllipse(wxCoord x, wxCoord y, wxCoord width, wxCoord height)\nvoid DrawEllipse(const wxPoint\u0026amp; pt, const wxSize\u0026amp; size)\nvoid DrawEllipse(const wxRect\u0026amp; rect)\n\n//繪製線 最後一個點上 不會顯示的\nvoid DrawLine(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2)\nvoid DrawLines(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0)\nvoid DrawLines(wxList *points, wxCoord xoffset = 0, wxCoord yoffset = 0)\n\n//繪製點\nvoid DrawPoint(wxCoord x, wxCoord y)\n//通過 多個點 繪製封包多邊形\nvoid DrawPolygon(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0,\nint fill_style = wxODDEVEN_RULE)\nvoid DrawPolygon(wxList *points, wxCoord xoffset = 0, wxCoord yoffset = 0,\nint fill_style = wxODDEVEN_RULE)\n\n//繪製矩形 圓角矩形\nvoid DrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height)\nvoid DrawRoundedRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height, double radius)\n\n//繪製文本 或旋轉文本\nvoid DrawText(const wxString\u0026amp; text, wxCoord x, wxCoord y)\nvoid DrawRotatedText(const wxString\u0026amp; text, wxCoord x, wxCoord y, double angle)\n//返回繪製文本 需要的大小\nvoid GetTextExtent(const wxString\u0026amp; string, wxCoord *w, wxCoord *h,\n\twxCoord *descent = NULL, wxCoord *externalLeading = NULL, wxFont *font = NULL) const\nwxSize GetTextExtent(const wxString\u0026amp; string) const\nbool GetPartialTextExtents(const wxString\u0026amp; text, wxArrayInt\u0026amp; widths) const\n//設置獲取 文本 前景 背景色\nconst wxColour\u0026amp; GetTextForeground() const\nvoid SetTextForeground(const wxColour\u0026amp; colour)\nconst wxColour\u0026amp; GetTextBackground() const\nvoid SetTextBackground(const wxColour\u0026amp; colour)\n//設置 獲取 文本繪製 背景模式 wxTRANSPARENT(透明背景)\nvoid SetBackgroundMode(int mode)\nint GetBackgroundMode() const\n\n//繪製平滑曲線\nvoid DrawSpline(int n, wxPoint points[])\nvoid DrawSpline(wxList *points)\nvoid DrawSpline(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2, wxCoord x3, wxCoord y3)\n\n//繪製 位圖 圖標\nvoid DrawBitmap(const wxBitmap\u0026amp; bitmap, wxCoord x, wxCoord y, bool transparent)\nvoid DrawIcon(const wxIcon\u0026amp; icon, wxCoord x, wxCoord y)\n\u003c/pre\u003e"