var __v="\u003cpre class=\"prettyprint linenums\"\u003efinal String KEY_ALGORITHM=\"RSA\";\t\t//算法名\t\t\nfinal int KEY_SIZE=1024;\t\t\t//密钥长度\n\t\t\nString str=\"this is \"+KEY_ALGORITHM;\nSystem.out.println(\"原文:\"+str);\n\t\t\n//生成密钥对\nKeyPairGenerator keyPairGen=KeyPairGenerator.getInstance(KEY_ALGORITHM);\t\nkeyPairGen.initialize(KEY_SIZE);\t\t\t\t//初始化密钥工厂\nKeyPair keyPair = keyPairGen.generateKeyPair();\t\t\t//生成密钥对\nbyte[] public_key=keyPair.getPublic().getEncoded();\t\t//获取公钥byte数据\nbyte[] private_key=keyPair.getPrivate().getEncoded();\t\t//获取私钥byte数据\nSystem.out.println(\"公钥:\"+new String(Hex.encode(public_key)));\nSystem.out.println(\"私钥:\"+new String(Hex.encode(private_key)));\n\t\t\n//加密\nKeyFactory keyFactory=KeyFactory.getInstance(KEY_ALGORITHM);\n//X509EncodedKeySpec x509KeySpec=new X509EncodedKeySpec(public_key);\t//此两行由保存的public key byte数据\n//PublicKey publicKey=keyFactory.generatePublic(x509KeySpec);\t\t//恢复public key\t\t\t\t\nCipher cipher=Cipher.getInstance(keyFactory.getAlgorithm());\ncipher.init(Cipher.ENCRYPT_MODE,/*publicKey*/ keyPair.getPublic());\nbyte[] data=cipher.doFinal(str.getBytes());\nSystem.out.println(\"密文:\"+new String(Hex.encode(data)));\nstr=new String(Hex.encode(data));\n\t\t\n//解密\n//KeyFactory keyFactory=KeyFactory.getInstance(KEY_ALGORITHM);\n//cipher=Cipher.getInstance(keyFactory.getAlgorithm());\n//PKCS8EncodedKeySpec pkcs8KeySpec=new PKCS8EncodedKeySpec(private_key);\t//此两行由保存的private key byte数据\n//PrivateKey privateKey=keyFactory.generatePrivate(pkcs8KeySpec);\t\t//恢复private key\t\ncipher.init(Cipher.DECRYPT_MODE, /*privateKey*/keyPair.getPrivate());\ndata=cipher.doFinal(data);\nSystem.out.println(\"解密:\"+new String(data));\u003c/pre\u003e"