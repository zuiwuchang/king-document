var __v="\n\u003cpre class='prettyprint linenums'\u003e// test_json.cpp : 定义控制台应用程序的入口点。\n//\n\n#include \"stdafx.h\"\n#include \u0026lt;iostream\u0026gt;\n\n#include \u0026lt;json/json.h\u0026gt;\n#pragma comment(lib,\"json_vc100_libmdd.lib\")\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n  /****** write *******/\n  Json::Value root;\n  {\n    //base\n    root[\"name\"] = \"dark\";\n    root[\"lv\"] = 666;\n    root[\"king\"] = true;\n\n    //array\n    Json::Value arrs;\n    for(int i=0;i\u0026lt;5;++i)\n    {\n      arrs.append(i);\n    }\n    root[\"arrs\"] = arrs;\n\n    //obj\n    Json::Value obj;\n    obj[\"work\"] = \"cerberus\";\n    obj[\"idea\"] = \"cerberus it's an idea\";\n    root[\"obj\"] = obj;\n  }\n  /*\n  //無格式 未縮進 json 字符串 \n  Json::FastWriter writer;  \n  std::cout\u0026lt;\u0026lt;writer.write(root)\u0026lt;\u0026lt;\"\\n\";\n  */\n  std::string str = root.toStyledString();\n  std::cout\u0026lt;\u0026lt;str\u0026lt;\u0026lt;\"\\n\";\n  \n  /****** read *******/\n  {\n    Json::Value root;\n    Json::Reader reader;\n    //reader.parse(\"test.json\");\n    //reader.parse(istream);\n    if(reader.parse(str.data(),str.data() + str.size(),root))\n    {\n      //base\n      std::cout\u0026lt;\u0026lt;root[\"name\"].asString()\u0026lt;\u0026lt;\"\\n\";\n      std::cout\u0026lt;\u0026lt;root[\"lv\"].asInt()\u0026lt;\u0026lt;\"\\n\";\n      std::cout\u0026lt;\u0026lt;root[\"king\"].asBool()\u0026lt;\u0026lt;\"\\n\";\n\n      //未定義的值為 null\n      std::cout\u0026lt;\u0026lt;root[\"unknow\"].isNull()\u0026lt;\u0026lt;\"\\n\";\n\n      //array\n      Json::Value arrs = root[\"arrs\"];\n      if(arrs.isArray())\n      {\n        for(Json::Value::ArrayIndex i=0;i\u0026lt;arrs.size();++i)\n        {\n          std::cout\u0026lt;\u0026lt;arrs[i].asInt()\u0026lt;\u0026lt;\"\\n\";\n        }\n\n        for(Json::ValueIterator iter=arrs.begin();iter!=arrs.end();++iter)\n        {\n          std::cout\u0026lt;\u0026lt;\"index:\"\u0026lt;\u0026lt;iter.index()\u0026lt;\u0026lt;\"  value:\"\u0026lt;\u0026lt;iter-\u0026gt;asInt()\u0026lt;\u0026lt;\"\\n\";\n        }\n      }\n\n      //obj\n      Json::Value obj = root[\"obj\"];\n      std::cout\u0026lt;\u0026lt;obj[\"work\"].asString()\u0026lt;\u0026lt;\"\\n\";\n      std::cout\u0026lt;\u0026lt;obj[\"idea\"].asString()\u0026lt;\u0026lt;\"\\n\";\n\n      for(Json::ValueIterator iter=obj.begin();iter!=obj.end();++iter)\n      {\n        std::cout\u0026lt;\u0026lt;\"key:\"\u0026lt;\u0026lt;iter.key().asString()\u0026lt;\u0026lt;\" value:\"\u0026lt;\u0026lt;iter-\u0026gt;asString()\u0026lt;\u0026lt;\"\\n\";\n      }\n    }\n  }\n  return 0;\n}\u003c/pre\u003e"