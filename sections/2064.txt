var __v="\n\u003cpre class='prettyprint linenums'\u003e//對於 自定義型別 需要實現 boost::hash\u0026lt;T\u0026gt; 以讓boost庫 知道如何計算散列\n\n#include \u0026lt;boost/foreach.hpp\u0026gt;\n#include \u0026lt;boost/assign.hpp\u0026gt;\n#include \u0026lt;boost/unordered_set.hpp\u0026gt;\n\nclass Test\n{\npublic:\n\tTest(int id,std::string name)\n\t{\n\t\tthis-\u0026gt;id\t=\tid;\n\t\tthis-\u0026gt;name\t=\tname;\n\t}\n\tint id;\n\tstd::string name;\n\n\tbool operator==(const Test\u0026amp; right) const\n\t{\n\t\treturn id == right.id \u0026amp;\u0026amp; name == right.name;\n\t}\n\tfriend std::size_t hash_value(const Test\u0026amp; value);\n\n};\n\nstd::size_t hash_value(const Test\u0026amp; value)\n{\n\t//如果只有一個 值需要計算hash\n\t//return boost::hash\u0026lt;int\u0026gt;()(value.id);\n\n\tstd::size_t hash\t=\t0;\n\tboost::hash_combine(hash,value.id);\n\tboost::hash_combine(hash,value.name);\n\treturn hash;\n}\nint _tmain(int argc, _TCHAR* argv[])\n{\n\tboost::unordered_set\u0026lt;Test\u0026gt; set\t=\tboost::assign::list_of(Test(1,\"1\"))(Test(2,\"2\"));\n\n\tBOOST_FOREACH(const Test\u0026amp; var,set)\n\t{\n\t\tstd::cout\u0026lt;\u0026lt;var.id\u0026lt;\u0026lt;\"\\t\"\u0026lt;\u0026lt;var.name\u0026lt;\u0026lt;std::endl;\n\t}\n\n\tstd::system(\"pause\");\n\treturn 0;\n}\u003c/pre\u003e"