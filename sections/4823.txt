var __v="\u003cpre class='k-pre'\u003eBucket 是bolt 的存儲桶 每個 Bucket 都有自己獨立的 key/value pair\nBucket 可以看作是傳統數據庫中的 表\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003epackage main\n\nimport (\n\t\"fmt\"\n\t\"github.com/boltdb/bolt\"\n\t\"log\"\n\t\"time\"\n)\n\nfunc main() {\n\tTableName := []byte(\"users\")\n\n\t// 如果 不存在檔案 則 創建數據庫\n\t// 否則 打開數據庫\n\tdb, e := bolt.Open(\"my.db\", 0600, \u0026amp;bolt.Options{Timeout: time.Second})\n\tif e != nil {\n\t\tlog.Fatal(e)\n\t}\n\t// 關閉 數據庫\n\tdefer db.Close()\n\n\te = db.Update(func(t *bolt.Tx) error {\n\t\t// 查詢 Bucket 是否存在\n\t\tb := t.Bucket(TableName)\n\t\tvar e error\n\t\tif b != nil {\n\t\t\t// 刪除 已經存在的 Bucket\n\t\t\te = t.DeleteBucket(TableName)\n\t\t\tif e != nil {\n\t\t\t\treturn e\n\t\t\t}\n\t\t}\n\n\t\t// 創建 Bucket\n\t\tb, e = t.CreateBucket(TableName)\n\t\t//b, e = t.CreateBucketIfNotExists(TableName)\n\t\tif e != nil {\n\t\t\treturn e\n\t\t}\n\n\t\t// 插入值\n\t\tfor i := 0; i \u0026lt; 10; i++ {\n\t\t\tid, _ := b.NextSequence()\n\t\t\tkey := []byte(fmt.Sprint(id))\n\t\t\tval := []byte(fmt.Sprintf(\"name-%v\", id))\n\t\t\t// write\n\t\t\te = b.Put(key, val)\n\t\t\tif e != nil {\n\t\t\t\treturn e\n\t\t\t}\n\n\t\t\t// read\n\t\t\ttmp := b.Get(key)\n\t\t\t// 如果 不存在 則返回 nil\n\t\t\tif tmp == nil {\n\t\t\t\tlog.Fatalln(\"fault bolt bug\")\n\t\t\t} else if string(val) != string(tmp) {\n\t\t\t\tlog.Fatalln(\"fault bolt bug\")\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t})\n\tif e != nil {\n\t\tlog.Fatal(e)\n\t}\n}\n\u003c/pre\u003e"