var __v="\n\u003cpre class='prettyprint linenums'\u003ecc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n        var anim = this.getComponent(cc.Animation);\n        anim.playAdditive('MoveClip');\n        anim.playAdditive('ScaleClip');\n\n        //返回 碰撞 管理器\n        var manager = cc.director.getCollisionManager();\n\n        //啓動 碰撞檢測 默認 關閉\n        manager.enabled = true;\n        //繪製調試用的 碰撞 組件\n        manager.enabledDebugDraw = true;\n        //繪製調試用的 碰撞 組件 外包盒\n        manager.enabledDrawBoundingBox = true;\n    },\n\n    //產生碰撞時的回調\n    //other 產生碰撞的 另外一個 碰撞組件\n    //self  產生碰撞的 本身 碰撞組件\n    onCollisionEnter: function (other, self) {\n        console.log('on collision enter');\n\n        //碰撞系統會計算出碰撞組件在世界座標下的 相關值 存儲到 world 中\n        var world = self.world;\n\n        //碰撞組件的 aabb 碰撞框\n        var aabb = world.aabb;\n\n        //上次計算的碰撞組件 aabb 碰撞框\n        var preAabb = world.preAabb;\n\n        //碰撞框的世界 矩陣\n        var t = world.transform;\n\n        //圓形碰撞組件 持有的 屬性\n        var r = world.radius;\n        var p = world.position;\n\n        //矩形 多邊形 碰撞組件 持有的 屬性\n        var ps = world.points;\n    },\n    //碰撞產生後 結束前 每次計算碰撞後 回調\n    onCollisionStay: function (other, self) {\n        console.log('on collision stay');\n    },\n    //碰撞結束後 回調\n    onCollisionExit: function (other, self) {\n        console.log('on collision exit');\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n\u003c/pre\u003e"