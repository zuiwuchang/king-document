var __v="\u003cpre class=\"k-pre\"\u003e//打開文件\nHANDLE WINAPI CreateFile(\n  __in      LPCTSTR lpFileName,\n  __in      DWORD dwDesiredAccess,\n  __in      DWORD dwShareMode,\n  __in_opt  LPSECURITY_ATTRIBUTES lpSecurityAttributes,\n  __in      DWORD dwCreationDisposition,\n  __in      DWORD dwFlagsAndAttributes,\t\t\t//關鍵在於在此處傳入 FILE_FLAG_OVERLAPPED 以啟用重疊操作\n  __in_opt  HANDLE hTemplateFile\n);\n\n//讀文件\nBOOL WINAPI ReadFile(\n  __in         HANDLE hFile,\n  __out        LPVOID lpBuffer,\n  __in         DWORD nNumberOfBytesToRead,\n  __out_opt    LPDWORD lpNumberOfBytesRead,\n  __inout_opt  LPOVERLAPPED lpOverlapped\t\t//使用overlapped時 需要傳入一個 OVERLAPPED 結構指針\n);\n\n//寫文件\nBOOL WINAPI WriteFile(\n  __in         HANDLE hFile,\n  __in         LPCVOID lpBuffer,\n  __in         DWORD nNumberOfBytesToWrite,\n  __out_opt    LPDWORD lpNumberOfBytesWritten,\n  __inout_opt  LPOVERLAPPED lpOverlapped\n);\n\n//OVERLAPPED結構\ntypedef struct _OVERLAPPED {  \n\tULONG_PTR Internal; \t\t\t//通常被保留 然而當GetOverlappedResult 返回FALSE 且GetLastError 返回非ERROR_IO_PENDING時 此欄包含一個視系統而定的狀態\n\tULONG_PTR InternalHigh;  \t\t//通常被保留 然而當GetOverlappedResult 返回TRUE 此欄被設置為 傳輸數據長度\n\tunion {    \n\t\tstruct {      \n\t\t\tWORD Offset;     \t//文件操作偏移低32位  對於非文件忽略此值\n \t\t\tDWORD OffsetHigh;    \t//文件操作偏移高32位\t對於非文件忽略此值\n \t\t\t};    \n \t\tPVOID Pointer;  \n \t};  \n\tHANDLE hEvent;\t\t\t\t//一個 必須是人工重置 的event (如果是自動重置 可能造成event狀態遺失)當io完成時 event被激發\n} OVERLAPPED,  *LPOVERLAPPED;\n\n//獲取重疊操作結果\n//成功返回TRUE\n//如 bWait 為FALSE GetLastError()返回 ERROR_IO_INCOMPLETE 表示 overlapped操作未完成\nBOOL WINAPI GetOverlappedResult(\n  __in   HANDLE hFile,\n  __in   LPOVERLAPPED lpOverlapped,\n  __out  LPDWORD lpNumberOfBytesTransferred,\t//返回傳輸字節數\n  __in   BOOL bWait\t\t\t\t//(通常FALSE 因為 通常是在得到overlapped操作 已經完成的通知後才調用此函數) 表示是否等待操作完成 TRUE等待\n);\n\u003c/pre\u003e"