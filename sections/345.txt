var __v="\u003cpre class=\"k-pre\"\u003e//實例化一個 Logger flag 指定要記錄的信息\nfunc New(out io.Writer, prefix string, flag int) *Logger\n\t\u003cstrong\u003econst (\n\t// Bits or'ed together to control what's printed. There is no control over the\n\t// order they appear (the order listed here) or the format they present (as\n\t// described in the comments).  A colon appears after these items:\n\t//\t2009/01/23 01:23:23.123123 /a/b/c/d.go:23: message\n\tLdate         = 1 \u003c\u003c iota     // the date: 2009/01/23\n\tLtime                         // the time: 01:23:23\n\tLmicroseconds                 // microsecond resolution: 01:23:23.123123.  assumes Ltime.\n\tLlongfile                     // full file name and line number: /a/b/c/d.go:23\n\tLshortfile                    // final file name element and line number: d.go:23. overrides Llongfile\n\tLstdFlags     = Ldate | Ltime // initial values for the standard logger\u003c/strong\u003e\n\t)\n\n//設置 新的 輸出io\nfunc SetOutput(w io.Writer)\n\n//設置/返回 flag\nfunc (l *Logger)SetFlags(flag int)\nfunc (l *Logger)Flags() int\n\n//設置/返回 日誌 前綴\nfunc (l *Logger)SetPrefix(prefix string)\nfunc (l *Logger)Prefix() string\n\n//輸出日誌\nfunc (l *Logger)Print(v ...interface{})\nfunc (l *Logger)Printf(format string, v ...interface{})\nfunc (l *Logger)Println(v ...interface{})\n\n//輸出日誌 並調用 os.exit(1)\nfunc (l *Logger) Fatal(v ...interface{})\nfunc (l *Logger) Fatalf(format string, v ...interface{})\nfunc (l *Logger) Fatalln(v ...interface{})\n\u003c/pre\u003e"