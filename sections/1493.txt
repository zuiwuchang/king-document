var __v="\n\u003cpre class='prettyprint linenums'\u003e#include \u0026lt;opencv2\\imgproc\\imgproc.hpp\u0026gt;\n#include \u0026lt;opencv2\\core\\core.hpp\u0026gt;\n#include \u0026lt;opencv2\\highgui\\highgui.hpp\u0026gt;\n\n#define DARK_DELAY\t2000\n#define DARK_DELAY_BLUR\t100\n#define MAX_KERNEL_LENGTH 31\nint display_dst(const std::string\u0026amp; window_name,cv::Mat\u0026amp; dst, int delay )\n{\n\tcv::imshow( window_name, dst );\n\tint c = cv::waitKey ( delay );\n\tif( c \u0026gt;= 0 ) { return -1; }\n\treturn 0;\n}\nint _tmain(int argc, _TCHAR* argv[])\n{\n\t//顯示原圖像\n\tcv::Mat src = cv::imread(\"123.jpg\");\n\tif(display_dst(\"Original Image\",src,DARK_DELAY))\n\t{\n\t\treturn 0;\n\t}\n\tcv::Mat dst = src.clone();\n\n\n\n\t//Homogeneous Blur\n\tfor ( int i = 1; i \u0026lt; MAX_KERNEL_LENGTH; i = i + 2 )\n\t{\n\t\tcv::blur(src,dst,cv::Size(i,i),cv::Point(-1,-1));\n\t\tif(display_dst(\"Homogeneous Blur\",dst,DARK_DELAY_BLUR))\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\n\n\t//Gaussian blur\n\tfor ( int i = 1; i \u0026lt; MAX_KERNEL_LENGTH; i = i + 2 )\n\t{\n\t\tcv::GaussianBlur(src,dst,cv::Size(i,i),0,0);\n\t\tif(display_dst(\"Gaussian Blur\",dst,DARK_DELAY_BLUR))\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\n\n\t//Median blur\n\tfor ( int i = 1; i \u0026lt; MAX_KERNEL_LENGTH; i = i + 2 )\n\t{\n\t\tcv::medianBlur(src,dst,i);\n\t\tif(display_dst(\"Median Blur\",dst,DARK_DELAY_BLUR))\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\n\n\t//Bilateral Filter\n\tfor ( int i = 1; i \u0026lt; MAX_KERNEL_LENGTH; i = i + 2 )\n\t{\n\t\tcv::bilateralFilter(src,dst,i,i*2,i/2);\n\t\tif(display_dst(\"Bilateral Blur\",dst,DARK_DELAY_BLUR))\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\n\n\tcv::waitKey();\n\treturn 0;\n}\u003c/pre\u003e"