var __v="\u003cpre class=\"k-pre\"\u003ePoco 使用 SQLite 源碼操作 SQLite其未實現加密功能\n可以 自己修改Poco 源碼 實現之\n\n1\t編輯 SessionImpl.h 為class SessionImpl增加成員函數\n\t#ifdef SQLITE_HAS_CODEC\n\tint sqlite3_key(const void *pKey, int nKey     /* The key */);\n\t\t// Database to be rekeyed\n\tint sqlite3_rekey(const void *pKey, int nKey     /* The new key */);\n\t\t// Database to be rekeyed\n\t#endif\n\n2\t編輯 SessionImpl.cpp 實現函數\n\tint SessionImpl::sqlite3_key(const void *pKey, int nKey     /* The key */)\n\t{\n\t\treturn ::sqlite3_key(db(),pKey,nKey);\n\t}\n\t\t// Database to be rekeyed\n\tint SessionImpl::sqlite3_rekey(const void *pKey, int nKey     /* The new key */)\n\t{\n\t\treturn ::sqlite3_rekey(db(),pKey,nKey);\n\t}\n\n3\t./configure \n\t修改 config.make 為之增加 \n\tOMIT =  Data/MySQL Data/ODBC ODBC CppUnit Crypto NetSSL_OpenSSL Net Util XML Zip PageCompiler\n\tTESTS = \n\tSAMPLES = \n\t以不編譯 不必要的庫 測試 示例\n\n4\t下載wxsqlite3 複製其實現代 sqlite加密代碼 覆蓋 Poco使用的\n\tsqlite源碼 (或者可以自己實現 而不是使用 wxsqlite3)\n\n5\t修改poco-1.4.6p2-all/Data/SQLite/Makefile\n\t將 其中的sqlite3 修改為 sqlite3secure\n\t為SYSFLAGS += 增加新的宏定義(wxsqlite3 需要的加密定義)\n\t-DSQLITE_HAS_CODEC=1 -DCODEC_TYPE=CODEC_TYPE_AES128 -DSQLITE_CORE -DTHREADSAFE -DSQLITE_SECURE_DELETE -DSQLITE_SOUNDEX -DSQLITE_ENABLE_COLUMN_METADATA\n\n6\t修改poco-1.4.6p2-all/Data/SQLite/SQLite.vxbuild\n\t將其中的sqlite3.c 改為sqlite3secure.c\n\n7\tmake\n\u003c/pre\u003e"