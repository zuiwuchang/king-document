var __v="\u003cpre class=\"prettyprint linenums\"\u003epackage main\n\nimport (\n\t\"archive/tar\"\n\t\"compress/gzip\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n)\n\nfunc main() {\n\t//打開tar\n\tf, e := os.Open(\"test.tar.gz\")\n\tif e != nil {\n\t\tfmt.Println(e)\n\t\treturn\n\t}\n\tdefer f.Close()\n\n\t//gzip/bz2解壓\n\tgf, e := gzip.NewReader(f)\n\tif e != nil {\n\t\tfmt.Println(e)\n\t\treturn\n\t}\n\tdefer gf.Close()\n\n\tr := tar.NewReader(gf)\n\tuntar(r)\n}\nfunc untar(r *tar.Reader) (e error) {\n\tfor {\n\t\tvar header *tar.Header\n\t\theader, e = r.Next()\n\t\tif e != nil {\n\t\t\tif e == io.EOF {\n\t\t\t\te = nil\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tswitch header.Typeflag {\n\t\tcase tar.TypeDir:\n\t\t\tif e = os.MkdirAll(header.Name, 0755); e != nil {\n\t\t\t\treturn\n\t\t\t}\n\t\tcase tar.TypeReg:\n\t\t\tif e = untarFile(header.Name, r); e != nil {\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\treturn\n}\nfunc untarFile(name string, r *tar.Reader) (e error) {\n\tw, e := os.Create(name)\n\tif e != nil {\n\t\treturn\n\t}\n\tdefer w.Close()\n\n\tif _, e = io.Copy(w, r); e != nil {\n\t\treturn\n\t}\n\tfmt.Println(name)\n\treturn\n}\u003c/pre\u003e"