var __v="\u003cpre class=\"k-pre\"\u003e1\t使用  var async = Async.New(); 創建一個 實例\n2\t多次調用 async.Sync(f1,f2) 註冊 流程\n\t(\n\t\tf2 是可選 參數 當本流程出錯時 被回調\n\t\t如果 指定了 f2 Do 指定的  Error將 不會被 通知 除非 f2 返回 true\n\t)\n\t(\n\t\tf1 是一個 異步調用\n\t\t在 異步 結束 時 需要 使用\n\t\tasync.Notify(\n\t\t\tContent:,傳遞給 下個流程的 參數\n\t\t\tError:,僅當 本流程 錯誤時 設置錯誤傳遞給 錯誤處理回調\n\t\t) 通知 async 進入下個流程\t\t \n\t)\n3\t使用 async.Do({\n\t\tOk:,//所有流程 成功是通知\n\t\tError,//任何流程出錯時 ...\n\t\tEnd,//無論 是否出錯 在 OK Error 之後被調用\n\t}) 執行 流程\n\t(\n\t\t一旦 任何一個流程 出錯 都將結束 全部流程\n\t\t並通知 Do 參數指定 的 Error 和 End\n\t)\n\u003c/pre\u003e"