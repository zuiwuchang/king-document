var __v="\n\u003cpre class='prettyprint linenums'\u003e#include\u0026lt;opencv2\\imgproc\\imgproc.hpp\u0026gt;\n#include\u0026lt;opencv2\\core\\core.hpp\u0026gt;\n#include\u0026lt;opencv2\\highgui\\highgui.hpp\u0026gt;\n\nusing namespace cv;\n\n/// 全局变量\nMat src, dst;\n\nint morph_elem = 0;\nint morph_size = 0;\nint morph_operator = 0;\nint const max_operator = 4;\nint const max_elem = 2;\nint const max_kernel_size = 21;\n\nchar* window_name = \"Morphology Transformations Demo\";\n\n/** 回调函数申明 */\nvoid Morphology_Operations( int, void* );\n\n/** @函数 main */\nint main( int argc, char** argv )\n{\n  /// 装载图像\n  src = imread( \"text.png\" );\n\n  if( !src.data )\n  { return -1; }\n\n /// 创建显示窗口\n namedWindow( window_name, CV_WINDOW_AUTOSIZE );\n\n /// 创建选择具体操作的 trackbar\n createTrackbar(\"Operator:\\n 0: Opening - 1: Closing \\n 2: Gradient - 3: Top Hat \\n 4: Black Hat\", window_name, \u0026amp;morph_operator, max_operator, Morphology_Operations );\n\n /// 创建选择内核形状的 trackbar\n createTrackbar( \"Element:\\n 0: Rect - 1: Cross - 2: Ellipse\", window_name,\n                 \u0026amp;morph_elem, max_elem,\n                 Morphology_Operations );\n\n /// 创建选择内核大小的 trackbar\n createTrackbar( \"Kernel size:\\n 2n +1\", window_name,\n                 \u0026amp;morph_size, max_kernel_size,\n                 Morphology_Operations );\n\n /// 启动使用默认值\n Morphology_Operations( 0, 0 );\n\n waitKey(0);\n return 0;\n }\n\n /**\n  * @函数 Morphology_Operations\n  */\nvoid Morphology_Operations( int, void* )\n{\n  // 由于 MORPH_X的取值范围是: 2,3,4,5 和 6\n  int operation = morph_operator + 2;\n\n  Mat element = getStructuringElement( morph_elem, Size( 2*morph_size + 1, 2*morph_size+1 ), Point( morph_size, morph_size ) );\n\n  /// 运行指定形态学操作\n  morphologyEx( src, dst, operation, element );\n  imshow( window_name, dst );\n}\u003c/pre\u003e"