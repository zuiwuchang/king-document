var __v="\u003cpre class='k-pre'\u003e[root@www ~]# vim /etc/ssh/sshd_config\n# 1. 關於 SSH Server 的整體設定，包含使用的 port 啦，以及使用的密碼演算方式\n# Port 22\n# SSH 預設使用 22 這個port，也可以使用多個port，即重複使用 port 這個設定項目！\n# 例如想要開放 sshd 在 22 與 443 ，則多加一行內容為：『 Port 443 』\n# 然後重新啟動 sshd 這樣就好了！不過，不建議修改 port number 啦！\n\n\u003cstrong\u003eProtocol 2\u003c/strong\u003e\n# 選擇的 SSH 協定版本，可以是 1 也可以是 2 ，CentOS 5.x 預設是僅支援 V2。\n# 如果想要支援舊版 V1 ，就得要使用『 Protocol 2,1 』才行。\n\n# ListenAddress 0.0.0.0\n# 監聽的主機介面卡！舉個例子來說，如果你有兩個 IP，分別是 192.168.1.100 及 \n# 192.168.100.254，假設你只想要讓 192.168.1.100 可以監聽 sshd ，那就這樣寫：\n# 『 ListenAddress 192.168.1.100 』預設值是監聽所有介面的 SSH 要求\n\n# PidFile /var/run/sshd.pid\n# 可以放置 SSHD 這個 PID 的檔案！上述為預設值\n\n# LoginGraceTime 2m\n# 當使用者連上 SSH server 之後，會出現輸入密碼的畫面，在該畫面中，\n# 在多久時間內沒有成功連上 SSH server 就強迫斷線！若無單位則預設時間為秒！\n\n# Compression delayed\n# 指定何時開始使用壓縮資料模式進行傳輸。有 yes, no 與登入後才將資料壓縮 (delayed)\n\n# 2. 說明主機的 Private Key 放置的檔案，預設使用下面的檔案即可！\n# HostKey /etc/ssh/ssh_host_key        # SSH version 1 使用的私鑰\n# HostKey /etc/ssh/ssh_host_rsa_key    # SSH version 2 使用的 RSA 私鑰\n# HostKey /etc/ssh/ssh_host_dsa_key    # SSH version 2 使用的 DSA 私鑰\n# 還記得我們在主機的 SSH 連線流程裡面談到的，這裡就是 Host Key ～\n\n# 3. 關於登錄檔的訊息資料放置與 daemon 的名稱！\nSyslogFacility AUTHPRIV\n# 當有人使用 SSH 登入系統的時候，SSH 會記錄資訊，這個資訊要記錄在什麼 daemon name\n# 底下？預設是以 AUTH 來設定的，即是 /var/log/secure 裡面！什麼？忘記了！\n# 回到 Linux 基礎去翻一下。其他可用的 daemon name 為：DAEMON,USER,AUTH,\n# LOCAL0,LOCAL1,LOCAL2,LOCAL3,LOCAL4,LOCAL5,\n\n# LogLevel INFO\n# 登錄記錄的等級！嘿嘿！任何訊息！同樣的，忘記了就回去參考！\n\n\u003cstrong\u003ePermitRootLogin no\u003c/strong\u003e\n# 4. 安全設定項目！極重要！\n# 4.1 登入設定部分\n# PermitRootLogin yes\n# 是否允許 root 登入！預設是允許的，但是建議設定成 no！\n\n# StrictModes yes\n# 是否讓 sshd 去檢查使用者家目錄或相關檔案的權限資料，\n# 這是為了擔心使用者將某些重要檔案的權限設錯，可能會導致一些問題所致。\n# 例如使用者的 ~.ssh/ 權限設錯時，某些特殊情況下會不許用戶登入\n\n# PubkeyAuthentication yes\n# AuthorizedKeysFile      .ssh/authorized_keys\n# 是否允許用戶自行使用成對的金鑰系統進行登入行為，僅針對 version 2。\n# 至於自製的公鑰資料就放置於使用者家目錄下的 .ssh/authorized_keys 內\n\nPasswordAuthentication yes\n# 密碼驗證當然是需要的！所以這裡寫 yes 囉！\n\n# PermitEmptyPasswords no\n# 若上面那一項如果設定為 yes 的話，這一項就最好設定為 no ，\n# 這個項目在是否允許以空的密碼登入！當然不許！\n\n# 4.2 認證部分\n# RhostsAuthentication no\n# 本機系統不使用 .rhosts，因為僅使用 .rhosts太不安全了，所以這裡一定要設定為 no\n\n# IgnoreRhosts yes\n# 是否取消使用 ~/.ssh/.rhosts 來做為認證！當然是！\n\n# RhostsRSAAuthentication no #\n# 這個選項是專門給 version 1 用的，使用 rhosts 檔案在 /etc/hosts.equiv\n# 配合 RSA 演算方式來進行認證！不要使用啊！\n\n# HostbasedAuthentication no\n# 這個項目與上面的項目類似，不過是給 version 2 使用的！\n\n# IgnoreUserKnownHosts no\n# 是否忽略家目錄內的 ~/.ssh/known_hosts 這個檔案所記錄的主機內容？\n# 當然不要忽略，所以這裡就是 no 啦！\n\nChallengeResponseAuthentication no\n# 允許任何的密碼認證！所以，任何 login.conf 規定的認證方式，均可適用！\n# 但目前我們比較喜歡使用 PAM 模組幫忙管理認證，因此這個選項可以設定為 no 喔！\n\nUsePAM yes\n# 利用 PAM 管理使用者認證有很多好處，可以記錄與管理。\n# 所以這裡我們建議你使用 UsePAM 且 ChallengeResponseAuthentication 設定為 no \n　\n# 4.3 與 Kerberos 有關的參數設定！因為我們沒有 Kerberos 主機，所以底下不用設定！\n# KerberosAuthentication no\n# KerberosOrLocalPasswd yes\n# KerberosTicketCleanup yes\n# KerberosTgtPassing no\n　\n# 4.4 底下是有關在 X-Window 底下使用的相關設定！\nX11Forwarding yes\n# X11DisplayOffset 10\n# X11UseLocalhost yes\n# 比較重要的是 X11Forwarding 項目，他可以讓視窗的資料透過 ssh 通道來傳送喔！\n# 在本章後面比較進階的 ssh 使用方法中會談到。\n\n# 4.5 登入後的項目：\n# PrintMotd yes\n# 登入後是否顯示出一些資訊呢？例如上次登入的時間、地點等等，預設是 yes\n# 亦即是列印出 /etc/motd 這個檔案的內容。但是，如果為了安全，可以考慮改為 no ！\n\n# PrintLastLog yes\n# 顯示上次登入的資訊！可以啊！預設也是 yes ！\n\n# TCPKeepAlive yes\n# 當達成連線後，伺服器會一直傳送 TCP 封包給用戶端藉以判斷對方式否一直存在連線。\n# 不過，如果連線時中間的路由器暫時停止服務幾秒鐘，也會讓連線中斷喔！\n# 在這個情況下，任何一端死掉後，SSH可以立刻知道！而不會有僵屍程序的發生！\n# 但如果你的網路或路由器常常不穩定，那麼可以設定為 no 的啦！\n\nUsePrivilegeSeparation yes\n# 是否使用權限較低的程序來提供使用者操作。我們知道 sshd 啟動在 port 22 ，\n# 因此啟動的程序是屬於 root 的身份。那麼當 student 登入後，這個設定值\n# 會讓 sshd 產生一個屬於 sutdent 的 sshd 程序來使用，對系統較安全\n\nMaxStartups 10\n# 同時允許幾個尚未登入的連線畫面？當我們連上 SSH ，但是尚未輸入密碼時，\n# 這個時候就是我們所謂的連線畫面啦！在這個連線畫面中，為了保護主機，\n# 所以需要設定最大值，預設最多十個連線畫面，而已經建立連線的不計算在這十個當中\n\n# 4.6 關於使用者抵擋的設定項目：\nDenyUsers *\n# 設定受抵擋的使用者名稱，如果是全部的使用者，那就是全部擋吧！\n# 若是部分使用者，可以將該帳號填入！例如下列！\nDenyUsers test\n\nDenyGroups test\n# 與 DenyUsers 相同！僅抵擋幾個群組而已！\n\n# 5. 關於 SFTP 服務與其他的設定項目！\nSubsystem       sftp    /usr/lib/ssh/sftp-server\n# UseDNS yes\n# 一般來說，為了要判斷用戶端來源是正常合法的，因此會使用 DNS 去反查用戶端的主機名\n# 不過如果是在內網互連，這項目設定為 no 會讓連線達成速度比較快\u003c/pre\u003e"