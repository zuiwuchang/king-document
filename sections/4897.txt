var __v="\u003cpre class='k-pre'\u003e如果存在 缺少的翻譯條目 應該給出 提醒\nAngular 定義了如下 3中 錯誤處理方式\n\nError 對於 aot 會構建失敗 對於 JIT會 加載失敗\nWarning 在控制檯 打印一條 Missing translation 的警告信息\nIgnore 什麼都不做\n\naot 默認 使用 Error\nJIT 默認使用 Warning\n\naot 通過 傳入 參數 --missingTranslation 改變 錯誤處理方式\n\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003eng serve --aot --missingTranslation=error\u003c/pre\u003e\n\u003cpre class='k-pre'\u003eJIT 通過在 main.ts 中設置 missingTranslation 屬性 改變行爲\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003eimport { MissingTranslationStrategy } from '@angular/core';\nimport { enableProdMode, TRANSLATIONS, TRANSLATIONS_FORMAT } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err =\u0026gt; console.log(err));\n\n\n// use the require method provided by webpack\ndeclare const require;\n// we use the webpack raw-loader to return the content as a string\nconst translations = require(`raw-loader!./locale/messages.zh.xlf`);\n\nplatformBrowserDynamic().bootstrapModule(AppModule, {\n  missingTranslation: MissingTranslationStrategy.Error,\n  providers: [\n    { provide: TRANSLATIONS, useValue: translations },\n    { provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }\n  ]\n});\u003c/pre\u003e"