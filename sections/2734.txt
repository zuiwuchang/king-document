var __v="\n\u003cpre class='prettyprint linenums'\u003eHANDLE hRead,hWrite;\nSECURITY_ATTRIBUTES pipeSecurity;\npipeSecurity.nLength=sizeof(SECURITY_ATTRIBUTES);\npipeSecurity.lpSecurityDescriptor=0;\npipeSecurity.bInheritHandle=TRUE;\nif(!CreatePipe(\u0026amp;hRead,\u0026amp;hWrite,\u0026amp;pipeSecurity,0) )\n{\n\tMessageBox(L\"创建管道失败\");\n\treturn ;\n}\n\nSTARTUPINFOA startupinfo;\nmemset(\u0026amp;startupinfo,0,sizeof(STARTUPINFOA));\nstartupinfo.cb=sizeof(STARTUPINFOA);\n\nstartupinfo.dwFlags=STARTF_USESHOWWINDOW|STARTF_USESTDHANDLES;\nstartupinfo.wShowWindow=SW_HIDE;\n//\tstartupinfo.hStdInput=;\nstartupinfo.hStdOutput=hWrite;\nstartupinfo.hStdError=hWrite;\n\nPROCESS_INFORMATION process_information;\n//cmd不支持unicode所以CreateProcessA\nif(!CreateProcessA(NULL,\"cmd /C net user\",0,0,TRUE,0,0,0,\u0026amp;startupinfo,\u0026amp;process_information))\n{\n\tMessageBox(L\"创建子进程失败\");\n\treturn ;\n}\nCloseHandle(hWrite);\nCloseHandle(process_information.hProcess);\nCloseHandle(process_information.hThread);\n\nDWORD dw;\nchar readBuffer[200]={0};\nstd::string str;\nwhile(ReadFile(hRead,readBuffer,_countof(readBuffer),\u0026amp;dw,NULL))\n{\n\tstr+=readBuffer;\n\tmemset(readBuffer,0,_countof(readBuffer)*sizeof(char));\n}\nCloseHandle(hRead);\nMessageBoxA(m_hWnd,str.c_str(),\"test\",MB_OK);\u003c/pre\u003e"