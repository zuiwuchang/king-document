var __v="\n\u003cpre class='prettyprint linenums'\u003e#include\u0026lt;boost\\asio.hpp\u0026gt;\n#include\u0026lt;boost\\lexical_cast.hpp\u0026gt;\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n\t//域名 端口 (查询结果将 返回为endpoint)\n\tstd::string name(\"www.google.com\");\n\tunsigned short port\t=\t1102;\n\t\n\t//定义一个查询\n\tboost::asio::io_service ios;\n\tboost::asio::ip::tcp::resolver rlv(ios);\n\tboost::asio::ip::tcp::resolver::query qry(name,boost::lexical_cast\u0026lt;std::string\u0026gt;(port));\n\t\n\t//查询\n\tboost::asio::ip::tcp::resolver::iterator iter\t=\trlv.resolve(qry)\n\t\t,end;\n\n\t//遍历域名对应的 所有ip\n\tfor(;iter!= end;++iter)\n\t{\n\t\tstd::cout\u0026lt;\u0026lt;iter-\u0026gt;host_name()\u0026lt;\u0026lt;\"\\t\"\t//www.google.com\n\t\t\t\u0026lt;\u0026lt;iter-\u0026gt;service_name()\u0026lt;\u0026lt;\"\\t\"\t//1102\n\t\t\t\u0026lt;\u0026lt;iter-\u0026gt;endpoint().address()\n\t\t\t\u0026lt;\u0026lt;\"\\n\";\n\t}\n\n\tstd::system(\"pause\");\n\treturn 0;\n}\u003c/pre\u003e"