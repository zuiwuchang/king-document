var __v="\u003cpre class=\"k-pre\"\u003eio_service 的run 方法 當沒有 需要等待完成的事件時 會退出\n可以 創建 一個 boost::asio::io_service::work work 會爲 io_service 創建一個 事件 直到 work 析構時才 使用事件完成 \n\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003e#include \u0026lt;boost/asio.hpp\u0026gt;\n#include \u0026lt;boost/thread.hpp\u0026gt;\n\ntypedef boost::asio::io_service io_service_t;\ntypedef boost::asio::io_service::work work_t;\n\nint main()\n{\n\tio_service_t service;\n\n\t//創建work\n\twork_t* work = new work_t(service);\n\t//在新線程中 等待 1 秒後 釋放 work 使用 asio 退出\n\tboost::thread([work=work](){\n\t\t\t\tboost::this_thread::sleep(boost::posix_time::seconds(1));\n\t\t\t\tdelete work;\n\t});\n\n\tservice.run();\n\treturn 0;\n}\u003c/pre\u003e"