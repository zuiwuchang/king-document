var __v="\u003cpre class=\"prettyprint linenums\"\u003epackage main\n\nimport (\n\tlua \"github.com/yuin/gopher-lua\"\n\t\"log\"\n)\n\n//定義 lua 擴展 函數\nfunc luaSum(ctx *lua.LState) int {\n\tsum := lua.LNumber(0)\n\tfor i := 0; i \u0026lt; ctx.GetTop(); i++ {\n\t\tlv := ctx.Get(i + 1)\n\t\tif v, ok := lv.(lua.LNumber); ok {\n\t\t\tsum += v\n\t\t}\n\t}\n\tctx.Push(sum)\n\treturn 1\n}\n\n//模塊註冊函數\nfunc Loader(ctx *lua.LState) int {\n\t//創建 tab\n\t//並設置 func\n\tobj := ctx.SetFuncs(ctx.NewTable(), map[string]lua.LGFunction{\n\t\t\"sum\": luaSum,\n\t})\n\t//設置 屬性\n\tctx.SetField(obj, \"version\", lua.LString(\"1.0.0\"))\n\n\t//返回 模塊\n\tctx.Push(obj)\n\treturn 1\n}\nfunc main() {\n\tctx := lua.NewState(lua.Options{IncludeGoStackTrace: true})\n\tdefer ctx.Close()\n\n\t//註冊模塊\n\tctx.PreloadModule(\"mymodule\", Loader)\n\n\t//lua\n\tif err := ctx.DoString(`\nlocal m = require(\"mymodule\")\nprint(m.version)\nprint(m.sum(1,2,3,4,5))\n`,\n\t); err != nil {\n\t\tlog.Fatalln(err)\n\t}\n}\n\u003c/pre\u003e"