var __v="\u003cpre class=\"prettyprint linenums\"\u003epackage main\n\nimport (\n\t\"container/ring\"\n\t\"fmt\"\n)\n\nfunc main() {\n\t//創建 環 Ring*\n\tr := ring.New(3)\n\tr0 := r\n\tr2 := r.Prev()\n\n\t//獲取環中 數據\n\tfor i := 0; i \u0026lt; r.Len(); i++ {\n\t\tr.Value = i + 1\n\t\tr = r.Next()\n\t}\n\n\t//對所有 數據 調用 call 環的位置不變\n\tr.Do(func(v interface{}) {\n\t\tfmt.Println(v)\n\t}) //1 2 3\n\n\t//r.Next/r.Prev n\n\tr = r.Move(-2)\n\tr.Do(func(v interface{}) {\n\t\tfmt.Println(v)\n\t}) //2 3 1\n\tr.Move(2)\n\n\t//連接環\n\tr = r0.Link(r2)\n\tfmt.Println(\"Link\")\n\tr.Do(func(v interface{}) {\n\t\tfmt.Println(v)\n\t}) //2\n\tr0.Do(func(v interface{}) {\n\t\tfmt.Println(v)\n\t}) //1 3\n\n\trn := ring.New(3)\n\tfor i := 0; i \u0026lt; rn.Len(); i++ {\n\t\trn.Value = i + 10\n\t\trn = rn.Next()\n\t}\n\tr = r0.Link(rn)\n\tfmt.Println(\"Link2\")\n\tr.Do(func(v interface{}) {\n\t\tfmt.Println(v)\n\t}) //3 1 10 11 12\n\ttestAutoLen()\n}\nfunc testAutoLen() {\n\tvar r *ring.Ring\n\tfor i := 0; i \u0026lt; 10; i++ {\n\t\tri := ring.New(1)\n\t\tri.Value = i\n\t\tif r == nil {\n\t\t\tr = ri\n\t\t} else {\n\t\t\tr = r.Prev().Link(ri)\n\t\t}\n\t}\n\n\tfmt.Println(\"testAutoLen\")\n\tr.Do(func(v interface{}) {\n\t\tfmt.Println(v)\n\t})//0 1 2 3 4 5 6 7 8 9\n}\u003c/pre\u003e"