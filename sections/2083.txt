var __v="\n\u003cpre class='prettyprint linenums'\u003e#include \u0026lt;boost/multi_array.hpp\u0026gt;\n#include \u0026lt;boost/function.hpp\u0026gt;\n\ntemplate\u0026lt;typename T\u0026gt;\nvoid display(const T\u0026amp; t)\n{\n\tstd::cout\u0026lt;\u0026lt;t\u0026lt;\u0026lt;\"\\t\";\n}\n\ntemplate\u0026lt;typename T,int N\u0026gt;\nvoid display_multi_array(boost::multi_array\u0026lt;T,N\u0026gt;\u0026amp; multi_array)\n{\n\tboost::function\u0026lt;void (T \u0026amp;)\u0026gt; fun\t= display\u0026lt;T\u0026gt;;\n\trecursion_multi_array(multi_array,fun);\n\tputs(\"\");\n}\n\ntemplate\u0026lt;typename T,int N\u0026gt;\nvoid recursion_multi_array(boost::multi_array\u0026lt;T,N\u0026gt;\u0026amp; multi_array\n\t,boost::function\u0026lt;void (T \u0026amp;)\u0026gt; call_back\n\t,boost::array\u0026lt;int,N\u0026gt;\u0026amp; index_arrays\t=\tboost::array\u0026lt;int,N\u0026gt;()    \n\t,int index_dimensions = 0 \n\t)\n{\n\tstatic boost::array\u0026lt;int,N\u0026gt; index_arrays;\n\n\tfor(int i=0;i\u0026lt;multi_array.shape()[index_dimensions];++i)\n\t{\n\t\tindex_arrays[index_dimensions]\t=\ti;\n\n\t\t//是否遞歸結束\n\t\tif(index_dimensions\t==\tN-1)\n\t\t{\n\t\t\tcall_back(multi_array(index_arrays));\n\t\t}\n\t\telse\n\t\t{\n\t\t\trecursion_multi_array(multi_array\n\t\t\t\t,call_back\n\t\t\t\t,index_arrays                \n\t\t\t\t,index_dimensions + 1\n\t\t\t\t);\n\t\t}\n\t}\n}\n\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n\t//定義一個 三維數組 int [2][3][4]\n\tboost::multi_array\u0026lt;int,3\u0026gt; a(boost::extents[2][3][4]);\n\t\n\t//返回 維度 乘機 2 * 3 * 4 = 24\n\tstd::cout\u0026lt;\u0026lt;a.num_elements()\u0026lt;\u0026lt;\"\\n\";\n\n\t//返回總維數 3\n\tstd::cout\u0026lt;\u0026lt;a.num_dimensions()\u0026lt;\u0026lt;\"\\n\";\n\n\t//返回一個 const 指針 記錄了 每維的 維度 2 3 4\n\tBOOST_AUTO(shape,a.shape());\n\tfor(int i=0;i\u0026lt;3;++i)\n\t{\n\t\tstd::cout\u0026lt;\u0026lt;shape[i]\u0026lt;\u0026lt;\"\\n\";\n\t}\n\n\t//重載的[]\n\tint v\t=\t0;\n\tfor(int i=0;i\u0026lt;2;++i)\n\t{\n\t\tfor(int j=0;j\u0026lt;3;++j)\n\t\t{\n\t\t\tfor(int k=0;k\u0026lt;4;++k)\n\t\t\t{\n\t\t\t\ta[i][j][k]\t=\tv++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//自定義的 輸出 數組 函數\n\tdisplay_multi_array(a);\n\n\t// () 傳入一個 array 或 vector 訪問元素  \n\tboost::array\u0026lt;int,3\u0026gt; arrays\t=\t{1,2,3};\n\tstd::cout\u0026lt;\u0026lt;a(arrays)\u0026lt;\u0026lt;std::endl;\n\t\n\tstd::system(\"pause\");\n\treturn 0;\n}\u003c/pre\u003e"