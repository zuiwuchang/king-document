var __v="\n\u003cpre class='prettyprint linenums'\u003e#include\u0026lt;iostream\u0026gt;\n#include \u0026lt;boost/filesystem.hpp\u0026gt;\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n\t//獲取當前 路徑\n\tboost::filesystem::path path = boost::filesystem::current_path();\n\tpath /= \"dark.txt\";\n\t//返回 標準格式 路徑字符串\n\tstd::cout\u0026lt;\u0026lt;path.string()\u0026lt;\u0026lt;\"\\n\";\n\n\t//返回 父路徑/文件名(不包含擴展名)/文件名/後綴名\n\tstd::cout\u0026lt;\u0026lt;path.parent_path()\u0026lt;\u0026lt;\"\\n\";\n\tstd::cout\u0026lt;\u0026lt;path.stem()\u0026lt;\u0026lt;\"\\n\";\n\tstd::cout\u0026lt;\u0026lt;path.filename()\u0026lt;\u0026lt;\"\\n\";\n\tstd::cout\u0026lt;\u0026lt;path.extension()\u0026lt;\u0026lt;\"\\n\";\n\t//path.has_XXX\n\n\t//返回是否是 全路徑\n\tstd::cout\u0026lt;\u0026lt;path.is_complete()\u0026lt;\u0026lt;\"\\n\";\n\n\t//返回 根 名/文件夾/路徑 path 必須是完整路徑\n\tstd::cout\u0026lt;\u0026lt;path.root_name()\u0026lt;\u0026lt;\"\\n\";\t// F: linux下 返回 空(linux根沒名)\n\tstd::cout\u0026lt;\u0026lt;path.root_directory()\u0026lt;\u0026lt;\"\\n\"; // /\n\tstd::cout\u0026lt;\u0026lt;path.root_path()\u0026lt;\u0026lt;\"\\n\";  // F:/\n\n\n\t//更改 擴展名\n\tpath.replace_extension(\".text\");\n\tstd::cout\u0026lt;\u0026lt;path\u0026lt;\u0026lt;\"\\n\";\n\t//移除 最後的文件名\n\tpath.remove_filename();\n\tstd::cout\u0026lt;\u0026lt;path\u0026lt;\u0026lt;\"\\n\";\n\n\t//以字典順序 大小寫銘感 比較\n\tauto path1 = path / \"add\";\n\tstd::cout\u0026lt;\u0026lt;(path1 == path)\u0026lt;\u0026lt;\"\\n\";\n\n\t//遍歷 路徑包含的 字符串\n\tstd::cout\u0026lt;\u0026lt;path\u0026lt;\u0026lt;\"\\n\";\n\tauto pos = path.begin();\n\tfor(;pos!=path.end();++pos)\n\t{\n\t\tstd::cout\u0026lt;\u0026lt;*pos\u0026lt;\u0026lt;\"\\n\";\n\t}\n\n\tstd::system(\"pause\");\n\treturn 0;\n}\n\u003c/pre\u003e"