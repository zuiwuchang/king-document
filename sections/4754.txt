var __v="\n\u003cpre class='prettyprint linenums'\u003e// 定義一個 基類\nabstract class Animal {\n    // 默認 public 支持 private protected private\n    readonly Lv: number = 10\n    private _name: string\n\n    // 構造 方法\n    constructor(name: string) {\n        this._name = name\n    }\n    // 定義 get set 方法\n    protected get name(): string {\n        return this._name;\n    }\n    protected set name(v: string) {\n        this._name = v;\n    }\n\n    // 定義 方法\n    abstract Speak(): void \n}\n// 派生 子類\nclass Cat extends Animal {\n    // 同 c++ static 成員\n    static Type = \"Cat\"\n\n    // 構造 方法\n    constructor(name: string) {\n        // 在 調用 父類 屬性前 必須先 調用 super 調用 父類 構造方法\n        super(name)\n    }\n\n    Eat(): void {\n        console.log(this.name, \"eat\");\n    }\n\n    // 覆蓋 父類方法\n    Speak(): void {\n        // ...\n        console.log(\"Cat Speak\")\n    }\n}\n\u003c/pre\u003e"