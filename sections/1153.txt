var __v="\n\u003cpre class='prettyprint linenums'\u003eimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\n/**\n *\n * @author Administrator\n */\npublic class SqliteTest {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) throws ClassNotFoundException, SQLException {   \n        Class.forName(\"org.sqlite.JDBC\");\n        Connection connection = null;\n        try\n        {\n          // create a database connection\n          connection = DriverManager.getConnection(\"jdbc:sqlite:test.db\");\n          Statement statement = connection.createStatement();\n          statement.setQueryTimeout(30);  // set timeout to 30 sec.\n\n          statement.executeUpdate(\"drop table if exists person\");\n          statement.executeUpdate(\"create table person (id integer, name string)\");\n          statement.executeUpdate(\"insert into person values(1, 'leo')\");\n          statement.executeUpdate(\"insert into person values(2, 'yui')\");\n          ResultSet rs = statement.executeQuery(\"select * from person\");\n          while(rs.next())\n          {\n            // read the result set\n            System.out.println(\"name = \" + rs.getString(\"name\"));\n            System.out.println(\"id = \" + rs.getInt(\"id\"));\n          }\n        }\n        catch(SQLException e)\n        {\n          // if the error message is \"out of memory\", \n          // it probably means no database file is found\n          System.err.println(e.getMessage());\n        }\n        finally\n        {\n          try\n          {\n            if(connection != null)\n              connection.close();\n          }\n          catch(SQLException e)\n          {\n            // connection close failed.\n            System.err.println(e);\n          }\n        }\n      }  \n}\u003c/pre\u003e"