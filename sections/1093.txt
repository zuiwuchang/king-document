var __v="\u003cpre class=\"k-pre\"\u003eIn our previous example we handled a JSON request, but replied with a text/plain response. Letâ€™s change that to send back a valid JSON HTTP response:\n\nimport play.libs.Json;\nimport com.fasterxml.jackson.databind.node.ObjectNode;\n...\n\npublic static Result sayHello() {\n  ObjectNode result = Json.newObject();\n  result.put(\"exampleField1\", \"foobar\");\n  result.put(\"exampleField2\", \"Hello world!\");\n  return ok(result);\n}\nNow it replies with:\n\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\n\n{\"exampleField1\":\"foobar\",\"exampleField2\":\"Hello world!\"}\nYou can also return a Java object and have it automatically serialized to JSON by the Jackson library:\n\nimport play.libs.Json;\n...\n\npublic Result getPeople() {\n  List\u0026lt;Person\u0026gt; people = personDao.findAll();\n  return ok(Json.toJson(people));\n}\u003c/pre\u003e"