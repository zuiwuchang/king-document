var __v="\n\u003cpre class='prettyprint linenums'\u003e// 定義一個 基礎 接口\ninterface IEat {\n    // 定義 方法\n    Eat(): void\n    // 同樣 可以指定 可選\n    Speak?(str: string): void\n}\n\n// 繼承一個 接口\ninterface IAnimal extends IEat {\n    // 定義 一個 rw 屬性\n    Name: string\n\n    // 定義一個 只讀 屬性\n    readonly Type: string\n\n    // 使用 ? 定義 可選 屬性\n    Lv?: number\n}\n\n// 傳入 接口\nfunction Show(obj: IAnimal): void {\n    console.log(\"this is a\", obj.Type)\n    if (obj.Lv) {\n        console.log(obj.Name, obj.Lv)\n    } else {\n        console.log(obj.Name)\n    }\n\n    obj.Eat()\n    if (obj.Speak) {\n        obj.Speak(\"ok\");\n    }\n}\n\nclass Cat implements IAnimal {\n    Type: string\n    Name: string\n    constructor(name: string) {\n        this.Type = \"Cat\";\n        this.Name = name;\n    }\n    Eat(): void {\n        console.log(this.Type, \"eat\")\n    }\n}\nclass Dog {\n    Type: string\n    Name: string\n    constructor(name: string) {\n        this.Type = \"Dog\"\n        this.Name = name;\n    }\n    Eat(): void {\n        console.log(this.Type, \"eat\")\n    }\n}\n\nShow(new Cat(\"cc\"))\nShow(new Dog(\"dd\"))\u003c/pre\u003e"