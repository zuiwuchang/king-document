var __v="\u003cpre class=\"k-pre\"\u003e//從 內存池 分配一塊內存 大小由於構造時 指定 失敗返回0\nvoid * malloc()\n//釋放內存 如果不是從 內存池分配的 什麼都不做\nvoid free(void * const chunk)\n//釋放數組\nvoid free(void * const chunk,size_type n)\n\n\n//同 malloc 不過會 同時 合併 空閒鍊錶\nvoid * ordered_malloc();\n//同 ordered_malloc 不過 分配 n個 連續內存塊(分配數組)\nvoid * ordered_malloc(size_type n);\n\n//同 free 不過會 同時 合併 空閒鍊錶\nvoid ordered_free(void * const chunk)\nvoid ordered_free(void * const chunk,size_type n)\n\n//返回 內存 是否由內存池 分配\nbool is_from(void * const chunk) const\n//將內存池未使用的內存 釋放給系統\nbool release_memory();\n//將內存池 所有內存 釋放給 系統\nbool purge_memory();\n\u003c/pre\u003e"