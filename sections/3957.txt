var __v="\n\u003cpre class='prettyprint linenums'\u003epackage main\n\nimport (\n\t\"crypto/tls\"\n\t\"fmt\"\n\t\"log\"\n\t\"net\"\n)\n\nconst (\n\tAddr      = \"127.0.0.1:1102\"\n\tcertFile  = \"client.pem\"\n\tkeyFile   = \"client.key\"\n\tclietnPem = \"client.pem\"\n)\n\nfunc main() {\n\t//加載 x509 證書\n\tcert, e := tls.LoadX509KeyPair(certFile, keyFile)\n\tif e != nil {\n\t\tlog.Fatalln(e)\n\t}\n\n\t//配置 TLS\n\tcnf := \u0026amp;tls.Config{\n\t\tInsecureSkipVerify: true,\n\n\t\t//客戶端 證書\n\t\tCertificates: []tls.Certificate{cert},\n\t}\n\n\t//連接服務器\n\tc, e := tls.Dial(\"tcp\", Addr, cnf)\n\tif e != nil {\n\t\tlog.Fatalln(e)\n\t}\n\t//之後的 操作完全 同 net包\n\tlog.Println(\"connect success\")\n\tgo doSend(c)\n\n\tb := make([]byte, 1024)\n\tfor {\n\t\tfmt.Print(\"$\u0026gt;\")\n\t\tn, e := c.Read(b)\n\t\tif e != nil {\n\t\t\tlog.Println(e)\n\t\t\tbreak\n\t\t}\n\t\tfmt.Println(string(b[:n]))\n\t}\n\tc.Close()\n}\nfunc doSend(c net.Conn) {\n\tvar str string\n\tfor {\n\t\tfmt.Scan(\u0026amp;str)\n\t\t_, e := c.Write([]byte(str))\n\t\tif e != nil {\n\t\t\tlog.Println(e)\n\t\t\tbreak\n\t\t}\n\t}\n\tc.Close()\n}\n\u003c/pre\u003e"