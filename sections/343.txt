var __v="\u003cpre class=\"prettyprint linenums\"\u003epackage main\n\nimport (\n\t\"crypto/aes\"\n\t\"crypto/cipher\"\n\t\"crypto/md5\"\n\t\"encoding/hex\"\n\t\"fmt\"\n)\n\nfunc Md5Byte(source []byte) []byte {\n\tmd := md5.New()\n\tmd.Write(source)\n\treturn md.Sum(nil)\n}\nfunc Md5(str string) string {\n\tmd := md5.New()\n\tmd.Write([]byte(str))\n\treturn hex.EncodeToString(md.Sum(nil))\n}\n\nfunc Encrypt(key, iv, source string) (string, error) {\n\t//產生 加密工廠\n\tblock, err := aes.NewCipher([]byte(Md5(key)))\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t//使用 cfb nopadding\n\tstream := cipher.NewCFBEncrypter(block, Md5Byte([]byte(iv)))\n\tplaintext := []byte(source)\n\tciphertext := make([]byte, len(plaintext))\n\tstream.XORKeyStream(ciphertext, plaintext)\n\n\treturn hex.EncodeToString(ciphertext), nil\n}\nfunc Decrypt(key, iv, source string) (string, error) {\n\tciphertext, err := hex.DecodeString(source)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\t//產生 加密工廠\n\tblock, err := aes.NewCipher([]byte(Md5(key)))\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t//使用 cfb nopadding\n\tstream := cipher.NewCFBDecrypter(block, Md5Byte([]byte(iv)))\n\t// XORKeyStream can work in-place if the two arguments are the same.\n\tstream.XORKeyStream(ciphertext, ciphertext)\n\treturn string(ciphertext), nil\n}\n\nfunc main() {\n\tkey := \"12345678901\"\n\tiv := \"this is iv\"\n\tstr := \"123草7890123草\"\n\n\tfmt.Println(key, iv, str)\n\tenc, err := Encrypt(key, iv, str)\n\tfmt.Println(enc, err)\n\tfmt.Println(Decrypt(key, iv, enc))\n}\n\u003c/pre\u003e"