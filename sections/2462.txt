var __v="\u003cpre class=\"k-pre\"\u003epython3.0 開始 使用 Unicode(4 字節編碼) 存放 字符串\n字符串可以使用 '/\"/\"\"\" 創建\nr\"創建原始字符串 裡面內容 無需要 轉義\"\n\t(\n\t\tprint(r\"12\\3\")\n\n\t\t在3.5 版本下 似乎存在 bug 比如 當 \\在結尾\n\t\tprint(r\"123\\\")\t\t\n\t)\n//將 數據 轉化為 字符串\nstr(s,c)\t//c指定 編碼格式可選\n\n\n\ns=\"unicode\"\n#返回 unicode 編碼\nprint(hex(ord(s[0])))\n\n#將 unicode 轉 字符\ns = chr(0x75)\nprint(s)\n\n\n\npython 可使用 負數索引(-1 最後一個元素) 逆向 取 數組\n同時 可以 使用 同 go 一樣的 切片 [m:n] 操作(好吧 其實是go借鑒的python)\nx=\"str test\"\nprint(x[:3])\t#str\nprint(x[4:])\t#test\nprint(x[::2])\t#srts\n\n\n\ns.capitalize()\t//返回字符串 首字母大寫的副本\ns.center(width,char)\t//返回 字符串 中間部分(width 長)的子串 並用 空格或字符char填充\ns.count(t,start,end)\t//返回s[start:end] 出現次數\ns.encode(encoding,err)\t//返回bytes對象 該對象 使用 默認/指定編碼格式 表示字符串\n\ns.endswith(x,start,end)\t//s[start:end] 以x 結尾 返回 True\ns.startswith(...)\n\ns.expandtabs(size)\t//返回s副本 其中 製表符 使用 8個/size個空格 替換\n\ns.find(t,start,end)\t//在 s[start:end] 中 尋找地一個 t 未找到 返回 -1\ns.rfing(...)\t\t//..最後\n\ns.format(...)\t//按指定參數 格式化 字符串 副本 並返回\n\t\u003cstrong\u003eprint(\"{0} is {1}'s head . {0}\".format(\"illusive man\",\"cerberus\"))\u003c/strong\u003e\n\t\ns.index(t,start,end)\t//同find 不過 未找到 產生 ValueError異常 \ns.rindex(...)\n\ns.isalnum()\t//字符串 非空 且 每個字母都為數字 返回 True\ns.isalpha()\t//... 字母\ns.isdecimal()\t//... unicode的基數為10的數字\ns.isdigit()\t//... ascill 數字\ns.isidentifier()\t//... 有效標識符\ns.islower()\t//... 小寫\ns.isupper()\t//... 大寫\n\ns.isnumeric()\t//... unicode 字符\ns.isprintable()\t//... 可打印\ns.isspace()\t//... 空格\ns.istitle()\t//... 首字母大寫的字符串\n\ns.join(seq)\t//每個項都連接起來 並以s為分隔\ns.ljust(width,char)\n\ns.lower()\t//轉小寫\ns.upper()\ns.maketrans()\ns.partition(t)\n\ns.replace(t,u,n)\t//將字符串中 t用u替換最多n次\ns.split(t,n)\t//使用t分割s最多n次\n\ns.splitlines(f)\ns.strip(chars)\ns.swapcase()\ns.title()\ns.translate()\n\ns.zfill(w)\t//返回s副本 如果長度 biw短 在開始出 添加0填充\n\u003c/pre\u003e"