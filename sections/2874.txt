var __v="\u003cpre class=\"k-pre\"\u003e//創建字體\nBOOL CreatePointFont(int nPointSize, \t//所需字体高度（用0.1点表示，例如，传递120表示12点字体）\n\tLPCTSTR lpszFaceName, \t\t\t//字體名\n\tCDC* pDC = NULL);\t\t\t\t//指向CDC对象，将nPointSize中的高度转化为逻辑单位。如果为NULL，则屏幕设备上下文用于转换。\n\n//通過LOGFONT* 創建字體    \nBOOL CreateFontIndirect(const LOGFONT* lpLogFont);\n    \n//枚舉可用字體\nint EnumFontFamiliesEx(  HDC hdc,                          // handle to DC\n\tLPLOGFONT lpLogfont,              // font information\t\t要枚舉的字體\n\tFONTENUMPROC lpEnumFontFamExProc, // callback function\n\tLPARAM lParam,                    // additional data\n\tDWORD dwFlags                     // not used; must be 0);\n\nlpLogfont取值\nDEFAULT_CHARSET\t\t枚舉所有字體的字符集\nNULL\t\t\t\t枚舉每個可用字體名的字體 (若指向字體名字符串 枚舉具有指定名稱的字體)\n\n回調函數 返回FALSE 停止枚舉\nint CALLBACK EnumFontFamExProc(  ENUMLOGFONTEX *lpelfe,    // logical-font data\n\tNEWTEXTMETRICEX *lpntme,  // physical-font data\t\t//字體詳細信息\n\tDWORD FontType,           // type of font\n\tLPARAM lParam             // application-defined data\n);\nENUMLOGFONTEX\ntypedef struct tagENUMLOGFONTEX {\n\tLOGFONT  elfLogFont;\t\t\t\t\t\t//指向LOGFONT 包含字體詳細信息\n\tTCHAR  elfFullName[LF_FULLFACESIZE];\t\t//字體名\n\tTCHAR  elfStyle[LF_FACESIZE];\n\tTCHAR  elfScript[LF_FACESIZE];\n} ENUMLOGFONTEX, *LPENUMLOGFONTEX;\n\u003c/pre\u003e"