var __v="\u003cpre class=\"k-pre\"\u003e#include\n对序列进行某种运算\nT accumulate(begin,end,T elemt);\n//对每个元素调用 \u003cstrong\u003eelemt=elemt+*iterator\u003c/strong\u003e 最终返回elemt\nT accumulate(begin,end,T elemt,op);\n//对每个元素调用 elemt=op(elemt,*iterator) 最终返回elemt\n\nT inner_product（begin1,end1,begin2,T elemt);\n//... \u003cstrong\u003eelemt= elemt+ (*iterator1) * (*iterator)\u003c/strong\u003e\nT inner_product（begin1,end1,begin2,T elemt,op1,op2);\n//...elemt=op1(elemt,op2(*iterator1,*iterator2))\n\nOutputIterator partial_sum(begin,end,begin2);\n对于序列1调用之 \ta1 \t,a2 \t\t,a3...\n将对序列2写入\t\ta1\t,a1+a2\t\t,\u003cstrong\u003ea1+a2+a3...\u003c/strong\u003e\n\nOutputIterator partial_sum(begin,end,begin2,op);\n........\n....\ta1\t,a1 op a2 \t,a1 op a2 op a3 ....\n\nadjacent_difference 类似 partial_sum 且+变为-而\n........\n... a1,\ta2-a1\t,\u003cstrong\u003ea3-a2\u003c/strong\u003e ...\n\u003c/pre\u003e"