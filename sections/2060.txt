var __v="\u003cpre class=\"k-pre\"\u003e//構造\ndynamic_bitset()\t\ndynamic_bitset(n)\t//n位 bits\ndynamic_bitset(n,binary)\t//n位 binary\t\ndynamic_bitset(std::string)\t\n...\n\n//operator\n\u0026amp;\n|\n^\n~\n!\n\u0026lt;\u0026lt;\n\u0026gt;\u0026gt;\n[]\n...\n\n//改變大小 皆從 末尾增加刪除 bool 指定增加的位為 1 or 0\nvoid resize(size_type num_bits, bool value = false);\n\nvoid clear();\nvoid push_back(bool bit);\t//向末尾(最高位)增加 1bits \nvoid append(Block block);\t//向末尾(最高位)增加 1BLock\n\n//返回位數\nsize()\n\n\n//檢查 第n位是否為 1\ntest(n)\n//檢查是否存在位為 1\nany()\n//檢查是否不存在位為 1\nnone()\n//返回位為1 的數量\ncount()\n\n//設置/翻轉 指定/全部 位\nset\nreset\nflip\n\n//專為unsigned long 若大於 unsigned long 拋出std::overflow_error\nto_ulong()\n\n//專為 std::string\nboost::to_string(const dynamic_bitset\u0026lt;Block, Allocator\u0026gt;\u0026amp; b, stringT \u0026amp; s)\n\n//返回第一個為1的位所有 沒有返回 npos\nfind_first()\n//同find_first 不過 從pos開始 查找\nfind_next(pos)\n\u003c/pre\u003e"