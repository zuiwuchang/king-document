var __v="\n\u003cpre class='prettyprint linenums'\u003e//改變維度 維度乘機不能變(既總元素數量不變)\nvoid reshape(const SizeList\u0026amp; extents)\n\n//改變大小 若超出 增加到相應 維 減小刪除相應維\n multi_array\u0026amp; resize(const detail::multi_array\n\t\t\t\t\t::extent_gen\u0026lt;NumDims\u0026gt;\u0026amp; ranges) \n\ntypedef boost::multi_array\u0026lt;int,2\u0026gt; multi_array_t;\nvoid set_multi_array(multi_array_t\u0026amp; multi_array)\n{\n\tint v\t=\t0;\n\tfor(int i=0;i\u0026lt;4;++i)\n\t{\n\t\tfor(int j=0;j\u0026lt;4;++j)\n\t\t{\n\t\t\tmulti_array[i][j]\t=\tv++;\n\t\t}\n\t}\n}\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n\t\n\tmulti_array_t a(boost::extents[4][4]);\n\tset_multi_array(a);\n\tdisplay_multi_array(a);\n\n\t//改變維度 維度乘機不能變(既總元素數量不變)\n\tboost::array\u0026lt;int,2\u0026gt; arrays\t=\t{2,8};\n\ta.reshape(arrays);\n\tdisplay_multi_array(a);\n\t\n\t//恢復原狀\n\tarrays[0]\t=\t4;\n\tarrays[1]\t=\t4;\n\ta.reshape(arrays);\n\t\n\t//改變大小 若超出 增加到相應 維 減小刪除相應維\n\ta.resize(boost::extents[5][2]);\n\tdisplay_multi_array(a);\n\tstd::system(\"pause\");\n\treturn 0;\n}\u003c/pre\u003e"