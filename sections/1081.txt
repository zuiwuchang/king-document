var __v="\u003cpre class=\"k-pre\"\u003eYou can create reusable code blocks:\n\n@display(product: models.Product) = {\n  @product.getName() ($@product.getPrice())\n}\n \n\u0026lt;ul\u0026gt;\n@for(product \u0026lt;- products) {\n  @display(product)\n} \n\u0026lt;/ul\u0026gt;\n\nNote that you can also declare reusable pure code blocks:\n\n@title(text: String) = @{\n  text.split(' ').map(_.capitalize).mkString(\" \")\n}\n \n\u0026lt;h1\u0026gt;@title(\"hello world\")\u0026lt;/h1\u0026gt;\nNote: Declaring code block this way in a template can be sometime useful but keep in mind that a template is not the best place to write complex logic. It is often better to externalize these kind of code in a Java class (that you can store under the views/ package as well if you want).\n\nBy convention a reusable block defined with a name starting with implicit will be marked as implicit:\n\n@implicitFieldConstructor = @{ MyFieldConstructor() }\u003c/pre\u003e"