var __v="\u003cpre class=\"prettyprint linenums\"\u003evar ControllerAsync={\n\tNew:function(){\n\t\t//輔助函數 進入下個 流程\n\t\tvar next = function(g,callback,err, data){\n\t\t\tif(err) {\n\t\t\t\tg.throw(err);\n\t\t\t\tif(callback){\n\t\t\t\t\tcallback(err);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} \n\n\t\t\t//執行 next\n\t\t\tvar res = g.next(data);\n\t\t\t\n\t\t\tif(res.done){\n\t\t\t\t//通知 所有流程 執行完\n\t\t\t\tif(callback){\n\t\t\t\t\tcallback(null,res.value);\n\t\t\t\t}\n\t\t\t} \n\t\t};\n\n\t\treturn {\n\t\t\t//設置 流程 函數\n\t\t\t//參數 gen 是一個 Generator 函數\n\t\t\tSync:function(gen){\n\t\t\t\t//存儲 Generator 實例\n\t\t\t\tthis._gen = gen();\n\t\t\t},\n\t\t\t//通知 異步操作已完成 等待的 \n\t\t\t//yield 可以返回繼續執行\n\t\t\t//參數 data 為 yield 的返回值\n\t\t\t//參數 err 為 null 繼續下個流程\n\t\t\t//參數 err 不為 null 停止流程 並使 yield 拋出 err 異常\n\t\t\tNotify:function(err,data){\n\t\t\t\tnext(this._gen,this._callback,err,data);\n\t\t\t},\n\n\t\t\t//執行 流程\n\t\t\t//參數 callback 為流程結束 回調\n\t\t\t//\tcallback 存儲兩個參數 err,data\n\t\t\t//\t如果 流程 出現任何錯誤導致 流程結束 則err為 Notify 中指定的錯誤\n\t\t\t//\t如果 流程 正常結束 err為null data為 Generator函數返回值\n\t\t\t//參數 userdata 為 傳給 Generator 函數的 參數\n\t\t\tDo:function(callback,userdata){\n\t\t\t\t//流程 結束 回調\n\t\t\t\tthis._callback = callback;\n\n\t\t\t\t//執行 首個流程\n\t\t\t\tnext(this._gen,callback,null,userdata);\n\t\t\t},\n\t\t};\n\t}\n};\n$(document).ready(function() {\n\t//創建 流程管理 器\n\tvar co = ControllerAsync.New();\n\n\t//設置 流程 函數\n\tco.Sync(function*(){\n\t\talert(\"co begin\");\n\t\ttry{\n\t\t\t//異步操作\n\t\t\tvar tmp = yield setTimeout(function() {\n\t\t\t\t//通知 yield 返回\n\t\t\t\tco.Notify(null,\"co 1\");\n\t\t\t}, 500);\n\t\t\talert(\"co 1 tmp = \" + tmp);\n\n\t\t\ttmp = yield setTimeout(function() {\n\t\t\t\t//通知 yield 返回\n\t\t\t\t//co.Notify(null,\"co 2\");\n\n\t\t\t\t//通知 yield 拋出異常 並以err結束流程\n\t\t\t\tco.Notify(\"err test\");\n\t\t\t}, 1000);\n\t\t\talert(\"co 2 tmp = \" + tmp);\n\n\t\t\ttmp = yield setTimeout(function() {\n\t\t\t\t//通知 yield 返回\n\t\t\t\tco.Notify(null,\"co 3\");\n\t\t\t}, 500);\n\t\t\talert(\"co 3 tmp = \" + tmp);\n\t\t}catch(err){\n\t\t\talert(\"catch err \" + err)\n\t\t}\n\n\t\treturn true;\n\t});\n\n\t//執行流程\n\tco.Do(function(err,data){\n\t\talert(\"co end\");\n\t\tif(err){\n\t\t\talert(\"Do error \" + err);\n\t\t}else{\n\t\t\talert(\"Do success \" + data);\n\t\t}\n\t});\n});\u003c/pre\u003e"