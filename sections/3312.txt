var __v="\n\u003cpre class='prettyprint linenums'\u003etypedef enum _SYSTEM_INFORMATION_CLASS  \n{  \n    SystemBasicInformation,                 //  0 Y N  \n    SystemProcessorInformation,             //  1 Y N  \n    SystemPerformanceInformation,           //  2 Y N  \n    SystemTimeOfDayInformation,             //  3 Y N  \n    SystemNotImplemented1,                  //  4 Y N  \n    SystemProcessesAndThreadsInformation,   //  5 Y N\t枚舉進程\n    SystemCallCounts,                       //  6 Y N  \n    SystemConfigurationInformation,         //  7 Y N  \n    SystemProcessorTimes,                   //  8 Y N  \n    SystemGlobalFlag,                       //  9 Y Y  \n    SystemNotImplemented2,                  // 10 Y N  \n    SystemModuleInformation,                // 11 Y N  \n    SystemLockInformation,                  // 12 Y N  \n    SystemNotImplemented3,                  // 13 Y N  \n    SystemNotImplemented4,                  // 14 Y N  \n    SystemNotImplemented5,                  // 15 Y N  \n    SystemHandleInformation,                // 16 Y N  \n    SystemObjectInformation,                // 17 Y N  \n    SystemPagefileInformation,              // 18 Y N  \n    SystemInstructionEmulationCounts,       // 19 Y N  \n    SystemInvalidInfoClass1,                // 20  \n    SystemCacheInformation,                 // 21 Y Y  \n    SystemPoolTagInformation,               // 22 Y N  \n    SystemProcessorStatistics,              // 23 Y N  \n    SystemDpcInformation,                   // 24 Y Y  \n    SystemNotImplemented6,                  // 25 Y N  \n    SystemLoadImage,                        // 26 N Y  \n    SystemUnloadImage,                      // 27 N Y  \n    SystemTimeAdjustment,                   // 28 Y Y  \n    SystemNotImplemented7,                  // 29 Y N  \n    SystemNotImplemented8,                  // 30 Y N  \n    SystemNotImplemented9,                  // 31 Y N  \n    SystemCrashDumpInformation,             // 32 Y N  \n    SystemExceptionInformation,             // 33 Y N  \n    SystemCrashDumpStateInformation,        // 34 Y Y/N  \n    SystemKernelDebuggerInformation,        // 35 Y N  \n    SystemContextSwitchInformation,         // 36 Y N  \n    SystemRegistryQuotaInformation,         // 37 Y Y  \n    SystemLoadAndCallImage,                 // 38 N Y  \n    SystemPrioritySeparation,               // 39 N Y  \n    SystemNotImplemented10,                 // 40 Y N  \n    SystemNotImplemented11,                 // 41 Y N  \n    SystemInvalidInfoClass2,                // 42  \n    SystemInvalidInfoClass3,                // 43  \n    SystemTimeZoneInformation,              // 44 Y N  \n    SystemLookasideInformation,             // 45 Y N  \n    SystemSetTimeSlipEvent,                 // 46 N Y  \n    SystemCreateSession,                    // 47 N Y  \n    SystemDeleteSession,                    // 48 N Y  \n    SystemInvalidInfoClass4,                // 49  \n    SystemRangeStartInformation,            // 50 Y N  \n    SystemVerifierInformation,              // 51 Y Y  \n    SystemAddVerifier,                      // 52 N Y  \n    SystemSessionProcessesInformation       // 53 Y N  \n  \n} SYSTEM_INFORMATION_CLASS;  \n\ntypedef NTSTATUS (WINAPI *LpZwQuerySystemInformation)(\n  __in       SYSTEM_INFORMATION_CLASS SystemInformationClass,\t//指定需要查詢的信息\n  __inout    PVOID SystemInformation,\t\t\t\t\t\t\t//根據SystemInformationClass 返回不同的信息 54種不同信息\n  __in       ULONG SystemInformationLength,\t\t\t\t\t\t//SystemInformation大小\n  __out_opt  PULONG ReturnLength\t\t\t\t\t\t\t\t//SystemInformation為空 此值用於返回SystemInformation需要的大小\n);\n\ntypedef struct _UNICODE_STRING {\n    USHORT Length;\n    USHORT MaximumLength;\n#ifdef MIDL_PASS\n    [size_is(MaximumLength / 2), length_is((Length) / 2) ] USHORT * Buffer;\n#else // MIDL_PASS\n    __field_bcount_part(MaximumLength, Length) PWCH   Buffer;\n#endif // MIDL_PASS\n} UNICODE_STRING;\n\n//SystemProcessesAndThreadsInformation 返回的結構\ntypedef struct _SYSTEM_PROCESS_INFORMATION{\n DWORD  NextEntryDelta;\t\t\t\t//下一個進程的SYSTEM_PROCESS_INFORMATION 與當前SYSTEM_PROCESS_INFORMATION的偏移 byte\n DWORD  ThreadCount;\t\t\t\t//線程數\n DWORD  Reserved1[6];\n FILETIME ftCreateTime;\n FILETIME ftUserTime;\n FILETIME ftKernelTime;\n UNICODE_STRING ProcessName;\t\t//進程名\n DWORD  BasePriority;\n DWORD  ProcessId;\t\t\t\t\t//進程id\n DWORD  InheritedFromProcessId;\t\t\n DWORD  HandleCount;\t\t\t\t//句柄數\n DWORD  Reserved2[2];\n DWORD  VmCounters;\n DWORD  dCommitCharge;\n PVOID  ThreadInfos[1];\n}SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION;\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n\n\tHMODULE handle_ntdll=LoadLibrary(L\"ntdll.dll\");\n\tif(handle_ntdll)\n\t{\n\t\tLpZwQuerySystemInformation ZwQuerySystemInformation=(LpZwQuerySystemInformation)GetProcAddress(handle_ntdll,\"ZwQuerySystemInformation\");\n\t\tif(ZwQuerySystemInformation)\n\t\t{\n\t\t\tULONG dwSizeof=0;\n\t\t\tZwQuerySystemInformation(SystemProcessesAndThreadsInformation,NULL,0,\u0026amp;dwSizeof);\n\t\t\tprintf(\"need sizeof memory:%d\\n\",dwSizeof);\n\t\t\tbyte* lp=new byte[dwSizeof];\n\t\t\tPSYSTEM_PROCESS_INFORMATION psystem_process_information;\n\t\t\tif(!ZwQuerySystemInformation(SystemProcessesAndThreadsInformation,lp,dwSizeof,NULL))\n\t\t\t{\n\t\t\t\tpsystem_process_information=(PSYSTEM_PROCESS_INFORMATION)lp;\n\t\t\t\twhile(true)\n\t\t\t\t{\n\t\t\t\t\twprintf(L\"pid=%d name=%s %d\\n\"\n\t\t\t\t\t\t,psystem_process_information-\u0026gt;ProcessId,psystem_process_information-\u0026gt;ProcessName.Buffer,psystem_process_information-\u0026gt;InheritedFromProcessId\n\t\t\t\t\t\t);\n\t\t\t\t\tif(psystem_process_information-\u0026gt;NextEntryDelta)\n\t\t\t\t\t{\n\t\t\t\t\t\tpsystem_process_information=(PSYSTEM_PROCESS_INFORMATION)((ULONG)psystem_process_information+psystem_process_information-\u0026gt;NextEntryDelta);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tdelete[] lp;\n\t\t}\n\t\telse\n\t\t{\n\t\t\twprintf(L\"無法定位函數 ZwQuerySystemInformation\\n\");\n\t\t}\n\t}\n\telse\n\t{\n\n\t\twprintf(L\"無法載入 ntdll.dll\\n\");\n\t}\n\tsystem(\"pause\");\n\treturn 0;\n}\u003c/pre\u003e"