var __v="\u003cpre class=\"k-pre\"\u003e//sqlite3* 代表了一個 到數據庫的連接實例\nsqlite3*\n\n//連接到 數據庫\nint sqlite3_open(\n  const char *filename,   /* Database filename (UTF-8) */\n  sqlite3 **ppDb          /* OUT: SQLite db handle */\n);\nint sqlite3_open16(\n  const void *filename,   /* Database filename (UTF-16) */\n  sqlite3 **ppDb          /* OUT: SQLite db handle */\n);\n//類似 sqlite3_open 不過 後兩個參數 可以指定更多 非默認設置\nint sqlite3_open_v2(\n  const char *filename,   /* Database filename (UTF-8) */\n  sqlite3 **ppDb,         /* OUT: SQLite db handle */\n  int flags,              /* Flags */\n  const char *zVfs        /* Name of VFS module to use */\n);\n\n//關閉數據庫\nint sqlite3_close(sqlite3*);\nint sqlite3_close_v2(sqlite3*);\n\n\n\n//獲取 錯誤信息\nint sqlite3_errcode(sqlite3 *db);\nint sqlite3_extended_errcode(sqlite3 *db);\nconst char *sqlite3_errmsg(sqlite3*);\nconst void *sqlite3_errmsg16(sqlite3*);\nconst char *sqlite3_errstr(int);\n\n\n\n//以回調方式 執行 sql命令 每條記錄都會被回調\nint sqlite3_exec(\n  sqlite3*,                                  /* An open database */\n  const char *sql,                           /* SQL to be evaluated */\n  int (*callback)(void*,int,char**,char**),  /* Callback function */\n  void *,                                    /* 1st argument to callback */\n  char **errmsg                              /* Error msg written here */\n);\n\n//以非回調方式 執行sql命令\nint sqlite3_get_table(\n  sqlite3 *db,          /* An open database */\n  const char *zSql,     /* SQL to be evaluated */\n  char ***pazResult,    /* Results of the query */\n  int *pnRow,           /* Number of result rows written here */\n  int *pnColumn,        /* Number of result columns written here */\n  char **pzErrmsg       /* Error msg written here */\n);\n\t\u003cstrong\u003erows 沒包括 字段行 \n\t而 返回值 第一行是 字段 故 實際上 返回數據 有 rows + 1 行\u003c/strong\u003e\n//釋放 查詢資源\nvoid sqlite3_free_table(char **result);\n\n\n\n//創建 預處理 sql ?\nint sqlite3_prepare(\n  sqlite3 *db,            /* Database handle */\n  const char *zSql,       /* SQL statement, UTF-8 encoded */\n  int nByte,              /* Maximum length of zSql in bytes. */\n  sqlite3_stmt **ppStmt,  /* OUT: Statement handle */\n  const char **pzTail     /* OUT: Pointer to unused portion of zSql */\n);\nint sqlite3_prepare_v2(\n  sqlite3 *db,            /* Database handle */\n  const char *zSql,       /* SQL statement, UTF-8 encoded */\n  int nByte,              /* Maximum length of zSql in bytes. */\n  sqlite3_stmt **ppStmt,  /* OUT: Statement handle */\n  const char **pzTail     /* OUT: Pointer to unused portion of zSql */\n);\nint sqlite3_prepare16(\n  sqlite3 *db,            /* Database handle */\n  const void *zSql,       /* SQL statement, UTF-16 encoded */\n  int nByte,              /* Maximum length of zSql in bytes. */\n  sqlite3_stmt **ppStmt,  /* OUT: Statement handle */\n  const void **pzTail     /* OUT: Pointer to unused portion of zSql */\n);\nint sqlite3_prepare16_v2(\n  sqlite3 *db,            /* Database handle */\n  const void *zSql,       /* SQL statement, UTF-16 encoded */\n  int nByte,              /* Maximum length of zSql in bytes. */\n  sqlite3_stmt **ppStmt,  /* OUT: Statement handle */\n  const void **pzTail     /* OUT: Pointer to unused portion of zSql */\n);\n\n//解析 ? 從 1開始計數\nsqlite3_bind_*\nint sqlite3_finalize(sqlite3_stmt *pStmt);\n\n//執行預處理命令\nint sqlite3_step(sqlite3_stmt*);\n\t\t\u003cstrong\u003eSQLITE_BUSY 暫時無法執行\n\t\tSQLITE_DONE 執行完畢\n\t\tSQLITE_ROW 有數據返回\u003c/strong\u003e\n\n\n//重置預處理 以便解析新的 參數\nint sqlite3_reset(sqlite3_stmt *pStmt);\n\n//釋放 預處理命令 資源\nint sqlite3_finalize(sqlite3_stmt *pStmt);\n\n//獲取預處理 查詢信息 iCol是字段列 從0開始計數\nconst void *sqlite3_column_blob(sqlite3_stmt*, int iCol);\nint sqlite3_column_bytes(sqlite3_stmt*, int iCol);\nint sqlite3_column_bytes16(sqlite3_stmt*, int iCol);\ndouble sqlite3_column_double(sqlite3_stmt*, int iCol);\nint sqlite3_column_int(sqlite3_stmt*, int iCol);\nsqlite3_int64 sqlite3_column_int64(sqlite3_stmt*, int iCol);\nconst unsigned char *sqlite3_column_text(sqlite3_stmt*, int iCol);\nconst void *sqlite3_column_text16(sqlite3_stmt*, int iCol);\nint sqlite3_column_type(sqlite3_stmt*, int iCol);\nsqlite3_value *sqlite3_column_value(sqlite3_stmt*, int iCol);\n\u003c/pre\u003e"