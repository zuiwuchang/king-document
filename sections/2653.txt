var __v="\u003cpre class=\"k-pre\"\u003esublime 存在一個linux下無法輸入中文的bug 一直沒有好的解決辦法\n如下方式也不能完美解決(輸入框依然 無法跟隨光標)\n\n1\t//添加fcitx 源並安装 以及google拼音/或其他任意fcitx輸入法\n\tsudo add-apt-repository ppa:fcitx-team/nightly\n\tsudo apt-get install fcitx fcitx-config-gtk fcitx-googlepinyin\t\n\n2\t新建一從代碼sub-fcitx.c到sublime安裝目錄\n\t/*\n\tsublime-imfix.c\n\tUse LD_PRELOAD to interpose some function to fix sublime input method support for linux.\n\tBy Cjacker Huang\n\t \n\tgcc -shared -o libsublime-imfix.so sublime-imfix.c `pkg-config --libs --cflags gtk+-2.0` -fPIC\n\tLD_PRELOAD=./libsublime-imfix.so subl\n\t*/\n\t#include \u0026lt;gtk/gtk.h\u0026gt;\n\t#include \u0026lt;gdk/gdkx.h\u0026gt;\n\ttypedef GdkSegment GdkRegionBox;\n\t \n\tstruct _GdkRegion\n\t{\n\t  long size;\n\t  long numRects;\n\t  GdkRegionBox *rects;\n\t  GdkRegionBox extents;\n\t};\n\t \n\tGtkIMContext *local_context;\n\t \n\tvoid\n\tgdk_region_get_clipbox (const GdkRegion *region,\n\t            GdkRectangle    *rectangle)\n\t{\n\t  g_return_if_fail (region != NULL);\n\t  g_return_if_fail (rectangle != NULL);\n\t \n\t  rectangle-\u0026gt;x = region-\u0026gt;extents.x1;\n\t  rectangle-\u0026gt;y = region-\u0026gt;extents.y1;\n\t  rectangle-\u0026gt;width = region-\u0026gt;extents.x2 - region-\u0026gt;extents.x1;\n\t  rectangle-\u0026gt;height = region-\u0026gt;extents.y2 - region-\u0026gt;extents.y1;\n\t  GdkRectangle rect;\n\t  rect.x = rectangle-\u0026gt;x;\n\t  rect.y = rectangle-\u0026gt;y;\n\t  rect.width = 0;\n\t  rect.height = rectangle-\u0026gt;height;\n\t  //The caret width is 2;\n\t  //Maybe sometimes we will make a mistake, but for most of the time, it should be the caret.\n\t  if(rectangle-\u0026gt;width == 2 \u0026amp;\u0026amp; GTK_IS_IM_CONTEXT(local_context)) {\n\t        gtk_im_context_set_cursor_location(local_context, rectangle);\n\t  }\n\t}\n\t \n\t//this is needed, for example, if you input something in file dialog and return back the edit area\n\t//context will lost, so here we set it again.\n\t \n\tstatic GdkFilterReturn event_filter (GdkXEvent *xevent, GdkEvent *event, gpointer im_context)\n\t{\n\t    XEvent *xev = (XEvent *)xevent;\n\t    if(xev-\u0026gt;type == KeyRelease \u0026amp;\u0026amp; GTK_IS_IM_CONTEXT(im_context)) {\n\t       GdkWindow * win = g_object_get_data(G_OBJECT(im_context),\"window\");\n\t       if(GDK_IS_WINDOW(win))\n\t         gtk_im_context_set_client_window(im_context, win);\n\t    }\n\t    return GDK_FILTER_CONTINUE;\n\t}\n\t \n\tvoid gtk_im_context_set_client_window (GtkIMContext *context,\n\t          GdkWindow    *window)\n\t{\n\t  GtkIMContextClass *klass;\n\t  g_return_if_fail (GTK_IS_IM_CONTEXT (context));\n\t  klass = GTK_IM_CONTEXT_GET_CLASS (context);\n\t  if (klass-\u0026gt;set_client_window)\n\t    klass-\u0026gt;set_client_window (context, window);\n\t \n\t  if(!GDK_IS_WINDOW (window))\n\t    return;\n\t  g_object_set_data(G_OBJECT(context),\"window\",window);\n\t  int width = gdk_window_get_width(window);\n\t  int height = gdk_window_get_height(window);\n\t  if(width != 0 \u0026amp;\u0026amp; height !=0) {\n\t    gtk_im_context_focus_in(context);\n\t    local_context = context;\n\t  }\n\t  gdk_window_add_filter (window, event_filter, context);\n\t}\n\n3\t安裝編譯環境\n\tsudo apt-get install build-essential\n\tsudo apt-get install libgtk2.0-dev\n\n4\t編譯之得到 libsublime-imfix.so\n\tgcc -shared -o libsublime-imfix.so sub-fcitx.c  `pkg-config --libs --cflags gtk+-2.0` -fPIC\n\n5\t之後全使用LD_PRELOAD=./libsublime-imfix.so ./sublime_text打開sublime\n\t正常輸入中文\n\u003c/pre\u003e"