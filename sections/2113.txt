var __v="\u003cpre class=\"k-pre\"\u003efilesystem 使用 class file_status 表示文件狀態\n\n\n\nclass file_status\n{\npublic:\n\n\t// constructors\n\tfile_status() noexcept;\n\texplicit file_status(file_type ft, perms prms = perms_not_known) noexcept;\n\n\t// compiler generated\n\tfile_status(const file_status\u0026amp;) noexcept;\n\tfile_status\u0026amp; operator=(const file_status\u0026amp;) noexcept;\n\t~file_status() noexcept;\n\n\t// observers\t返回狀態\n\tfile_type  type() const noexcept;\n\tperms      permissions() const noexcept;\n\n\t// modifiers\t設置狀態\n\tvoid       type(file_type ft) noexcept;\n\tvoid       permissions(perms prms) noexcept;\n};\n\n\n\nenum file_type\n{\n\tstatus_error, \t//文件存在 但 狀態 未知\n\tfile_not_found, //文件不存在\n\tregular_file, \t//普通文件\n\tdirectory_file,\t//目錄\n\n\tsymlink_file, \t//鏈接文件\n\tblock_file, \t//塊設備文件\n\tcharacter_file, \t//字符設備\n\tfifo_file, \t\t//管道設備\n\tsocket_file,\t//socket設備\n\n\ttype_unknown\t//類型未知\n};\n\n//下列函數 可方便 判斷 狀態\n\nexists()\nis_XXX\n\n//文件不是 regular_file directory_file symlink_file 時返回 true\nis_other(p)\n\n//p是目錄且其內無文件時返回 true \n//或者 p是文件 文件長度為0 返回 true\nis_empty(p)\t\n\n\n\n//返回 進入 main() 時 的路徑\ninitial_path()\n\n//返回 當前路徑\ncurrent_path()\n\n//返回文件大小 文件不存在 拋出異常\nfile_size()\n\n//返回/設置 最後修改時間\nstd::time_t last_write_time()\nlast_write_time(std::time_t)\n\n\n//返回路徑 磁盤 空間 情況\nspace_info space()\n\nstruct space_info\n{\n\tuintmax_t capacity;\t//總大小\n\tuintmax_t free;\t\t//似乎 和 available 一樣\n\tuintmax_t available;\t//可用\n}\n\u003c/pre\u003e"