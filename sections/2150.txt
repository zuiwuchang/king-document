var __v="\u003cpre class=\"k-pre\"\u003e//返回 thread是否 標識了一個 可執行線程(線程執行結束 或 detach 返回false)\nbool joinable() const\n\n//等待線程執行結束\nvoid join();\ntimed_join\t//同上 不過接受一個 時間段 作為等待超時\n\n//將thread與線程執行體分離 之後 thread不能再管理線程 然線程會繼續執行\nvoid detach();\n\n//返回線程id對象 支持copy compare\nid get_id()\n\n//放棄執行時間片\nstatic void yield()\n//睡眠 傳入時間點\nstatic inline void sleep(const system_time\u0026amp; xt)\n//返回cpu數\nstatic unsigned hardware_concurrency()\n\nboost::this_thread 提供了三個函數 用於操作當前線程\nsleep\t\t//可以是時間段 或 時間點\nyield\nget_id\n\u003c/pre\u003e"