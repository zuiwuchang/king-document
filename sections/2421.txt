var __v="\n\u003cpre class='prettyprint linenums'\u003eusing System.Data.Common;\n\nnamespace ConsoleApplication\n{\n   \n    class Program\n    {\n        class King\n        {\n            public int Id { get; set; }\n            public string Name { get; set; }\n            public string Who { get; set; }\n\n            public King(int id, string name, string who)\n            {\n                Id = id;\n                Name = name;\n                Who = who;\n            }\n            public override string ToString()\n            {\n                return \"孤是\" + Name + \"，大明\" + Who + \",\" + Id + \"。\";\n            }\n        }\n        static void Main(string[] args)\n        {\n            string str_provider = \"System.Data.Odbc\";\n            string str_conn = \"DSN=dark\";\n            \n            try\n            {\n                //獲取 驅動 工廠\n                DbProviderFactory factory = DbProviderFactories.GetFactory(str_provider);\n\n                //創建 連接 對象\n                using (DbConnection conn = factory.CreateConnection())\n                {\n                    try\n                    {\n                        //連接到 數據庫\n                        conn.ConnectionString = str_conn;\n                        conn.Open();\n                        Console.WriteLine(\"connect success {0}\", conn.State == System.Data.ConnectionState.Open);\n                        \n                        //創建 sql命令 對象\n                        DbCommand cmd = conn.CreateCommand();\n                        \n                        //執行 無返回 命令\n                        cmd.CommandText = \"delete from king\";\n                        cmd.ExecuteNonQuery();\n\n                        //插入數據\n                        King[] kings = new King[] { new King(0, \"朱元璋\", \"太祖\"),\n                            new King(0, \"朱允炆\", \"惠帝\"),\n                            new King(0, \"朱棣\", \"成祖\"),\n                            new King(0, \"朱高熾\", \"仁宗\")\n                            };\n                        //cmd.CommandText = \"insert into king (name,who) values (@name,@who)\";\n                        cmd.CommandText = \"insert into king (name,who) values (?,?)\";\n                        foreach (var king in kings)\n                        {\n                            DbParameter param = factory.CreateParameter();\n                            //param.ParameterName = \"@name\";    //mysql 不支持 @xxx 寫法\n                            param.Value = king.Name;\n                            param.DbType = System.Data.DbType.String;\n                            param.Direction = System.Data.ParameterDirection.Input;\n                            cmd.Parameters.Add(param);\n\n                            param = factory.CreateParameter();\n                            //param.ParameterName = \"@who\";\n                            param.Value = king.Who;\n                            param.DbType = System.Data.DbType.String;\n                            param.Direction = System.Data.ParameterDirection.Input;\n                            cmd.Parameters.Add(param);\n\n                            cmd.ExecuteNonQuery();\n                            cmd.Parameters.Clear();\n                        }\n\n                        //使用 事務\n                        DbTransaction transaction = null;\n                        try\n                        {\n                            transaction = conn.BeginTransaction();\n\n                            King[] kings2 = new King[] { new King(0, \"朱祁鎮\", \"英宗\"),\n                                new King(0, \"朱祁鈺\", \"代宗\"),\n                                new King(0, \"朱見深\", \"憲宗\"),\n                                new King(0, \"朱祐樘\", \"孝宗\"),\n                                new King(0, \"朱厚照\", \"武宗\")\n                            };\n                            \n                            foreach (var king in kings2)\n                            {\n                                //事務的 每個命令 都必須是 新的 DbCommand 實例\n                                DbCommand tc = conn.CreateCommand();\n                                //設置 事務\n                                tc.Transaction = transaction;\n\n                                tc.CommandText = \"insert into king (name,who) values (?,?)\";\n\n                                DbParameter param = factory.CreateParameter();\n                                param.Value = king.Name;\n                                param.DbType = System.Data.DbType.String;\n                                param.Direction = System.Data.ParameterDirection.Input;\n                                tc.Parameters.Add(param);\n\n                                param = factory.CreateParameter();\n                                param.Value = king.Who;\n                                param.DbType = System.Data.DbType.String;\n                                param.Direction = System.Data.ParameterDirection.Input;\n                                tc.Parameters.Add(param);\n\n                                tc.ExecuteNonQuery();\n                            }\n                            transaction.Commit();\n                        }\n                        catch(DbException e)\n                        {\n                            if (transaction != null)\n                            {\n                                transaction.Rollback();\n                            }\n                            throw e;\n                        }\n\n                        //查詢數據\n                        cmd.CommandText = \"select * from king\";\n                        using (DbDataReader r = cmd.ExecuteReader())\n                        {\n                            for (int i = 0; i \u0026lt; r.FieldCount; ++i)\n                            {\n                                Console.Write(\"{0}   \",r.GetName(i));\n                            }\n                            Console.WriteLine();\n\n                            while (r.Read())\n                            {\n                                //Console.WriteLine( new King(r.GetInt32(0), r.GetString(1), r.GetString(2)));\n                                Console.WriteLine(\"{0}  {1} {2}\", r[\"id\"], r[\"name\"], r[\"who\"]);\n                            }\n                        }\n\n                        //ExecuteReader 的輕量版本 用於 返回一個 值\n                        cmd.CommandText = \"select count(*) from king\";\n                        Console.WriteLine(\"{0} rows\",cmd.ExecuteScalar());\n\n\n                    }\n                    catch (DbException e)\n                    {\n                        Console.WriteLine(e.Message);\n                    }\n                }\n            }\n            catch (System.ArgumentException e)\n            {\n                Console.WriteLine(e.Message);\n            }\n\n            Console.WriteLine(\"press any key to exit\");\n            Console.ReadLine();\n        }\n        \n    }\n}\u003c/pre\u003e"