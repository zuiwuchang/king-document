var __v="\n\u003cpre class='prettyprint linenums'\u003eng generate directive home/show-hidht\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003eimport { Directive, ElementRef, Renderer2, Input, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appShowHidht]'\n})\nexport class ShowHidhtDirective {\n\n  // 注入 依賴\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  // 定義一個 和 屬性 同名的 輸入 屬性\n  @Input('appShowHidht')\n  set show(ok: boolean) { //必須使用 set 才能 監聽 值改變\n    console.log(ok)\n    if (ok) {\n      this.renderer.removeClass(this.el.nativeElement, 'Hide');\n    } else {\n      this.renderer.addClass(this.el.nativeElement, 'Hide');\n    }\n  }\n\n  // 定義另外一個 屬性\n  // 只需要 獲取初始值 不需要 監控 改變 就 不要用 set\n  @Input()\n  highlightColor: string\n\n  // 監控 宿主 事件\n  @HostListener('mouseenter') onMouseEnter() {\n    this.highlight(this.highlightColor || 'red');\n  }\n  @HostListener('mouseleave') onMouseLeave() {\n    this.highlight(null);\n  }\n\n  private highlight(color: string) {\n    this.el.nativeElement.style.backgroundColor = color;\n  }\n}\n\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003e\u0026lt;button (click)=\"show=!show\"\u0026gt;do\u0026lt;/button\u0026gt;\n\u0026lt;p [appShowHidht]=\"show\" [highlightColor]=\"'yellow'\"\u0026gt;\n  home view\n\u0026lt;/p\u0026gt;\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003e\u0026lt;button (click)=\"show=!show\"\u0026gt;do\u0026lt;/button\u0026gt;\n\u0026lt;p [appShowHidht]=\"show\" highlightColor=\"yellow\"\u0026gt;\n  home view\n\u0026lt;/p\u0026gt;\u003c/pre\u003e"