var __v="\u003cpre class='k-pre'\u003eAngular 中的 服務 全部都是 工作在 DI下\n使用 ng generate service XXX 創建一個服務\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003eng generate service data/beauty\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003eimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeautyService {\n\n  constructor() { }\n\n}\u003c/pre\u003e\n\n\u003cpre class='k-pre'\u003e\u003cstrong\u003eng generate service data/beauty\u003c/strong\u003e 命令 會 創建一個  \u003cstrong\u003eBeautyService\u003c/strong\u003e 服務\n\n\u003cstrong\u003e@Injectable\u003c/strong\u003e 裝飾器 聲明了 後面的類 是一個 可注入的\n\u003cstrong\u003eprovidedIn: 'root'\u003c/strong\u003e 指示了 由 根註冊器 提供 創建服務 (因此可以在 整個 程式的 任何地方 注入此類)\n\n\n修改 下 代碼 提供 一個 put get 方法 以供 消費者使用 此 服務\n\u003c/pre\u003e\n\n\u003cpre class='prettyprint linenums'\u003eimport { Injectable } from '@angular/core';\nexport class Beauty {\n  ID: number\n  Name: string\n  constructor(id: number, name: string) {\n    this.ID = id;\n    this.Name = name;\n  }\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class BeautyService {\n  private beautys: Beauty[] = new Array\u0026lt;Beauty\u0026gt;();\n  private id: number = 1;\n  constructor() { }\n\n  get() {\n    return this.beautys;\n  }\n  put(name: string) {\n    const id = this.id;\n    this.beautys.push(\n      new Beauty(id, name),\n    );\n    this.id++;\n  }\n}\n\u003c/pre\u003e"