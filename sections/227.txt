var __v="\u003cpre class=\"prettyprint linenums\"\u003epackage main\n\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t_ \"github.com/go-sql-driver/mysql\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tvar err error\n\tdefer func() {\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t}\n\n\t}()\n\n\t//connect\n\tcon, err := sql.Open(\"mysql\", \"dark:jayjolin@/dark?charset=utf8\")\n\tif err != nil {\n\t\treturn\n\t}\n\n\t/*****************\tsql\t****************/\n\t//drop\n\t_, err = con.Exec(\"drop table if exists test\")\n\tif err != nil {\n\t\treturn\n\t}\n\n\t//create\n\t_, err = con.Exec(\"create table test(id int primary key auto_increment,name varchar(20))\")\n\tif err != nil {\n\t\treturn\n\t}\n\n\t//insert\n\tfor i := 10; i \u0026lt; 20; i++ {\n\t\t_, err = con.Exec(\"insert into test values (?,?)\", i, \"name\"+strconv.Itoa(i))\n\t\tif err != nil {\n\t\t\treturn\n\t\t}\n\t}\n\tstm, err := con.Prepare(\"insert into test values (?,?)\")\n\tif err != nil {\n\t\treturn\n\t}\n\tfor i := 100; i \u0026lt; 110; i++ {\n\t\trs, err := stm.Exec(i, \"name\"+strconv.Itoa(i))\n\t\tif err != nil {\n\t\t\treturn\n\t\t}\n\t\tid, _ := rs.LastInsertId()\n\t\tfmt.Println(\"id =\", id)\n\t}\n\n\t//delete\n\trs, err := con.Exec(\"delete from test where id \u0026gt; 99\")\n\tif err != nil {\n\t\treturn\n\t}\n\tcount, _ := rs.RowsAffected()\n\tfmt.Println(\"delete\", count)\n\n\t//select\n\trows, err := con.Query(\"select * from test\")\n\tfields, err := rows.Columns()\n\tif err != nil {\n\t\treturn\n\t}\n\tfor _, field := range fields {\n\t\tfmt.Println(field)\n\t}\n\tfor rows.Next() {\n\t\tvar id int\n\t\tvar name string\n\t\terr = rows.Scan(\u0026amp;id, \u0026amp;name)\n\t\tif err != nil {\n\t\t\treturn\n\t\t}\n\t\tfmt.Println(id)\n\t}\n\n\ttx, err := con.Begin()\n\tif err != nil {\n\t\treturn\n\t}\n\ttransaction(tx)\n\n}\nfunc transaction(tx *sql.Tx) {\n\tvar err error\n\tdefer func() {\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\t//回滾事務\n\t\t\t//同時 解開 事務的鎖定\n\t\t\ttx.Rollback()\n\t\t} else {\n\t\t\t//提交事務 提交後將無法回滾到之前狀態\n\t\t\t//在提交前 調用Exec等時 sql就被執行 Commit只是改變提交狀態\n\t\t\t//同時 解開 事務的鎖定\n\t\t\ttx.Commit()\n\t\t}\n\t}()\n\t_, err = tx.Exec(\"delete from test\")\n\tif err != nil {\n\t\treturn\n\t}\n\n\tstm, err := tx.Prepare(\"insert into test values (?,?)\")\n\tif err != nil {\n\t\treturn\n\t}\n\tfor i := 50; i \u0026lt; 60; i++ {\n\t\t_, err := stm.Exec(i, \"name\"+strconv.Itoa(i))\n\t\tif err != nil {\n\t\t\treturn\n\t\t}\n\t}\n}\u003c/pre\u003e"