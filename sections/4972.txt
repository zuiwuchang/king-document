var __v="\u003cpre class='k-pre'\u003e使用 HostListener 可以 監控 宿主的事件\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003e ng generate directive home/hight\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003eimport { Directive, Input, HostListener, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appHight]'\n})\nexport class HightDirective {\n  // 只需要 獲取初始值 不需要 監控 改變 就 不要用 set\n  @Input('appHight')\n  highlightColor: string\n\n  constructor(private el: ElementRef) {\n  }\n\n  // 監控 宿主 事件\n  @HostListener('mouseenter') onMouseEnter() {\n    this.highlight(this.highlightColor || 'red');\n  }\n  @HostListener('mouseleave') onMouseLeave() {\n    this.highlight(null);\n  }\n\n  private highlight(color: string) {\n    this.el.nativeElement.style.backgroundColor = color;\n  }\n}\n\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003e\u0026lt;p [appHight]=\"'yellow'\"\u0026gt;\n  home view\n\u0026lt;/p\u0026gt;\u003c/pre\u003e"