var __v="\u003cpre class=\"k-pre\"\u003e\u003cstrong\u003elogin.gtpl\u003c/strong\u003e\u003cpre class='prettyprint linenums'\u003e\u0026lt;html\u0026gt;\n\u0026lt;head\u0026gt;\n\u0026lt;title\u0026gt;\u0026lt;/title\u0026gt;\n\u0026lt;/head\u0026gt;\n\u0026lt;body\u0026gt;\n\u0026lt;form action=\"/login\" method=\"post\"\u0026gt;\n    用户名:\u0026lt;input type=\"text\" name=\"username\"\u0026gt;\n    密码:\u0026lt;input type=\"password\" name=\"password\"\u0026gt;\n    \u0026lt;input type=\"submit\" value=\"登陆\"\u0026gt;\n\u0026lt;/form\u0026gt;\n\u0026lt;/body\u0026gt;\n\u0026lt;/html\u0026gt;\u003c/pre\u003e\n\u003cstrong\u003emain.go\u003c/strong\u003e\u003cpre class='prettyprint linenums'\u003epackage main\n\nimport (\n\t\"fmt\"\n\t\"html/template\"\n\t\"log\"\n\t\"net/http\"\n\t\"strings\"\n)\n\nfunc sayhelloName(w http.ResponseWriter, r *http.Request) {\n\tr.ParseForm() //解析url传递的参数，对于POST则解析响应包的主体（request body）\n\t//注意:如果没有调用ParseForm方法，下面无法获取表单的数据\n\tfmt.Println(r.Form) //这些信息是输出到服务器端的打印信息\n\tfmt.Println(\"path\", r.URL.Path)\n\tfmt.Println(\"scheme\", r.URL.Scheme)\n\tfmt.Println(r.Form[\"url_long\"])\n\tfor k, v := range r.Form {\n\t\tfmt.Println(\"key:\", k)\n\t\tfmt.Println(\"val:\", strings.Join(v, \"\"))\n\t}\n\tfmt.Fprintf(w, \"Hello astaxie!\") //这个写入到w的是输出到客户端的\n}\n\nfunc login(w http.ResponseWriter, r *http.Request) {\n\tfmt.Println(\"method:\", r.Method) //获取请求的方法\n\tif r.Method == \"GET\" {\n\t\tt, _ := template.ParseFiles(\"login.gtpl\")\n\t\tt.Execute(w, nil)\n\t} else {\n\t\t//请求的是登陆数据，那么执行登陆的逻辑判断\n\t\tfmt.Println(\"username:\", r.Form[\"username\"])\n\t\tfmt.Println(\"password:\", r.Form[\"password\"])\n\t}\n}\n\nfunc main() {\n\thttp.HandleFunc(\"/\", sayhelloName)       //设置访问的路由\n\thttp.HandleFunc(\"/login.html\", login)   //设置访问的路由\n\terr := http.ListenAndServe(\":80\", nil) //设置监听的端口\n\tif err != nil {\n\t\tlog.Fatal(\"ListenAndServe: \", err)\n\t}\n}\u003c/pre\u003e\u003c/pre\u003e"