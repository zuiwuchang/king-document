var __v="\u003cpre class=\"prettyprint linenums\"\u003epackage main\n\nimport (\n\t\"fmt\"\n)\n\n//定義 賭局 接口\n//裝飾者的 存在應該是 透明度 所以 被裝飾/裝飾 者 應該是 同一型別(oo中 同一超類)\ntype GamblingInterface interface {\n\t//返回 收益\n\tEarnings() float32\n\n\t//返回玩法\n\tPlay() string\n}\n\n//定義 骰子\ntype Dice struct {\n}\n\nfunc (g *Dice) Earnings() float32 {\n\t//其實 你是 羅四海 的得意弟子 所以每局都穩贏 這麼多\n\t//... 如果認錯了人 其實你不是 四哥的門人 就修改使用 自己的 收益算法\n\treturn 10000\n}\nfunc (g *Dice) Play() string {\n\treturn \"骰寶\"\n}\n\n//定義 牌九\ntype PaiGow struct {\n}\n\nfunc (g *PaiGow) Earnings() float32 {\n\treturn 1000\n}\nfunc (g *PaiGow) Play() string {\n\treturn \"牌九\"\n}\n\n//定義 裝飾者 接口 oo中 裝飾者 的父類\ntype DecoratorInterface interface {\n\tEarnings() float32\n\tDecorator(d GamblingInterface)\n\tPlay() string\n}\n\n//定義裝飾者 國際外圍\ntype DecoratorInternational struct {\n\tgambling GamblingInterface\n}\n\nfunc (d *DecoratorInternational) Earnings() float32 {\n\treturn d.gambling.Earnings() + 10000*10\n}\nfunc (d *DecoratorInternational) Decorator(g GamblingInterface) {\n\td.gambling = g\n}\nfunc (d *DecoratorInternational) Play() string {\n\treturn d.gambling.Play() + \" \" + \"國際外圍\"\n}\n\n//定義裝飾者 本地外圍\ntype DecoratorLocal struct {\n\tgambling GamblingInterface\n}\n\nfunc (d *DecoratorLocal) Earnings() float32 {\n\treturn d.gambling.Earnings() + 10000*3\n}\nfunc (d *DecoratorLocal) Decorator(g GamblingInterface) {\n\td.gambling = g\n}\nfunc (d *DecoratorLocal) Play() string {\n\treturn d.gambling.Play() + \" \" + \"本地外圍\"\n}\n\nfunc Decorator(g GamblingInterface, d DecoratorInterface) GamblingInterface {\n\td.Decorator(g)\n\treturn d\n}\nfunc main() {\n\tvar d GamblingInterface\n\td = \u0026amp;Dice{}\n\tfmt.Println(d.Play(), d.Earnings())\n\td = Decorator(d, \u0026amp;DecoratorLocal{})\n\tfmt.Println(d.Play(), d.Earnings())\n\td = Decorator(d, \u0026amp;DecoratorLocal{})\n\tfmt.Println(d.Play(), d.Earnings())\n\td = Decorator(d, \u0026amp;DecoratorInternational{})\n\tfmt.Println(d.Play(), d.Earnings())\n\n\td = \u0026amp;PaiGow{}\n\tfmt.Println(d.Play(), d.Earnings())\n\td = Decorator(d, \u0026amp;DecoratorLocal{})\n\tfmt.Println(d.Play(), d.Earnings())\n}\n\u003c/pre\u003e"