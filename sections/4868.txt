var __v="\u003cpre class='k-pre'\u003e操作符 接收一些 配置項 然後返回一個以來源 可觀察對象為 參數的函數\n當這個函數 執行時 操作符 會從 來源可觀察對象中 取出值 轉換它們 並返回轉換後的 值組成的 新 可觀察對象\n\n詳見 \u003ca href='http://reactivex.io/rxjs/manual/overview.html#operators' target='_blank'\u003ehttp://reactivex.io/rxjs/manual/overview.html#operators\u003c/a\u003e\n\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003eimport { Component, OnInit } from '@angular/core';\nimport { of } from \"rxjs/observable/of\";\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-view1',\n  templateUrl: './view1.component.html',\n  styleUrls: ['./view1.component.css']\n})\nexport class View1Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    // 創建 Observable\n    let observable = of(0, 1, 2, 3);\n    // map 操作符\n    const squareValues = map((v: number) =\u0026gt; {\n      return v * v;\n    })\n    // 使用 操作符 包裝原 Observable 為 新的 Observable\n    observable = squareValues(observable);\n\n    // 訂閱\n    observable.subscribe({\n      next(v) { console.log(v); },\n      error(e) { console.error('Error: ' + e); },\n      complete() { console.log('Completed'); }\n    });\n  }\n}\n\u003c/pre\u003e"