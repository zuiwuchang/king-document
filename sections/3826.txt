var __v="\u003ctable class=\"table\"\u003e\n\u003ctr\u003e\u003cth\u003e語法\u003c/th\u003e\u003cth\u003e描述\u003c/th\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.add(x)\u003c/td\u003e\u003ctd\u003e將數據x添加到s中\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.clear()\u003c/td\u003e\u003ctd\u003e移除s中所有數據\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.copy()\u003c/td\u003e\u003ctd\u003e返回 s 的 淺拷貝\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.discard(x)\u003c/td\u003e\u003ctd\u003e如果 x 存在於set中 將其移除\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003es.issubset(s1)\u003cbr\u003es \u0026lt;= s1\u003c/td\u003e\u003ctd\u003e返回 s 是否是 s1 的子集\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es \u0026lt; s1\u003c/td\u003e\u003ctd\u003e返回 s 是否是 s1 的真子集\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.issuperset(s1)\u003cbr\u003es \u0026gt;= s1\u003c/td\u003e\u003ctd\u003e返回 s1 是否是 s 的子集\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es \u0026gt; s1\u003c/td\u003e\u003ctd\u003e返回 s1 是否是 s 的真子集\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.pop()\u003c/td\u003e\u003ctd\u003e返回並移除 s中的一個 隨機項\u003cbr\u003e如果s爲空 產生 KeyError異常\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.remove(x)\u003c/td\u003e\u003ctd\u003e如果s中存在x移除之 否則產生KeyError異常\u003c/td\u003e\u003c/tr\u003e\n\n\u003ctr\u003e\u003ctd\u003es.difference(s1)\u003cbr\u003es - s1\u003c/td\u003e\u003ctd\u003e使用 s - s1 的差集 創建新集合\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.difference_update(s1)\u003cbr\u003es -= s1\u003c/td\u003e\u003ctd\u003e將s 更新爲 s - s1 的差集\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.intersection(s1)\u003cbr\u003es \u0026amp; s1\u003c/td\u003e\u003ctd\u003e使用 s s1 的交集 創建新集合\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.intersection_update(s1)\u003cbr\u003es \u0026amp;= s1\u003c/td\u003e\u003ctd\u003e將s 更新爲 s s1 的交集\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.union(s1)\u003cbr\u003es | s1\u003c/td\u003e\u003ctd\u003e使用 s s1 的並集 創建新集合\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.update(s1)\u003cbr\u003es |= s1\u003c/td\u003e\u003ctd\u003e將s 更新爲 s s1 的並集\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.symmetric_difference(s1)\u003cbr\u003es ^ s1\u003c/td\u003e\u003ctd\u003e使用 (s | s1) - (s \u0026amp; s1 ) 創建新集合\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003es.symmetric_difference_update(s1)\u003cbr\u003es ^= s1\u003c/td\u003e\u003ctd\u003e將s 更新爲 (s | s1) - (s \u0026amp; s1 )\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e"