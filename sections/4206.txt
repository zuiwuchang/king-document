var __v="\u003ctable class=\"table\"\u003e\n\u003ctbody\u003e\u003ctr\u003e\u003cth\u003e.proto Type\u003c/th\u003e\u003cth\u003eNotes\u003c/th\u003e\u003cth\u003eC++ Type\u003c/th\u003e\u003cth\u003eJava Type\u003c/th\u003e\u003cth\u003ePython Type\u003csup\u003e[2]\u003c/sup\u003e\u003c/th\u003e\u003cth\u003eGo Type\u003c/th\u003e\u003cth\u003eRuby Type\u003c/th\u003e\u003cth\u003eC# Type\u003c/th\u003e\u003cth\u003ePHP Type\u003c/th\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003edouble\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003ctd\u003edouble\u003c/td\u003e\u003ctd\u003edouble\u003c/td\u003e\u003ctd\u003efloat\u003c/td\u003e\u003ctd\u003efloat64\u003c/td\u003e\u003ctd\u003eFloat\u003c/td\u003e\u003ctd\u003edouble\u003c/td\u003e\u003ctd\u003efloat\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003efloat\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003ctd\u003efloat\u003c/td\u003e\u003ctd\u003efloat\u003c/td\u003e\u003ctd\u003efloat\u003c/td\u003e\u003ctd\u003efloat32\u003c/td\u003e\u003ctd\u003eFloat\u003c/td\u003e\u003ctd\u003efloat\u003c/td\u003e\u003ctd\u003efloat\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eint32\u003c/td\u003e\u003ctd\u003eUses variable-length encoding. Inefficient for encoding negative numbers â€“ if your field is likely to have negative values, use sint32 instead.\u003c/td\u003e\u003ctd\u003eint32\u003c/td\u003e\u003ctd\u003eint\u003c/td\u003e\u003ctd\u003eint\u003c/td\u003e\u003ctd\u003eint32\u003c/td\u003e\u003ctd\u003eFixnum or Bignum (as required)\u003c/td\u003e\u003ctd\u003eint\u003c/td\u003e\u003ctd\u003einteger\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eint64\u003c/td\u003e\u003ctd\u003eUses variable-length encoding. Inefficient for encoding negative numbers â€“ if your field is likely to have negative values, use sint64 instead.\u003c/td\u003e\u003ctd\u003eint64\u003c/td\u003e\u003ctd\u003elong\u003c/td\u003e\u003ctd\u003eint/long\u003csup\u003e[3]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003eint64\u003c/td\u003e\u003ctd\u003eBignum\u003c/td\u003e\u003ctd\u003elong\u003c/td\u003e\u003ctd\u003einteger/string\u003csup\u003e[5]\u003c/sup\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003euint32\u003c/td\u003e\u003ctd\u003eUses variable-length encoding.\u003c/td\u003e\u003ctd\u003euint32\u003c/td\u003e\u003ctd\u003eint\u003csup\u003e[1]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003eint/long\u003csup\u003e[3]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003euint32\u003c/td\u003e\u003ctd\u003eFixnum or Bignum (as required)\u003c/td\u003e\u003ctd\u003euint\u003c/td\u003e\u003ctd\u003einteger\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003euint64\u003c/td\u003e\u003ctd\u003eUses variable-length encoding.\u003c/td\u003e\u003ctd\u003euint64\u003c/td\u003e\u003ctd\u003elong\u003csup\u003e[1]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003eint/long\u003csup\u003e[3]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003euint64\u003c/td\u003e\u003ctd\u003eBignum\u003c/td\u003e\u003ctd\u003eulong\u003c/td\u003e\u003ctd\u003einteger/string\u003csup\u003e[5]\u003c/sup\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003esint32\u003c/td\u003e\u003ctd\u003eUses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.\u003c/td\u003e\u003ctd\u003eint32\u003c/td\u003e\u003ctd\u003eint\u003c/td\u003e\u003ctd\u003eint\u003c/td\u003e\u003ctd\u003eint32\u003c/td\u003e\u003ctd\u003eFixnum or Bignum (as required)\u003c/td\u003e\u003ctd\u003eint\u003c/td\u003e\u003ctd\u003einteger\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003esint64\u003c/td\u003e\u003ctd\u003eUses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.\u003c/td\u003e\u003ctd\u003eint64\u003c/td\u003e\u003ctd\u003elong\u003c/td\u003e\u003ctd\u003eint/long\u003csup\u003e[3]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003eint64\u003c/td\u003e\u003ctd\u003eBignum\u003c/td\u003e\u003ctd\u003elong\u003c/td\u003e\u003ctd\u003einteger/string\u003csup\u003e[5]\u003c/sup\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003efixed32\u003c/td\u003e\u003ctd\u003eAlways four bytes. More efficient than uint32 if values are often greater than 2\u003csup\u003e28\u003c/sup\u003e.\u003c/td\u003e\u003ctd\u003euint32\u003c/td\u003e\u003ctd\u003eint\u003csup\u003e[1]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003eint\u003c/td\u003e\u003ctd\u003euint32\u003c/td\u003e\u003ctd\u003eFixnum or Bignum (as required)\u003c/td\u003e\u003ctd\u003euint\u003c/td\u003e\u003ctd\u003einteger\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003efixed64\u003c/td\u003e\u003ctd\u003eAlways eight bytes. More efficient than uint64 if values are often greater than 2\u003csup\u003e56\u003c/sup\u003e.\u003c/td\u003e\u003ctd\u003euint64\u003c/td\u003e\u003ctd\u003elong\u003csup\u003e[1]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003eint/long\u003csup\u003e[3]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003euint64\u003c/td\u003e\u003ctd\u003eBignum\u003c/td\u003e\u003ctd\u003eulong\u003c/td\u003e\u003ctd\u003einteger/string\u003csup\u003e[5]\u003c/sup\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003esfixed32\u003c/td\u003e\u003ctd\u003eAlways four bytes.\u003c/td\u003e\u003ctd\u003eint32\u003c/td\u003e\u003ctd\u003eint\u003c/td\u003e\u003ctd\u003eint\u003c/td\u003e\u003ctd\u003eint32\u003c/td\u003e\u003ctd\u003eFixnum or Bignum (as required)\u003c/td\u003e\u003ctd\u003eint\u003c/td\u003e\u003ctd\u003einteger\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003esfixed64\u003c/td\u003e\u003ctd\u003eAlways eight bytes.\u003c/td\u003e\u003ctd\u003eint64\u003c/td\u003e\u003ctd\u003elong\u003c/td\u003e\u003ctd\u003eint/long\u003csup\u003e[3]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003eint64\u003c/td\u003e\u003ctd\u003eBignum\u003c/td\u003e\u003ctd\u003elong\u003c/td\u003e\u003ctd\u003einteger/string\u003csup\u003e[5]\u003c/sup\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ebool\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003ctd\u003ebool\u003c/td\u003e\u003ctd\u003eboolean\u003c/td\u003e\u003ctd\u003ebool\u003c/td\u003e\u003ctd\u003ebool\u003c/td\u003e\u003ctd\u003eTrueClass/FalseClass\u003c/td\u003e\u003ctd\u003ebool\u003c/td\u003e\u003ctd\u003eboolean\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003estring\u003c/td\u003e\u003ctd\u003eA string must always contain UTF-8 encoded or 7-bit ASCII text.\u003c/td\u003e\u003ctd\u003estring\u003c/td\u003e\u003ctd\u003eString\u003c/td\u003e\u003ctd\u003estr/unicode\u003csup\u003e[4]\u003c/sup\u003e\u003c/td\u003e\u003ctd\u003estring\u003c/td\u003e\u003ctd\u003eString (UTF-8)\u003c/td\u003e\u003ctd\u003estring\u003c/td\u003e\u003ctd\u003estring\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003ebytes\u003c/td\u003e\u003ctd\u003eMay contain any arbitrary sequence of bytes.\u003c/td\u003e\u003ctd\u003estring\u003c/td\u003e\u003ctd\u003eByteString\u003c/td\u003e\u003ctd\u003estr\u003c/td\u003e\u003ctd\u003e[]byte\u003c/td\u003e\u003ctd\u003eString (ASCII-8BIT)\u003c/td\u003e\u003ctd\u003eByteString\u003c/td\u003e\u003ctd\u003estring\u003c/td\u003e\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e"