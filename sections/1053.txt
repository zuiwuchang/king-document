var __v="\u003cpre class=\"prettyprint linenums\"\u003eimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\nimport org.apache.tomcat.jdbc.pool.DataSource;\nimport org.apache.tomcat.jdbc.pool.PoolProperties;\n\n/**\n *\n * @author Administrator\n */\npublic class JavaApplication {\n\n    /**\n     * @param args the command line arguments\n     */\n    public static void main(String[] args) {\n        PoolProperties p = new PoolProperties();\n        p.setDriverClassName(\"org.mariadb.jdbc.Driver\");    //設置驅動器名\n        p.setUrl(\"jdbc:mysql://localhost:3306/dark\");\n        p.setUsername(\"root\");\n        p.setPassword(\"***\");\n        p.setJmxEnabled(true);\n        p.setTestWhileIdle(false);\n        p.setTestOnBorrow(true);\n        p.setValidationQuery(\"SELECT 1\");\n        p.setTestOnReturn(false);\n        p.setValidationInterval(30000);\n        p.setTimeBetweenEvictionRunsMillis(30000);\n        p.setMaxActive(100);\n        p.setInitialSize(10);\n        p.setMaxWait(10000);\n        p.setRemoveAbandonedTimeout(60);\n        p.setMinEvictableIdleTimeMillis(30000);\n        p.setMinIdle(10);\n        p.setLogAbandoned(true);\n        p.setRemoveAbandoned(true);\n        p.setJdbcInterceptors(\n            \"org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;\"+\n            \"org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer\");\n        \n        //初始化 連接池\n        DataSource datasource = new DataSource();\n        datasource.setPoolProperties(p);\n\n         \n        Connection con = null; \n        try {\n            //獲取連接\n            con = datasource.getConnection();\n            Statement stm = con.createStatement();\n            String sql =\"select id from test\";\n            \n            //執行 sql 遍歷結果\n            ResultSet rs = stm.executeQuery(sql);\n            while(rs.next())\n            {\n                System.out.println(rs.getInt(\"id\"));\n                \n            }\n            rs.close();\n            \n          } catch (SQLException ex) {\n            Logger.getLogger(JavaApplication.class.getName()).log(Level.SEVERE, null, ex);\n        } finally {\n            if (con!=null) try {con.close();}catch (Exception ignore) {}\n          }\n                \n    }\n    \n}\u003c/pre\u003e"