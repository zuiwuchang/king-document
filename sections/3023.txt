var __v="\n\u003cpre class='prettyprint linenums'\u003e//定義的 輔助函數\nnamespace dark\n{\n\tnamespace gdiplus\n\t{\n\t\tclass tools\n\t\t{\n\t\tprivate:\n\t\t\ttools(){}\n\t\tpublic:\n\t\t\t//根據 MimeType 返回 CLSID\n\t\t\t//常用 MimeType image/bmp  image/jpeg image/gif image/png \n\t\t\tstatic bool get_encoder_clsid(const std::wstring\u0026amp; mime_type,CLSID\u0026amp; clsid)\n\t\t\t{\n\t\t\t\tbool result\t=false;;\n\n\t\t\t\t//獲取編碼器數量 存儲信息需要大小\n\t\t\t\tUINT num;\n\t\t\t\tUINT size;\n\t\t\t\tGdiplus::GetImageEncodersSize(\u0026amp;num,\u0026amp;size);\n\n\t\t\t\t//分配內存\n\t\t\t\tGdiplus::ImageCodecInfo* ptr_infos\t=\t(Gdiplus::ImageCodecInfo*)malloc(size);\n\t\n\t\t\t\t//獲取信息\n\t\t\t\tGdiplus::GetImageEncoders(num,size,ptr_infos);\n\n\t\t\t\t//獲取信息\n\t\t\t\t\n\t\t\t\tfor(UINT i = 0;i \u0026lt; num;++i)\n\t\t\t\t{\n\t\t\t\t\tif(mime_type == ptr_infos[i].MimeType)\n\t\t\t\t\t{\n\t\t\t\t\t\tclsid\t=\tptr_infos[i].Clsid;\n\t\t\t\t\t\tresult\t=\ttrue;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//釋放內存\n\t\t\t\tfree(ptr_infos);\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t//更具參數 Guid 值返回 人類能夠明白的 字符串\n#ifdef PARAM_NAME_ZH_CN\n\t#define\tPARAM_NAME_COMPRESSION\t\tL\"壓縮方式\"\n\t#define\tPARAM_NAME_COLORDEPTH\t\tL\"色深\"\n\t#define\tPARAM_NAME_SCANMETHOD\t\tL\"掃描方式\"\n\t#define\tPARAM_NAME_VERSION\t\t\tL\"保存版本\"\n\t#define\tPARAM_NAME_RENDERMETHOD\t\tL\"渲染方式\"\n\t#define\tPARAM_NAME_QUALITY\t\t\tL\"壓縮質量\"\n\t#define\tPARAM_NAME_TRANSFORMATION\tL\"轉換信息\"\n\t#define\tPARAM_NAME_LUMINANCETABLE\tL\"亮度表\"\n\t#define\tPARAM_NAME_CHROMINANCETABLE\tL\"色度表\"\n\t#define\tPARAM_NAME_SAVEFLAG\t\t\tL\"文件保存選項\"\n\t#define PARAM_NAME_UNKNOW\t\t\tL\"未知\"\n#else\n\t#define\tPARAM_NAME_COMPRESSION\t\tL\"Compression\"\n\t#define\tPARAM_NAME_COLORDEPTH\t\tL\"Color Depth\"\n\t#define\tPARAM_NAME_SCANMETHOD\t\tL\"Scan Method\"\n\t#define\tPARAM_NAME_VERSION\t\t\tL\"Version\"\n\t#define\tPARAM_NAME_RENDERMETHOD\t\tL\"Render Method\"\n\t#define\tPARAM_NAME_QUALITY\t\t\tL\"Quality\"\n\t#define\tPARAM_NAME_TRANSFORMATION\tL\"Transformation\"\n\t#define\tPARAM_NAME_LUMINANCETABLE\tL\"Luminance Table\"\n\t#define\tPARAM_NAME_CHROMINANCETABLE\tL\"Chrominance Table\"\n\t#define\tPARAM_NAME_SAVEFLAG\t\t\tL\"Save Flag\"\n\t#define PARAM_NAME_UNKNOW\t\t\tL\"UnKnown\"\n\n#endif\n\t\t\tstatic std::wstring get_param_name(const GUID\u0026amp; guid)\n\t\t\t{\t\n\t\t\t\tif(guid == Gdiplus::EncoderCompression)\n\t\t\t\t{\n\t\t\t\t\treturn PARAM_NAME_COMPRESSION;\n\t\t\t\t}\n\t\t\t\telse if(guid == Gdiplus::EncoderColorDepth)\n\t\t\t\t{\n\t\t\t\t\treturn PARAM_NAME_COLORDEPTH;\n\t\t\t\t}\n\t\t\t\telse if(guid == Gdiplus::EncoderScanMethod)\n\t\t\t\t{\n\t\t\t\t\treturn PARAM_NAME_SCANMETHOD;\n\t\t\t\t}\n\t\t\t\telse if(guid == Gdiplus::EncoderVersion)\n\t\t\t\t{\n\t\t\t\t\treturn PARAM_NAME_VERSION;\n\t\t\t\t}\n\t\t\t\telse if(guid == Gdiplus::EncoderRenderMethod)\n\t\t\t\t{\n\t\t\t\t\treturn PARAM_NAME_RENDERMETHOD;\n\t\t\t\t}\n\t\t\t\telse if(guid == Gdiplus::EncoderQuality)\n\t\t\t\t{\n\t\t\t\t\treturn PARAM_NAME_QUALITY;\n\t\t\t\t}\n\t\t\t\telse if(guid == Gdiplus::EncoderTransformation)\n\t\t\t\t{\n\t\t\t\t\treturn PARAM_NAME_TRANSFORMATION;\n\t\t\t\t}\n\t\t\t\telse if(guid == Gdiplus::EncoderLuminanceTable)\n\t\t\t\t{\n\t\t\t\t\treturn PARAM_NAME_LUMINANCETABLE;\n\t\t\t\t}\n\t\t\t\telse if(guid == Gdiplus::EncoderChrominanceTable)\n\t\t\t\t{\n\t\t\t\t\treturn PARAM_NAME_CHROMINANCETABLE;\n\t\t\t\t}\n\t\t\t\telse if(guid == Gdiplus::EncoderSaveFlag)\n\t\t\t\t{\n\t\t\t\t\treturn PARAM_NAME_SAVEFLAG;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn PARAM_NAME_UNKNOW;\n\t\t\t}\n\t\t};\n\t};\n};\n\n//示例        \nvoid CGDITestDlg::OnBnClickedButtonTest()\n{\n\tGdiplus::Image image(L\"123.bmp\");\n\n\tCLSID clsid;\n\ttypedef dark::gdiplus::tools tools_t;\n\tif(tools_t::get_encoder_clsid(L\"image/gif\",clsid))\n\t{\n\t\t//獲取保存參數信息 需要內存大小\n\t\tUINT size\t=\timage.GetEncoderParameterListSize(\u0026amp;clsid);\n\t\t//分配內存\n\t\tGdiplus::EncoderParameters* ptr_param\t=\t(Gdiplus::EncoderParameters*)malloc(size);\n\n\t\t//獲取參數信息\n\t\timage.GetEncoderParameterList(\u0026amp;clsid,size,ptr_param);\n\n\t\t//輸出信息\n\t\tCString tmp,info;\n\t\tfor(UINT i=0;i\u0026lt;ptr_param-\u0026gt;Count;++i)\n\t\t{\n\t\t\ttmp.Format(L\"參數名\\t:\\t%s\\r\\n\"\n\t\t\t\tL\"參數數量\\t:\\t%d\\r\\n\"\n\t\t\t\tL\"型別\\t:\\t%d\\r\\n\"\n\t\t\t\tL\"\\r\\n\\r\\n\"\n\t\t\t\t,tools_t::get_param_name(ptr_param-\u0026gt;Parameter[i].Guid).c_str()\n\t\t\t\t,ptr_param-\u0026gt;Parameter[i].NumberOfValues\n\t\t\t\t,ptr_param-\u0026gt;Parameter[i].Type\n\t\t\t\t\n\t\t\t\t);\n\t\t\tinfo\t+=\ttmp;\n\t\t}\n\t\tSetDlgItemText(IDC_EDIT1,info);\n\n\t\t//釋放內存\n\t\tfree(ptr_param);\n\t}\n}\n\u003c/pre\u003e\n\n\u003cpre class=\"k-pre\"\u003e\u003cstrong\u003eclass EncoderParameter\u003c/strong\u003e\n\nclass EncoderParameter {  public:    \n\tGUID  Guid;    \n\tULONG NumberOfValues;\n\tULONG Type;    \n\tVOID* Value;\n}; \n\n\u003cstrong\u003eGuid\u003c/strong\u003e\nGuid 代表了參數類型 (如保存分辨率 版本 色深等)\n\n\u003cstrong\u003eNumberOfValues\u003c/strong\u003e\n此參數類型 需要多少個參數設置(一個參數類型 可能需要多個參數進行設置)\n（如文件版本號 5.8 5是主版本 8是副版本）\n\n\u003cstrong\u003e指明 參數型別\u003c/strong\u003e\nenum EncoderParameterValueType {  EncoderParameterValueTypeByte          = 1,\t//8位無符號整型\n  EncoderParameterValueTypeASCII         = 2,\t//ASCII字符串\n  EncoderParameterValueTypeShort         = 3,\t//16位 無符號整型\n  EncoderParameterValueTypeLong          = 4,\t//32...\n  EncoderParameterValueTypeRational      = 5,\t//兩個32位... 第一個是分子 第二個是分母\n  EncoderParameterValueTypeLongRange     = 6,\t//整數區間 由兩個32位 無符號整型 構成 [最小,最大]\n  EncoderParameterValueTypeUndefined     = 7,\t//字節數組 可代表任意型別\n  EncoderParameterValueTypeRationalRange = 8};\t//分數區間 由4個 32位無符號整型構成\n  \n\u003cstrong\u003eValue\u003c/strong\u003e\n參數值數組 void*\n\u003c/pre\u003e"