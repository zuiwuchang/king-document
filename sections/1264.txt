var __v="\n\u003cpre class='prettyprint linenums'\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;array\u0026gt;\n#include \u0026lt;vector\u0026gt;\n#include \u0026lt;string\u0026gt;\n\ntemplate\u0026lt;typename T\u0026gt;\nvoid show_container(const T\u0026amp; container)\n{\n    for(const auto\u0026amp; v:container)\n    {\n        std::cout\u0026lt;\u0026lt;v\u0026lt;\u0026lt;\" \";\n    }\n    std::cout\u0026lt;\u0026lt;\"\\n\";\n}\n\nclass Animal\n{\nprivate:\n    std::string name;\n    int lv;\npublic:\n    Animal(const std::string\u0026amp; str,int n):name(str),lv(n)\n    {\n\n    }\n    void Speak()\n    {\n        std::cout\u0026lt;\u0026lt;\"i'm \"\u0026lt;\u0026lt;name\u0026lt;\u0026lt;\"\\nmy lv is \"\u0026lt;\u0026lt;lv\u0026lt;\u0026lt;\"\\n\";\n    }\n};\n\nstruct CAnimal\n{\n    std::string name;\n    int lv;\n\n    void Speak()\n    {\n        std::cout\u0026lt;\u0026lt;\"i'm \"\u0026lt;\u0026lt;name\u0026lt;\u0026lt;\"\\nmy lv is \"\u0026lt;\u0026lt;lv\u0026lt;\u0026lt;\"\\n\";\n    }\n};\nint main()\n{\n    std::array\u0026lt;int,5\u0026gt; arrs{0,1,2,3,4};\n    show_container(arrs);\n\n    std::vector\u0026lt;int\u0026gt; vs{0,1,2,3,4};\n    show_container(vs);\n\n    Animal animal{\"cat\",11};\n    animal.Speak();\n\n    CAnimal a{\"cat\",11};\n    a.Speak();\n    return 0;\n}\u003c/pre\u003e"