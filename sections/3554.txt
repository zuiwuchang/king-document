var __v="\u003cpre class=\"k-pre\"\u003e此示例 演示了如何 使用 選擇器 進行揀選(被揀選人物 禁用光照)\n以及 如何 為攝像機 加上一個 動作器 使其受到 重力 和 不能穿牆 飛行\n\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003eenum NOTE_ID\n{\n\tID_CAN_COLLISION\t=\t0x1\n\t,ID_NO_COLLISION\t=\t0\n\t,ID_LIGHTING\t\t=\t0x4\n};\n\nint main()\n{\n\tIrrlichtDevice *device_ptr\t=\tcreateDevice(video::EDT_DIRECT3D9);\n\n\tirr::video::IVideoDriver* driver_ptr\t=\tdevice_ptr-\u0026gt;getVideoDriver();\n\tirr::scene::ISceneManager* smgr_ptr\t\t=\tdevice_ptr-\u0026gt;getSceneManager();\n\t\n\tdevice_ptr-\u0026gt;getFileSystem()-\u0026gt;addFileArchive(\"media/map-20kdm2.pk3\");\n\tirr::scene::IAnimatedMesh*\tmesh\t\t=\tsmgr_ptr-\u0026gt;getMesh(\"20kdm2.bsp\");\n\tirr::scene::IMeshSceneNode* note_ptr\t=\tNULL;\n\tif(mesh)\n\t{\n\t\tnote_ptr\t=\tsmgr_ptr-\u0026gt;addOctreeSceneNode(mesh,0,ID_CAN_COLLISION);\n\t\tnote_ptr-\u0026gt;setPosition(irr::core::vector3df(-1350,-130,-1400));\n\t}\n\n\t//定義 三角形 選擇器\n\tirr::scene::ITriangleSelector* selector_ptr\t=\tNULL;\n\tif(note_ptr)\n\t{\n\t\t//創建 三角形 選擇器\n\t\tselector_ptr\t=\tsmgr_ptr-\u0026gt;createOctreeTriangleSelector(note_ptr-\u0026gt;getMesh(),note_ptr,128);\n\t\t//關聯 場景節點 三角形選擇器\n\t\tnote_ptr-\u0026gt;setTriangleSelector(selector_ptr);\n\t\t//引用計數 -1\n\t\tselector_ptr-\u0026gt;drop();\n\t}\n\n\t//一個從cs起源的經典 fps 控制 w s a d space\n\tirr::SKeyMap keyMap[5];\n\tkeyMap[0].Action = EKA_MOVE_FORWARD;\n\tkeyMap[0].KeyCode = KEY_KEY_W;\n\n\tkeyMap[1].Action = EKA_MOVE_BACKWARD;\n\tkeyMap[1].KeyCode = KEY_KEY_S;\n\n\tkeyMap[2].Action = EKA_STRAFE_LEFT;\n\tkeyMap[2].KeyCode = KEY_KEY_A;\n\n\tkeyMap[3].Action = EKA_STRAFE_RIGHT;\n\tkeyMap[3].KeyCode = KEY_KEY_D;\n\t\n\tkeyMap[4].Action = EKA_JUMP_UP;\n\tkeyMap[4].KeyCode = KEY_SPACE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\tirr::scene::ICameraSceneNode* camera_ptr\t=\tsmgr_ptr-\u0026gt;addCameraSceneNodeFPS(0,100,0.5,ID_NO_COLLISION,keyMap,5,true,1);\n\tcamera_ptr-\u0026gt;setPosition(irr::core::vector3df(50,50,-60));\n\tcamera_ptr-\u0026gt;setTarget(core::vector3df(-70,30,-60));\n\n\t//通常 fps 會隱藏 鼠標 而顯示一個廣告牌\n\tdevice_ptr-\u0026gt;getCursorControl()-\u0026gt;setVisible(false);\n\tirr::scene::IBillboardSceneNode* billboard_ptr\t=\tsmgr_ptr-\u0026gt;addBillboardSceneNode();\n\tbillboard_ptr-\u0026gt;setMaterialType(irr::video::EMT_TRANSPARENT_ADD_COLOR);\n\tbillboard_ptr-\u0026gt;setMaterialTexture(0,driver_ptr-\u0026gt;getTexture(\"media/particle.bmp\"));\n\tbillboard_ptr-\u0026gt;setMaterialFlag(irr::video::EMF_LIGHTING,false);\n\tbillboard_ptr-\u0026gt;setMaterialFlag(irr::video::EMF_ZBUFFER,false);\n\tbillboard_ptr-\u0026gt;setSize(irr::core::dimension2d(20,20));\n\n\t//為攝像機 定義一個 動作器\n\tirr::scene::ISceneNodeAnimator* animator_ptr\t=\tsmgr_ptr-\u0026gt;createCollisionResponseAnimator(selector_ptr\n\t\t,camera_ptr\n\t\t,irr::core::vector3df(30,45,30)\t//外接體 橢球\n\t\t,irr::core::vector3df(0,-10,0)\t//重力G\n\t\t,irr::core::vector3df(0,45,0)\t//人眼應該從球心 向上偏移一些\n\t\t);\n\t//關聯攝像機 動作器\n\tcamera_ptr-\u0026gt;addAnimator(animator_ptr);\n\tanimator_ptr-\u0026gt;drop();\n\n\t//增加一個MD 模型 (基於頂點動畫) \n\tirr::video::SMaterial material;\n\tirr::scene::IAnimatedMeshSceneNode*\n\t\tmodel_ptr\t=\tsmgr_ptr-\u0026gt;addAnimatedMeshSceneNode(smgr_ptr-\u0026gt;getMesh(\"media/faerie.md2\"),\n\t\t\t\t\t\t0, ID_CAN_COLLISION | ID_LIGHTING);\n\tmodel_ptr-\u0026gt;setPosition(core::vector3df(-90,-15,-140));\n\tmodel_ptr-\u0026gt;setScale(core::vector3df(1.6f));\n\tmodel_ptr-\u0026gt;setMD2Animation(scene::EMAT_POINT);\n\tmodel_ptr-\u0026gt;setAnimationSpeed(20.f);\n\tmaterial.setTexture(0, driver_ptr-\u0026gt;getTexture(\"media/faerie2.bmp\"));\n\tmaterial.Lighting = true;\n\tmaterial.NormalizeNormals = true;\n\tmodel_ptr-\u0026gt;getMaterial(0) = material;\n\n\t//為模型創建 選擇器\n\tselector_ptr\t=\tsmgr_ptr-\u0026gt;createTriangleSelector(model_ptr);\n\tmodel_ptr-\u0026gt;setTriangleSelector(selector_ptr);\n\tselector_ptr-\u0026gt;drop();\n\n\t//增加一個 B3D 模型 (基於骨骼動畫)\n\tmodel_ptr = smgr_ptr-\u0026gt;addAnimatedMeshSceneNode(smgr_ptr-\u0026gt;getMesh(\"media/ninja.b3d\"),\n\t\t\t\t\t\t0, ID_CAN_COLLISION | ID_LIGHTING);\n\tmodel_ptr-\u0026gt;setScale(core::vector3df(10));\n\tmodel_ptr-\u0026gt;setPosition(core::vector3df(-75,-66,-80));\n\tmodel_ptr-\u0026gt;setRotation(core::vector3df(0,90,0));\n\tmodel_ptr-\u0026gt;setAnimationSpeed(8.f);\n\tmodel_ptr-\u0026gt;getMaterial(0).NormalizeNormals = true;\n\tmodel_ptr-\u0026gt;getMaterial(0).Lighting = true;\n\n\tselector_ptr\t=\tsmgr_ptr-\u0026gt;createTriangleSelector(model_ptr);\n\tmodel_ptr-\u0026gt;setTriangleSelector(selector_ptr);\n\tselector_ptr-\u0026gt;drop();\n\n\t//增加一個 XFILE 模型 (基於骨骼動畫)\n\tmodel_ptr = smgr_ptr-\u0026gt;addAnimatedMeshSceneNode(smgr_ptr-\u0026gt;getMesh(\"media/dwarf.x\"),\n\t\t\t\t\t\t0, ID_CAN_COLLISION | ID_LIGHTING);\n\tmodel_ptr-\u0026gt;setPosition(core::vector3df(-70,-66,-30));\n\tmodel_ptr-\u0026gt;setRotation(core::vector3df(0,-90,0));\n\tmodel_ptr-\u0026gt;setAnimationSpeed(20.f);\n\tmodel_ptr-\u0026gt;getMaterial(0).Lighting = true;\n\t\n\tselector_ptr\t=\tsmgr_ptr-\u0026gt;createTriangleSelector(model_ptr);\n\tmodel_ptr-\u0026gt;setTriangleSelector(selector_ptr);\n\tselector_ptr-\u0026gt;drop();\n\n\t//增加一個 MD 模型 (基於骨骼動畫)\n\tmodel_ptr = smgr_ptr-\u0026gt;addAnimatedMeshSceneNode(smgr_ptr-\u0026gt;getMesh(\"media/yodan.mdl\"),\n\t\t\t\t\t\t0, ID_CAN_COLLISION | ID_LIGHTING);\n\tmodel_ptr-\u0026gt;setPosition(core::vector3df(-90,-25,20));\n\tmodel_ptr-\u0026gt;setScale(core::vector3df(0.8f));\n\tmodel_ptr-\u0026gt;getMaterial(0).Lighting = true;\n\tmodel_ptr-\u0026gt;setAnimationSpeed(20.f);\n\n\tselector_ptr\t=\tsmgr_ptr-\u0026gt;createTriangleSelector(model_ptr);\n\tmodel_ptr-\u0026gt;setTriangleSelector(selector_ptr);\n\tselector_ptr-\u0026gt;drop();\n\n\t//增加一個光照\n\tscene::ILightSceneNode * light = smgr_ptr-\u0026gt;addLightSceneNode(0, core::vector3df(-60,100,400),\n\t\tvideo::SColorf(1.0f,1.0f,1.0f,1.0f), 600.0f);\n\tlight-\u0026gt;setID(ID_NO_COLLISION);\n\t\n\t//被揀選三角形 材質\n\tmaterial.setTexture(0, 0);\n\tmaterial.Lighting\t=\tfalse;\t//無光照效果\n\tmaterial.Wireframe\t=\ttrue;\t//只繪製線框\n\n\tirr::scene::ISceneNode* scene_nolight_ptr\t=\tNULL;\n\twhile(device_ptr-\u0026gt;run())\n\t{\n\t\tdriver_ptr-\u0026gt;beginScene();\n\t\t\t/*定義揀選線\n\t\t\t此處為一個 1000 長度 的線段 如果是激光之類的碰撞檢測 可以使用如下定義射線\n\t\t\t*/\n\t\t\tirr::core::line3df ray;\n\t\t\tray.start\t=\tcamera_ptr-\u0026gt;getPosition();\n\t\t\tray.end\t\t=\tray.start + (camera_ptr-\u0026gt;getTarget() - ray.start).normalize() * 1000;\n\t\t\t//揀選\n\t\t\tirr::core::vector3df intersection;\n\t\t\tirr::core::triangle3df triangle;\n\t\t\tirr::scene::ISceneNode* scene_note_ptr = NULL;\n\t\t\t\n\t\t\tscene_note_ptr\t=\tsmgr_ptr-\u0026gt;getSceneCollisionManager()-\u0026gt;getSceneNodeAndCollisionPointFromRay(ray\n\t\t\t\t\t,intersection\n\t\t\t\t\t,triangle\n\t\t\t\t\t,ID_CAN_COLLISION\n\t\t\t\t\t);\n\t\t\t\n\t\t\tif(scene_note_ptr)\n\t\t\t{\n\t\t\t\t//將廣告牌設置到揀選位置\n\t\t\t\tbillboard_ptr-\u0026gt;setPosition(intersection);\n\n\t\t\t\t//將三角形 繪製 出來 繪製前 需要重新 變換世界坐標\n\t\t\t\tdriver_ptr-\u0026gt;setTransform(video::ETS_WORLD, core::matrix4());\n\t\t\t\tdriver_ptr-\u0026gt;setMaterial(material);\n\t\t\t\tdriver_ptr-\u0026gt;draw3DTriangle(triangle, video::SColor(0,255,0,0));\n\n\t\t\t\t//設置 被選擇三角形所在場景節點 關閉光照\n\t\t\t\tif(scene_note_ptr != scene_nolight_ptr)\n\t\t\t\t{\n\t\t\t\t\tif(scene_nolight_ptr\n\t\t\t\t\t\t\u0026amp;\u0026amp; ID_LIGHTING \u0026amp; scene_nolight_ptr-\u0026gt;getID()\n\t\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\tscene_nolight_ptr-\u0026gt;setMaterialFlag(video::EMF_LIGHTING, true);\n\t\t\t\t\t}\n\t\t\t\t\tscene_nolight_ptr\t=\tscene_note_ptr;\n\t\t\t\t\tif(scene_nolight_ptr\n\t\t\t\t\t\t\u0026amp;\u0026amp; ID_LIGHTING \u0026amp; scene_nolight_ptr-\u0026gt;getID()\n\t\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\tscene_nolight_ptr-\u0026gt;setMaterialFlag(video::EMF_LIGHTING, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\n\n\t\tsmgr_ptr-\u0026gt;drawAll();\n\n\t\tdriver_ptr-\u0026gt;endScene();\n\t}\n\tdevice_ptr-\u0026gt;drop();\n\n\treturn 0;\n}\u003c/pre\u003e"