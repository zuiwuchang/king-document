var __v="\u003cpre class=\"prettyprint linenums\"\u003e#include \u0026lt;iostream\u0026gt;\n#include \"duktape.h\"\n\nint main()\n{\n    duk_context *ctx = duk_create_heap_default();\n    duk_eval_string(ctx, \"var v = [1,2,3,4,5];\");\n\n    duk_push_global_object(ctx);\n    {\n        duk_get_prop_string(ctx,-1,\"v\");\n\n        for(duk_size_t i=0;i\u0026lt;duk_get_length(ctx,-1);++i)\n        {\n            duk_get_prop_index(ctx,-1,i);\n            std::cout\u0026lt;\u0026lt;duk_to_int(ctx,-1)\u0026lt;\u0026lt;\",\";\n            duk_pop(ctx);\n        }\n\n        duk_size_t i = 0;\n        while(true)\n        {\n            if(!duk_get_prop_index(ctx,-1,i))\n            {\n                duk_pop(ctx);\n                break;\n            }\n            std::cout\u0026lt;\u0026lt;duk_to_int(ctx,-1)\u0026lt;\u0026lt;\",\";\n            duk_pop(ctx);\n\n            ++i;\n        }\n\n        i = 0;\n        while(true)\n        {\n            duk_get_prop_index(ctx,-1,i);\n            if(duk_is_undefined(ctx,-1))\n            {\n                duk_pop(ctx);\n                break;\n            }\n            std::cout\u0026lt;\u0026lt;duk_to_int(ctx,-1)\u0026lt;\u0026lt;\",\";\n            duk_pop(ctx);\n\n            ++i;\n        }\n\n        duk_pop(ctx);\n    }\n    duk_pop(ctx);\n\n    duk_destroy_heap(ctx);\n    return 0;\n}\u003c/pre\u003e"