var __v="\u003cpre class=\"k-pre\"\u003e//和os 本地 多字節編碼 轉換\n[static] QString QString::fromLocal8Bit(const char *str, int size = -1)\n[static] QString QString::fromLocal8Bit(const QByteArray \u0026amp;str)\nQByteArray QString::toLocal8Bit() const\n\n//和utf8 轉換\n\u003cstrong\u003e//c++11 已經確認 std::string 存儲的為 utf8 字符串\u003c/strong\u003e\n[static] QString QString::fromUtf8(const char *str, int size = -1)\n[static] QString QString::fromUtf8(const QByteArray \u0026amp;str)\nQByteArray QString::toUtf8() const\n\n[static] QString QString::fromStdString(const std::string \u0026amp;str)\nstd::string QString::toStdString() const\n\n//std::wstring 只有win32下 wchar_t 才是 2字節\n[static] QString QString::fromStdWString(const std::wstring \u0026amp;str)\nstd::wstring QString::toStdWString() const\n\n//std::u16string\n[static] QString QString::fromStdU16String(const std::u16string \u0026amp;str)\nstd::u16string QString::toStdU16String() const\n\n//utf32\n[static] QString QString::fromStdU32String(const std::u32string \u0026amp;str)\nstd::u32string QString::toStdU32String() const\n\u003c/pre\u003e"