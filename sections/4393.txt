var __v="\u003cpre class='k-pre'\u003eclient 需要 設置 \u003cstrong\u003eAllowHTTP\u003c/strong\u003e 允許 發送 http請求\n並且 覆蓋掉默認的 connect 操作 \u003cstrong\u003eDialTLS\u003c/strong\u003e\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003epackage main\n\nimport (\n\t\"crypto/tls\"\n\t\"fmt\"\n\t\"golang.org/x/net/http2\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net\"\n\t\"net/http\"\n)\n\nfunc main() {\n\t//創建 h2 客戶端\n\tclient := http.Client{\n\t\t//制度傳輸協議\n\t\tTransport: \u0026amp;http2.Transport{\n\t\t\tDialTLS: func(network, addr string, cfg *tls.Config) (net.Conn, error) {\n\t\t\t\tfmt.Println(\"只會被調用一次 DialTLS 因為同個服務器 後面的 請求都會 復用\")\n\t\t\t\treturn net.Dial(network, addr)\n\t\t\t},\n\t\t\t//允許發送 http 請求\n\t\t\tAllowHTTP: true,\n\t\t},\n\t}\n\n\t//多路復用 發送 多個 請求 只會使用 同個 socket\n\tch := make(chan (int))\n\tgo getUrl(ch, \u0026amp;client, \"1\")\n\tgo getUrl(ch, \u0026amp;client, \"2\")\n\n\tsum := 0\n\tfor sum \u0026lt; 2 {\n\t\t\u0026lt;-ch\n\t\tsum++\n\t}\n\n}\nfunc getUrl(ch chan (int), client *http.Client, u string) {\n\tresp, err := client.Get(\"http://127.0.0.1:8080/\" + u)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfmt.Println(string(body), body)\n\n\tif u == \"1\" {\n\t\tgetUrl(ch, client, \"3\")\n\t} else {\n\t\tch \u0026lt;- 1\n\t}\n}\n\u003c/pre\u003e"