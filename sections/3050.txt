var __v="\u003cpre class=\"k-pre\"\u003e尋找 前驅  其實就是 尋找後繼的 逆過程\n\n如果 存在左子樹 則 前驅爲 左樹中 最大元素\n否則 前驅爲 第一個 有右孩子的 祖先節點\n\u003c/pre\u003e\n\u003cpre class='prettyprint linenums'\u003e//返回 前驅節點/nil\nfunc Predecessor(x *Element) *Element {\n\tif x == nil {\n\t\treturn nil\n\t}\n\n\tif x.L != nil { //存在 左子樹\n\t\treturn Max(x.L) //後繼爲 左子樹中 最大元素\n\t}\n\n\t//後繼爲 第一個有 右孩子的 祖先節點\n\ty := x.P\n\tfor y != nil \u0026amp;\u0026amp; x == y.L {\n\t\tx = y\n\t\ty = y.P\n\t}\n\treturn y\n}\u003c/pre\u003e"