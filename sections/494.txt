var __v="\u003cpre class=\"k-pre\"\u003eGo的html/template包默认帮你过滤了html标签，但是有时候你只想要输出这个\u0026lt;script\u0026gt;alert()\u0026lt;/script\u0026gt;看起来正常的信息，该怎么处理？请使用text/template。请看下面的例子：\n\nimport \"text/template\"\n...\nt, err := template.New(\"foo\").Parse(`{{define \"T\"}}Hello, {{.}}!{{end}}`)\nerr = t.ExecuteTemplate(out, \"T\", \"\u0026lt;script\u0026gt;alert('you have been pwned')\u0026lt;/script\u0026gt;\")\n输出\n\nHello, \u0026lt;script\u0026gt;alert('you have been pwned')\u0026lt;/script\u0026gt;!\n或者使用template.HTML类型\n\nimport \"html/template\"\n...\nt, err := template.New(\"foo\").Parse(`{{define \"T\"}}Hello, {{.}}!{{end}}`)\nerr = t.ExecuteTemplate(out, \"T\", template.HTML(\"\u0026lt;script\u0026gt;alert('you have been pwned')\u0026lt;/script\u0026gt;\"))\n输出\n\nHello, \u0026lt;script\u0026gt;alert('you have been pwned')\u0026lt;/script\u0026gt;!\n转换成template.HTML后，变量的内容也不会被转义\n\n转义的例子：\n\nimport \"html/template\"\n...\nt, err := template.New(\"foo\").Parse(`{{define \"T\"}}Hello, {{.}}!{{end}}`)\nerr = t.ExecuteTemplate(out, \"T\", \"\u0026lt;script\u0026gt;alert('you have been pwned')\u0026lt;/script\u0026gt;\")\n转义之后的输出：\n\nHello, \u0026lt;script\u0026gt;alert('you have been pwned')\u0026lt;/script\u0026gt;!\u003c/pre\u003e"