var __v="\u003cpre class=\"k-pre\"\u003eD3DX 使用網格 存儲模型 除了使用D3DXCreate* 創建一個 預定義網格外 \n還可以創建 任意3D網格\n\nID3DXMesh由多個 子集組成 每個子集以DWORD標識其id\nID3DXMesh將多個 相同屬性的三角形單元組成一個子集\nID3DXMesh存在一個 屬性表 DWORD 數組 其餘每個三角形單元對應 其值記錄了此三角形單元 所屬子集id\n\n首先使用\n HRESULT  D3DXCreateMeshFVF(\n  __in   DWORD NumFaces,\t\t//網格組成的 三角單元 數\n  __in   DWORD NumVertices,\t\t//頂點緩存中 頂點個數數\n  __in   DWORD Options,\t\t\t//網格創建標記\n  __in   DWORD FVF,\t\t\t//頂點描述\n  __in   LPDIRECT3DDEVICE9 pD3DDevice,\t//設備接口指針\n  __out  LPD3DXMESH *ppMesh\t\t//返回ID3DXMesh接口指針\n);\n創建一個空網格 獲取 ID3DXMesh接口指針\n\nOptions取值\nD3DXMESH_32BIT\t\t\t//使用32位索引\nD3DXMESH_MANAGED\t\t//網格數據被存儲與託管內存池中\nD3DXMESH_WRITEONLY\t\t//網格數據為只讀\nD3DXMESH_DYNAMIC\t\t//網格緩存使用動態內存\n...\n\n\n之後使用\nHRESULT LockVertexBuffer(\n  [in]           DWORD Flags,\n  [out, retval]  LPVOID *ppData\n);\nHRESULT UnlockVertexBuffer();\n\nHRESULT LockIndexBuffer(\n  [in]           DWORD Flags,\n  [out, retval]  LPVOID *ppData\n);\nHRESULT UnlockIndexBuffer();\n鎖定/解鎖 頂點緩存/索引緩存 並寫入 頂點數據/索引數據\n\n使用\nHRESULT LockAttributeBuffer(\n  [in]   DWORD Flags,\n  [out]  DWORD **ppData\n);\n鎖定/解鎖 屬性表 並寫入 每個三角單元所 屬子集id\n\nFlags 鎖定標記取值 參加 頂點緩存 Lock\n\n使用\nHRESULT DrawSubset(\n  [in]  UINT AttribId\t//子集id\n);\n繪製 某個子集的 全部 三角單元\n\u003c/pre\u003e"