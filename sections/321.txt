var __v="\u003cpre class=\"k-pre\"\u003etype os.File struct 包含了對档案的操作\n\nconst (\n\tO_RDONLY int = syscall.O_RDONLY // open the file read-only.\n\tO_WRONLY int = syscall.O_WRONLY // open the file write-only.\n\tO_RDWR   int = syscall.O_RDWR   // open the file read-write.\n\tO_APPEND int = syscall.O_APPEND // append data to the file when writing.\n\tO_CREATE int = syscall.O_CREAT  // create a new file if none exists.\n\tO_EXCL   int = syscall.O_EXCL   // used with O_CREATE, file must not exist\n\tO_SYNC   int = syscall.O_SYNC   // open for synchronous I/O.\n\tO_TRUNC  int = syscall.O_TRUNC  // if possible, truncate file when opened.\n)\n\n//以 0666 umask(linux 權限) O_RDWR 創建档案(已經存在覆蓋之)\nfunc Create(name string) (file *File, err error)\n\n//以 O_RDONLY 打開档案\nfunc Open(name string) (file *File, err error)\n\n//以指定flag方式 打開档案\nfunc OpenFile(name string, flag int, perm FileMode) (file *File, err error)\n\n//創建 管道\nfunc Pipe() (r *File, w *File, err error)\n\u003c/pre\u003e"