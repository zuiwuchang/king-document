var __v="\n\u003cpre class='prettyprint linenums'\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;cassert\u0026gt;\n#include \u0026lt;libplatform/libplatform.h\u0026gt;\n#include \u0026lt;v8.h\u0026gt;\n\nint main(int argc, char* argv[])\n{\n    std::cout\u0026lt;\u0026lt;\"v8 version : \"\u0026lt;\u0026lt;v8::V8::GetVersion()\u0026lt;\u0026lt;\"\\n\";\n\n    //初始化 V8 綁定數據\n    assert(v8::V8::InitializeICUDefaultLocation(argv[0]));\n    v8::V8::InitializeExternalStartupData(argv[0]);\n\n    //初始化 platform\n    std::unique_ptr\u0026lt;v8::Platform\u0026gt;  platform(v8::platform::CreateDefaultPlatform());\n    assert(platform);\n    v8::V8::InitializePlatform(platform.get());\n    {\n        //初始化 v8\n        assert(v8::V8::Initialize());\n        {\n            std::cout\u0026lt;\u0026lt;\"V8 Initialize ok\"\u0026lt;\u0026lt;std::endl;\n        }\n        //停止 釋放 v8 資源\n        //一旦釋放 v8 v8 將不能再被重新 初始化\n        assert(v8::V8::Dispose());\n    }\n    //釋放 platform 資源\n    v8::V8::ShutdownPlatform();\n\n    return 0;\n}\u003c/pre\u003e"