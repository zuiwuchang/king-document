var __v="\n\u003cpre class='prettyprint linenums'\u003epackage main\n\nimport (\n\t\"github.com/boombuler/barcode\"\n\t\"github.com/boombuler/barcode/qr\"\n\t\"image\"\n\t//\"image/jpeg\"\n\t\"image/png\"\n\t\"log\"\n\t\"os\"\n)\n\nfunc main() {\n\t//qr 內容\n\tstr := \"qr 內容 測試\"\n\n\t//創建 qr 碼\n\tcode, e := qr.Encode(str, qr.L, qr.Unicode /*utf8*/)\n\tif e != nil {\n\t\tlog.Fatalln(e)\n\t}\n\n\t//顯示條碼內容\n\tlog.Println(code.Content())\n\n\t//縮放 qr 碼\n\tcode, e = barcode.Scale(code, 300, 300)\n\tif e != nil {\n\t\tlog.Fatal(e)\n\t}\n\n\t//保存爲圖像\n\twritePng(\"test.png\", code)\n}\nfunc writePng(file string, img image.Image) {\n\t//創建圖像檔案\n\tf, e := os.Create(file)\n\tif e != nil {\n\t\tlog.Fatal(e)\n\t}\n\tdefer f.Close()\n\n\t//編碼圖像 到 writer\n\te = png.Encode(f, img)\n\t//e = jpeg.Encode(f, img, \u0026amp;jpeg.Options{100}) //100爲質量最好的 jpeg\n\tif e != nil {\n\t\tlog.Fatal(e)\n\t}\n}\n\u003c/pre\u003e"