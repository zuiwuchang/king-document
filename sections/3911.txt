var __v="\n\u003cpre class='prettyprint linenums'\u003e#include \u0026lt;iostream\u0026gt;\n#include \u0026lt;boost/system/system_error.hpp\u0026gt;\n\nclass animal_category :\n    public boost::system::error_category\n{\npublic:\n    virtual const char *name() const BOOST_SYSTEM_NOEXCEPT\n    {\n        return \"animal\";\n    }\n    virtual std::string message(int ev) const\n    {\n        std::string msg(\"animal:\");\n        switch(ev)\n        {\n        case 0:\n            return msg + \"success\";\n        case 1:\n            return msg + \"msg 1\";\n        case 2:\n            return msg + \"msg 2\";\n        }\n        return msg + \"unknow\";\n    }\n    static animal_category\u0026amp; get()\n    {\n        static animal_category instance;\n        return instance;\n    }\n};\n\nint main()\n{\n    try\n    {\n        animal_category\u0026amp; cat = animal_category::get();\n        boost::system::error_code ec(1,cat);\n        throw boost::system::system_error(ec);\n    }\n    catch(const boost::system::system_error\u0026amp; e)\n    {\n        std::cout\u0026lt;\u0026lt;e.what()\u0026lt;\u0026lt;\"\\n\";\n        const boost::system::error_code\u0026amp; ec = e.code();\n        std::cout\u0026lt;\u0026lt;ec.message()\u0026lt;\u0026lt;\"\\n\";\n    }\n    return 0;\n}\n\u003c/pre\u003e"