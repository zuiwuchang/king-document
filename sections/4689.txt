var __v="\n\u003cpre class='prettyprint linenums'\u003evar net = require(\"net\")\n//定義 服務器 地址\nconst Port = 1102\nconst Host = \"\"\n//創建 服務器\nvar server = net.createServer(function (c) {\n    // 新連接\n    console.log('client connected :', c.remoteAddress, c.remotePort);\n    // 監聽 斷開連接\n    c.on('close', () =\u0026gt; {\n        // 物理 end 還是 error 後 close 都會被調用\n        console.log('client close :', c.remoteAddress, c.remotePort);\n\n        // 銷毀 連接\n        c.destroy(true)\n    }).on('end',()=\u0026gt;{\n        console.log('end')\n    }).on('error',(e)=\u0026gt;{\n        console.log('error')\n    })\n\n    // 接受到數據\n    c.on('data', function(buffer) {\n        console.log(buffer.toString())\n        \n        // 發送數據\n        if(!c.write(buffer)){\n            console.log(\"bad write\");\n        }\n    });\n}).on('error', (e) =\u0026gt; {// 創建失敗 錯誤處理\n    if (e.code === 'EADDRINUSE') {\n        console.log('地址端口已經被佔用,等待重試...');\n        setTimeout(() =\u0026gt; {\n            server.close();\n            server.listen(Port, Host);\n        }, 1000);\n    }\n}).listen(Port, Host, undefined, () =\u0026gt; {//監聽 地址 端口\n    console.log(\"work at \", Host, \":\", Port)\n});\u003c/pre\u003e"