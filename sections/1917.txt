var __v="\n\u003cpre class='prettyprint linenums'\u003e#include\u0026lt;Poco/Data/SQLite/Connector.h\u0026gt;\n#include\u0026lt;Poco/Data/SQLite/SQLiteException.h\u0026gt;\n#include\u0026lt;Poco/Data/Common.h\u0026gt;\n#include\u0026lt;Poco/Data/RecordSet.h\u0026gt;\n \nint _tmain(int argc, _TCHAR* argv[])\n{\n\t//註冊SQLite連接器\n\tPoco::Data::SQLite::Connector::registerConnector();\n \n\ttry\n\t{\n\t\t//連接到數據庫\n\t\tPoco::Data::Session  session(Poco::Data::SQLite::Connector::KEY\t//std::string 指明數據庫種類\n\t\t\t,\"test.db\"\t//連接字符串\n\t\t\t);\n \n\t\t//創建表\n\t\tsession\u0026lt;\u0026lt;\"create table if not exists test (id int,name varchar(20))\",Poco::Data::now;\n \n\t\t//刪除數據\n\t\tsession\u0026lt;\u0026lt;\"delete from test\",Poco::Data::now;\n\t\t\n\t\t//插入數據\n\t\tstd::vector\u0026lt;int\u0026gt; ids;\n\t\tstd::vector\u0026lt;std::string\u0026gt; names;\n\t\tstd::string name;\n\t\tfor(int i=0;i\u0026lt;10;++i)\n\t\t{\n\t\t\tids.push_back(i);\n\t\t\tname\t=\t\"name\";\n\t\t\tname\t+=\tboost::lexical_cast\u0026lt;std::string\u0026gt;(i);\n\t\t\tnames.push_back(name);\n\t\t}\n\t\tsession\u0026lt;\u0026lt;\"insert into test values (? ,?)\",Poco::Data::use(ids),Poco::Data::use(names),Poco::Data::now;\n \n\t\t//查詢數據\n\t\tids.clear();\n\t\tnames.clear();\n\t\tsession\u0026lt;\u0026lt;\"select * from test\",Poco::Data::into(ids),Poco::Data::into(names),Poco::Data::now;\n\t\tfor(unsigned i=0;i\u0026lt;ids.size();++i)\n\t\t{\n\t\t\tstd::cout\u0026lt;\u0026lt;\"id\\t=\\t\"\u0026lt;\u0026lt;ids[i]\u0026lt;\u0026lt;\"\\t\\tname\\t=\\t\"\u0026lt;\u0026lt;names[i]\u0026lt;\u0026lt;\"\\n\";\n\t\t}\n \n \n\t\t//另一個 使用Statement的方法\n\t\tsession\u0026lt;\u0026lt;\"delete from test\",Poco::Data::now;\n\t\t//插入\n\t\tint id;\n\t\tPoco::Data::Statement stm = (session\u0026lt;\u0026lt;\n\t\t\t\t\"insert into test values (? ,?)\",\n\t\t\t\tPoco::Data::use(id),\n\t\t\t\tPoco::Data::use(name));\n\t\tfor(int i=0;i\u0026lt;10;++i)\n\t\t{\n\t\t\tid\t\t=\ti;\n\t\t\tname\t=\t\"name\";\n\t\t\tname\t+=\tboost::lexical_cast\u0026lt;std::string\u0026gt;(i);\n\t\t\t\n\t\t\tstm.execute();\n\t\t}\n \n\t\t//RecordSet\n\t\tstm\t=\tsession\u0026lt;\u0026lt;\"select * from test\";\n\t\t\n\t\tPoco::Data::RecordSet rs(stm);\n\t\tstm.execute();\n\t\tfor (std::size_t col = 0; col \u0026lt; rs.columnCount(); ++col)\n\t\t{\n\t\t\tstd::cout \u0026lt;\u0026lt;rs.columnName(col) \u0026lt;\u0026lt; \" \";\n\t\t}\t\t\n\t\tbool more = rs.moveFirst();\n\t\twhile (more)\n\t\t{\n\t\t\tfor (std::size_t col = 0; col \u0026lt; rs.columnCount(); ++col)\n\t\t\t{\n\t\t\t\tstd::cout \u0026lt;\u0026lt; rs[col].convert\u0026lt;std::string\u0026gt;() \u0026lt;\u0026lt; \" \";\n\t\t\t}\n\t\t\tstd::cout \u0026lt;\u0026lt; std::endl;\n\t\t\tmore = rs.moveNext();\n\t\t}\n\t\tputs(\"\");\n \n\t\tstm\t=\t(session\u0026lt;\u0026lt;\"select * from test\",Poco::Data::limit(3));\n\t\tPoco::Data::RecordSet rs1(stm);\n\t\twhile(!stm.done())\n\t\t{\n\t\t\tstm.execute();\n\t\t\tbool more = rs1.moveFirst();\n\t\t\twhile (more)\n\t\t\t{\n\t\t\t\tfor (std::size_t col = 0; col \u0026lt; rs1.columnCount(); ++col)\n\t\t\t\t{\n\t\t\t\t\tstd::cout \u0026lt;\u0026lt; rs1[col].convert\u0026lt;std::string\u0026gt;() \u0026lt;\u0026lt; \" \";\n\t\t\t\t}\n\t\t\t\tstd::cout \u0026lt;\u0026lt; std::endl;\n\t\t\t\tmore = rs1.moveNext();\n\t\t\t}\n\t\t}\n \n\t}\n\tcatch(Poco::Data::SQLite::SQLiteException\u0026amp; e)\n\t{\n\t\tstd::cout\u0026lt;\u0026lt;e.displayText()\u0026lt;\u0026lt;std::endl;\n\t}\n\t\n \n\t//卸載SQLite連接器\n\tPoco::Data::SQLite::Connector::unregisterConnector();\n \n\tstd::system(\"pause\");\n\treturn 0;\n}\u003c/pre\u003e"