var __v="\u003cpre class=\"k-pre\"\u003e* Licensed to the Apache Software Foundation (ASF) under one or more  \npackage org.apache.logging.log4j.core.config;  \n  \nimport java.io.Serializable;  \n  \nimport org.apache.logging.log4j.Level;  \nimport org.apache.logging.log4j.core.Appender;  \nimport org.apache.logging.log4j.core.Layout;  \nimport org.apache.logging.log4j.core.appender.ConsoleAppender;  \nimport org.apache.logging.log4j.core.layout.PatternLayout;  \nimport org.apache.logging.log4j.util.PropertiesUtil;  \n  \n/** \n * The default configuration writes all output to the Console using the default logging level. You configure default \n * logging level by setting the system property \"org.apache.logging.log4j.level\" to a level name. If you do not \n * specify the property, Log4j uses the ERROR Level. Log Events will be printed using the basic formatting provided \n * by each Message. \n */  \npublic class DefaultConfiguration extends BaseConfiguration {  \n  \n    /** \n     * The name of the default configuration. \n     */  \n    public static final String DEFAULT_NAME = \"Default\";  \n    /** \n     * The System Property used to specify the logging level. \n     */  \n    public static final String DEFAULT_LEVEL = \"org.apache.logging.log4j.level\";  \n  \n    /** \n     * Constructor to create the default configuration. \n     */  \n    public DefaultConfiguration() {  \n  \n        setName(DEFAULT_NAME);  \n        final Layout\u0026lt;? extends Serializable\u0026gt; layout =  \n                PatternLayout.createLayout(\"%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n\", null, null, null, null);  \n        final Appender appender =  \n                ConsoleAppender.createAppender(layout, null, \"SYSTEM_OUT\", \"Console\", \"false\", \"true\");  \n        appender.start();  \n        addAppender(appender);  \n        final LoggerConfig root = getRootLogger();  \n        root.addAppender(appender, null, null);  \n  \n        final String levelName = PropertiesUtil.getProperties().getStringProperty(DEFAULT_LEVEL);  \n        final Level level = levelName != null \u0026amp;\u0026amp; Level.valueOf(levelName) != null ?  \n            Level.valueOf(levelName) : Level.ERROR;  \n        root.setLevel(level);  \n    }  \n  \n    @Override  \n    protected void doConfigure() {  \n    }  \n}  \n\n相當於\n\u0026lt;?xml version=\"1.0\" encoding=\"UTF-8\"?\u0026gt;  \n\u0026lt;Configuration status=\"WARN\"\u0026gt;  \n  \u0026lt;Appenders\u0026gt;  \n    \u0026lt;Console name=\"Console\" target=\"SYSTEM_OUT\"\u0026gt;  \n      \u0026lt;PatternLayout pattern=\"%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n\"/\u0026gt;  \n    \u0026lt;/Console\u0026gt;  \n  \u0026lt;/Appenders\u0026gt;  \n  \u0026lt;Loggers\u0026gt;  \n    \u0026lt;Root level=\"error\"\u0026gt;  \n      \u0026lt;AppenderRef ref=\"Console\"/\u0026gt;  \n    \u0026lt;/Root\u0026gt;  \n  \u0026lt;/Loggers\u0026gt;  \n\u0026lt;/Configuration\u0026gt;\n\u003c/pre\u003e"