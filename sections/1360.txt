var __v="\u003cpre class=\"k-pre\"\u003elist\u0026lt;Elem\u0026gt; c\nlist\u0026lt;Elem\u0026gt; c1(c2)\nlist\u0026lt;Elem\u0026gt; c(n)\nlist\u0026lt;Elem\u0026gt; c(n,elem)\nlist\u0026lt;Elem\u0026gt; c(begin,end)\nc.!list\u0026lt;Elem\u0026gt;()\n\nc.size()\nc.empty()\nc.max_size()\n==\n!=\n\u0026lt;\n\u0026gt;\n\u0026lt;=\n\u0026gt;=\n\nc1=c2\nc.assign(n,elem)\nc.assign(beg,end)\nc1.swap(c2)\nswap(c1,c2)\n\nc.front()\nc.back()\n\nc.begin()\nc.end()\nc.rbegin()\nc.rend()\n\nc.insert(iter,elem)\nc.insert(iter,n,elem)\nc.insert(iter,begin,end)\n\nc.push_back()\nc.pop_back()\nc.push_front(elem)\nc.pop_front()\n\u003cstrong\u003ec.remove(val) //移除所有值为val的元素\nc.remove_if(op) //移除造成 op(elem)结果为true的元素\u003c/strong\u003e\nc.erase(iter)\nc.erase(begin,end)\nc.resize(n)\nc.resize(n,elem)\nc.clear()\n\nc.unique() //存在若干相邻元素值相等 移除之 只保留一个\nc.unique(op) //存在若干相邻元素 使op(elem) 返回true 移除之 只保留一个\nc1.splice(iter,c2) //将容器c2 安插到c1\nc1.splice(iter,c2,c2iter) //容器c2内c2iter所指元素（1个）安插到c1 \n\u003cstrong\u003ec.sort() //以operator\u0026lt;排序\nc.sort(op) //以bool op(elem1,elem2)排序\u003c/strong\u003e\ncl.merger(c2) //在c1 c2都已排序情况下 将c2安插到c1 并保证已序\nc1.merge(c2,op) //同上 不过以bool op(elem1,emem2) 排序\nc.reverse() 所有元素反序\n\u003c/pre\u003e"