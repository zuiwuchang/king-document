var __v="\n\u003cpre class='prettyprint linenums'\u003e//保存hook的字节\nbyte code[5]={0};\n//hook代码\nbool inlineHook();\n//自定义 hook 函数\nvoid __stdcall hookSleep(DWORD dwMilliseconds);\nint _tmain(int argc, _TCHAR* argv[])\n{\n\tinlineHook();\n\tSleep(100);\n\tsystem(\"pause\");\n\treturn 0;\n}\nbool inlineHook()\n{\n\tPVOID address=Sleep;\n\t\n\tMEMORY_BASIC_INFORMATION mbi_thunk;  \n    //查询页信息。  \n\tVirtualQuery(address, \u0026amp;mbi_thunk, sizeof(MEMORY_BASIC_INFORMATION));\n\t\n\t//改动页保护属性为读写。\n\tVirtualProtect(mbi_thunk.BaseAddress,mbi_thunk.RegionSize,PAGE_EXECUTE_READWRITE, \u0026amp;mbi_thunk.Protect);\n\n\t//保存原代码\n\tmemcpy(code,(PVOID)address,5);\n\n\t//hook\n\t__asm\n\t{\n\t\tmov eax,hookSleep;\n\t\tsub eax,Sleep;\n\t\tsub eax,5;\n\n\t\tmov ebx,Sleep\n\t\tmov byte ptr [ebx],0xE9;\n\t\tmov [ebx+1],eax;\n\t}\n\tVirtualProtect(mbi_thunk.BaseAddress,mbi_thunk.RegionSize, mbi_thunk.Protect, NULL);\n\n\treturn true;\n}\n\n//_declspec(naked) //此声明代表生成\nvoid __stdcall hookSleep(DWORD dwMilliseconds)\n{\n\tstd::cout\u0026lt;\u0026lt;\"hook成功 传入参数为\"\u0026lt;\u0026lt;dwMilliseconds\u0026lt;\u0026lt;std::endl;\n\tif(dwMilliseconds\u0026lt;100)\n\t{\n\t\tstd::cout\u0026lt;\u0026lt;\"执行hook操作\"\u0026lt;\u0026lt;std::endl;\n\t}\n\telse\n\t{\n\t\t//跳转执行原函数\n\t\t__asm\n\t\t{\n\t\t\t//跳转执行原函数\n\t\t\tmov eax,Sleep;\n\t\t\tadd eax,5;\n\t\t\tjmp eax;\n\t\t}\n\t}\n\n}\u003c/pre\u003e"