var __v="\u003cpre class=\"prettyprint linenums\"\u003epackage main\n\nimport (\n\t\"fmt\"\n\t_ \"github.com/go-sql-driver/mysql\"\n\t\"github.com/go-xorm/core\"\n\t\"github.com/go-xorm/xorm\"\n\t\"time\"\n)\n\ntype User struct {\n\tId   int64\n\tName string `xorm:\"varchar(25) notnull unique 'uname'\"`\n\t//將 Name 映射到表達 uname 字段\n\n\tCreatedAt time.Time `xorm:\"created\"` //自動 insert 時間\n}\n\nfunc main() {\n\n\tengine, err := xorm.NewEngine(\"mysql\", \"dark:jayjolin@/dark?charset=utf8\")\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t}\n\n\t//設置表名 前綴 後綴\n\tvar mapper core.IMapper\n\tmapper = core.NewPrefixMapper(core.SnakeMapper{}, \"dark_\")\n\tmapper = core.NewSuffixMapper(mapper, \"_test\")\n\tengine.SetTableMapper(mapper)\n\n\t//創建表\n\tengine.DropTables(\u0026amp;User{})\n\tengine.CreateTables(\u0026amp;User{} /*,...*/)\n\n\t//插入 1 條數據 若設置了id 將不使用 自增\n\tu := User{Name: \"illusive man\"}\n\tcount, err := engine.Insert(\u0026amp;u /*,...*/)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t}\n\tfmt.Printf(\"count=%v %v\\n\", count, u)\n\n\t//批量插入 不會返回自增 id\n\tus := make([]*User, 5)\n\tfor i, _ := range us {\n\t\tus[i] = \u0026amp;User{}\n\t\tus[i].Name = fmt.Sprintf(\"solder %v\", i)\n\t}\n\tcount, err = engine.Insert(\u0026amp;us /*,...*/)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\treturn\n\t}\n\tfmt.Printf(\"count=%v\\n\", count)\n\tfor _, v := range us {\n\t\tfmt.Printf(\"%v\", v)\n\t}\n}\u003c/pre\u003e"