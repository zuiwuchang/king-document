var __v="\n\u003cpre class='prettyprint linenums'\u003eint _tmain(int argc, _TCHAR* argv[])\n{\n\t//註冊SQLite連接器\n\tPoco::Data::SQLite::Connector::registerConnector();\n\n\ttry\n\t{\n\t\t//連接到數據庫\n\t\tPoco::Data::Session  session(Poco::Data::SQLite::Connector::KEY\t//std::string 指明數據庫種類\n\t\t\t,\"test.db\"\t//連接字符串\n\t\t\t);\n\n\t\t//創建表\n\t\tsession\u0026lt;\u0026lt;\"create table if not exists test (mybinary blob)\",Poco::Data::now;\n\t\tsession\u0026lt;\u0026lt;\"delete from test\",Poco::Data::now;\n\n\n\t\t//讀取二進制數據\n\t\tstd::ifstream inf(\"123.PNG\",std::ios::binary | std::ios::in);\n\t\tinf.seekg(0,std::ios::end);\n\t\tBOOST_AUTO(count,inf.tellg());\n\t\tinf.seekg(0,std::ios::beg);\n\t\tboost::shared_array\u0026lt;char\u0026gt; ptr(new char[count]);\n\t\tinf.read(ptr.get(),count);\n\t\tinf.close();\n\t\t\n\t\t//構造 BLOB\n\t\tPoco::Data::BLOB blob;\t\t\t\t//blob(ptr.get(),count);\n\t\tblob.appendRaw(ptr.get(),count);\t//增加數據到尾部\n\n\t\t//插入二進制數據\n\t\tsession\u0026lt;\u0026lt;\"insert into test values (?)\",Poco::Data::use(blob),Poco::Data::now;\n\n\t\t//讀取二進制數據\n\t\tPoco::Data::BLOB blob1;\n\t\tsession\u0026lt;\u0026lt;\"select * from test\",Poco::Data::into(blob1),Poco::Data::now;\n\n\t\t//寫入二進制文件\n\t\tstd::ofstream outf(\"456.PNG\",std::ios::binary | std::ios::out | std::ios::trunc);\n\t\toutf.write(blob1.rawContent(),blob1.size());\n\t\toutf.close();\n\t\n\t}\n\tcatch(Poco::Data::SQLite::InvalidSQLStatementException\u0026amp; e)\n\t{\n\t\tstd::cout\u0026lt;\u0026lt;e.displayText()\u0026lt;\u0026lt;std::endl;\n\t}\n\n\t//卸載SQLite連接器\n\tPoco::Data::SQLite::Connector::unregisterConnector();\n\n\tstd::system(\"pause\");\n\treturn 0;\n}\u003c/pre\u003e"