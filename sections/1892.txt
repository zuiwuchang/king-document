var __v="\u003cpre class=\"k-pre\"\u003e\u003cstrong\u003e*.h\u003c/strong\u003e\n\u003cpre class='prettyprint linenums'\u003e#ifndef WIDGET_H\n#define WIDGET_H\n\n#include \u0026lt;QGLWidget\u0026gt;\n\nnamespace Ui {\nclass Widget;\n}\n\nclass Widget : public QGLWidget\n{\n    Q_OBJECT\n\npublic:\n    explicit Widget(QWidget *parent = 0);\n    ~Widget();\n\nprivate:\n    Ui::Widget *ui;\n\nprotected:\n    virtual void initializeGL() override;\n    virtual void resizeGL(int w, int h)override;\n    virtual void paintGL()override;\n};\n\n#endif // WIDGET_H\u003c/pre\u003e\n\n\u003cstrong\u003e*.cpp\u003c/strong\u003e\n\u003cpre class='prettyprint linenums'\u003e#include \"widget.h\"\n#include \"ui_widget.h\"\n\nWidget::Widget(QWidget *parent) :\n    QGLWidget(parent),\n    ui(new Ui::Widget)\n{\n    ui-\u0026gt;setupUi(this);\n}\n\nWidget::~Widget()\n{\n    delete ui;\n}\nvoid Widget::initializeGL()\n{\n    // Set up the rendering context, define display lists etc.:\n    //...\n    glClearColor(0.0f,0.0f,0.0f,0.0f);\n    //glEnable(GL_DEPTH_TEST);\n    //...\n\n    glMatrixMode(GL_PROJECTION);\n    glOrtho(0,1,0,1,-1,1);\n}\nvoid Widget::resizeGL(int w, int h)\n{\n    // setup viewport, projection etc.:\n    glViewport(0, 0, (GLint)w, (GLint)h);\n    //...\n    //glFrustum(...);\n    //...\n}\nvoid Widget::paintGL()\n{\n    glClear(GL_COLOR_BUFFER_BIT);\n\n    glColor3f(1.0f,0.0f,0.0f);\n\n    glLoadIdentity();\n    glOrtho(0,1,0,1,-1,1);\n\n    glRectf(0.25,0.25,0.75,0.75);\n}\u003c/pre\u003e\n\u003c/pre\u003e"