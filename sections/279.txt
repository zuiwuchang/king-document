var __v="\u003cpre class=\"k-pre\"\u003eFind***XXX\nFind 和 Mattch 一樣 提供了 對三種 數據源的 處理 []byte string io.RuneReader \n\n//返回 第一個 被匹配的 字符串\n//沒有 匹配字符串 返回 空字符串\nfunc (re *Regexp) FindString(s string) string\n\n//同 FindString 不過 返回 的是 匹配字符串位置 (匹配字符串爲 s[loc[0]:loc[1]])\n//... 返回 nil\nfunc (re *Regexp) FindStringIndex(s string) (loc []int)\n\n//同 FindString 同時 如果存在 () 子表達式 返回 子表達式\n//... 返回 nil\nfunc (re *Regexp) FindStringSubmatch(s string) []string\n\n//同 FindStringSubmatch 但 返回 位置\nfunc (re *Regexp) FindStringSubmatchIndex(s string) []int\n\n//返回 所有被 匹配的 字符串 的 slice\n//沒有 匹配字符串 返回 nil\nfunc (re *Regexp) FindAllString(s string, n int) []string\nFindAllXXX\n\u003c/pre\u003e"