var __v="\u003cpre class=\"k-pre\"\u003eStatus SetDashStyle(DashStyle dashStyle);\n\n\u003ctable class=\"table\"\u003e\n\u003ctr\u003e\u003ctd\u003edashStyle取值\u003c/td\u003e\u003ctd\u003e含义\u003c/td\u003e\u003ctd\u003e效果\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eGdiplus::DashStyleSolid\u003c/td\u003e\u003ctd\u003e直线\u003c/td\u003e\u003ctd\u003e\u003cimg src=\"/sections/2946/image/DashStyleSolid.PNG\"\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eGdiplus::DashStyleDash\u003c/td\u003e\u003ctd\u003e虚线\u003c/td\u003e\u003ctd\u003e\u003cimg src=\"/sections/2946/image/DashStyleDash.PNG\"\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eGdiplus::DashStyleDot\u003c/td\u003e\u003ctd\u003e点线\u003c/td\u003e\u003ctd\u003e\u003cimg src=\"/sections/2946/image/DashStyleDot.PNG\"\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eGdiplus::DashStyleDashDot\u003c/td\u003e\u003ctd\u003e点虚线\u003c/td\u003e\u003ctd\u003e\u003cimg src=\"/sections/2946/image/DashStyleDashDot.PNG\"\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eGdiplus::DashStyleDashDotDot\u003c/td\u003e\u003ctd\u003e双点虚线\u003c/td\u003e\u003ctd\u003e\u003cimg src=\"/sections/2946/image/DashStyleDashDotDot.PNG\"\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd\u003eGdiplus::DashStyleCustom\u003c/td\u003e\u003ctd\u003e自定 线性风格\u003c/td\u003e\u003ctd\u003e需要调用 SetDashPattern函数设置线性风格\u003cbr\u003e\u003cimg src=\"/sections/2946/image/DashStyleCustom.PNG\"\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003c/table\u003e\n\n Status SetDashPattern(  \n //长度数组 其中每个元素分别表示 线段长 相邻下一个为空白长 相邻下一个为线段长...        \n\t const REAL *dashArray, \n\tINT count//数组长\n);\n\n//获取线性风格\nStatus GetDashPattern(          REAL *dashArray,\n\tINT count\n);\n\u003c/pre\u003e"