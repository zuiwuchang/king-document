var __v="\u003cpre class=\"k-pre\"\u003eclass的成员函数为template \n这通常被作为两个型别之间的自动转换\n\ntemplate\u0026lt;typename T\u0026gt;\nclass Test{\nprivate:\n\tT value;\npublic:\n\tTest(T x)\n\t{\n\t\tvalue=x;\n\t}\n\n\ttemplate\u0026lt;U\u0026gt;\n\tvoid assion(const Test\u0026lt;U\u0026gt; \u0026amp;x)\n\t{\n\t\tvalue=x.getValue();\n\t}\n\tT getValue() const\n\t{\n\t\treturn value;\n\t}\n};\n\n在复制对象时实现隐式转换\ntemplate\u0026lt;typename T\u0026gt;\nclass Test{\npublic:\ntemplate\u0026lt;typename U\u0026gt;\nTest(const Test\u0026lt;U\u0026gt;\u0026amp; x)\n{...}\n};\n\nTest\u0026lt;int\u0026gt;a;\nTest\u0026lt;double\u0026gt;b(a); //template constructor\nTest\u0026lt;int\u0026gt;c(a); //copy construct 若想template con...需要覆盖copy con...\n\u003c/pre\u003e"